3a
07754959cdaf Merge tag 'android-9.0.0_r0.79'
e88a67bd1f73 Revert "init: Bump SchedTune boost levels"
1d03f9337bce Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
e454d51cc8f0 cpu_input_boost: Make all params read-only
3a77651d7407 sched tune 1
854b1877565e defconfig: BOOST FREQ HAX
53ca1fde4caa cpufreq: FREQ GOV HAX
8c6499b77cc4 zsmalloc
be8561a69cae mm: allow __GFP_MOVABLE to use CMA memory
159920f715eb defconfig: Bump default SchedTune boost level
93215f0b82bb init: Bump SchedTune boost levels
c7e73e967e60 sched/fair.c: Don't allow SchedTune boosted tasks to be migrated to small cores
d7010008ca23 scsi: ufs: Remove 10 ms CPU idle latency unvote timeout
282666f3f4fc init: Initialize block I/O and CFQ cgroup values during boot
a4bfcacfb26e flasher: Patch init.rc to mount block I/O cgroups
07054d6b8167 defconfig: Enable block I/O and CFQ cgroup support
707021481aa1 block/cfq-iosched: make group_idle per io cgroup tuneable
6522a65873de spi: spi-geni-qcom: use FRAGMENTATION for cs toggle
ac05a3f7947c spi: spi-geni-qcom: fix cs_change handling in GSI mode
12b57df13a19 spi: spi-geni-qcom: handle cs_change correctly
4.10-arm64
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
4.10-cpuidle
9d5dfaa308b6 cpuidle: Add a kerneldoc comment to cpuidle_use_deepest_state()
91f541710eac cpuidle: fix improper return value on error
ca8ac0f79c97 cpuidle/powernv: staticise powernv_idle_driver
6d115b6ae2f0 cpuidle: dt: assign ->enter_freeze to same as ->enter callback function
16ab7a11b205 cpuidle: governors: Remove remaining old module code
ef8de42e9212 Merge branch '4.10-sched'
8952e24fdb94 sched/dl: Fix comment in pick_next_task_dl()
3d481e02b2b1 cpuidle: Allow enforcing deepest idle state selection
7f4f8aede9e8 sched/cputime: Simplify task_cputime()
6e2b281df2c2 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d38fd9dbb70c sched/cputime, powerpc: Remove cputime_to_scaled()
baf6b91a15c9 sched/deadline: Fix typo in a comment
d705de000399 sched/core: Explain sleep/wakeup in a better way
8987ada54ed5 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
770213b4704e Merge branch '4.10-genirq'
2d657302020a genirq/msi: Drop artificial PCI dependency
1e95da2a1a58 genirq/affinity: Use default affinity mask for reserved vectors
c90dfbf1aa8e genirq/affinity: Take reserved vectors into account when spreading irqs
b032ad2d7fe3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
4b61852cf1f1 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
82598ee48dbf genirq/affinity: Introduce struct irq_affinity
f564698760b1 Merge branch '4.10-locking'
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
3c760a334786 Merge branch '4.10-misc'
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
229abdb08bb1 block: disable I/O stats accounting by default
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
67a34f815a64 block: disable random pool contribution by default
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
4.10-crypto
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
4.10-crypto-acomp
7a33edca1230 Revert "Merge branch 'mm-updates'"
3ee4bce40733 locking/atomic: Fix atomic_try_cmpxchg() semantics
89112a7ed160 locking/atomic: Introduce atomic_try_cmpxchg()
f73cf1121227 drm/msm: sde: remove devfreq boost
92e6091a6e30 locking/qspinlock: Use try_cmpxchg() instead of cmpxchg() when locking
f13b0dd6111e locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
bdb951d3bb54 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
3dd08ff26394 locking/qspinlock: Use atomic_cond_read_acquire()
7519ac61c5e1 Revert "locking/qspinlock: Re-order code"
cd7019e99707 Revert "locking/qspinlock, x86: Provide liveness guarantee"
a85c19533127 Revert "locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node"
71f7dadc37d7 Revert "locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()"
2b7dfac6a387 locking/qspinlock: Explicitly include asm/prefetch.h
b1b8c2ddd10a Merge branch 'mm-updates'
51e8fec9f329 arm64: kconfig: Ensure spinlock fastpaths are inlined if !PREEMPT
fde47f269bf6 mm: update mmu_gather range correctly
71d50a601e86 mm: improve struct page documentation
35fa9293292f mm: combine LRU and main union in struct page
2027f80920b8 mm: move lru union within struct page
b646d8d4c08f mm: combine first three unions in struct page
df421757e3af mm: move _refcount out of struct page union
a12a80a0f9c6 mm: move 'private' union within struct page
0d5ff77d4bbd mm: switch s_mem and slab_cache in struct page
a8ecdeddd8ac BACKPORT: mm: split page_type out from _mapcount
b56509e138e3 mm: introduce arg_lock to protect arg_start|end and env_start|end in mm_struct
791f5c392504 mm: document how to use struct page
2559ae52f23b mm: improve comment on page->mapping
324387cdf48d mm: update comments for struct page.mapping
6ad632cfe420 mm: fix MADV_[FREE|DONTNEED] TLB flush miss problem
cb50bf7ab0be mm: make tlb_flush_pending global
a18b33233c2d mm: refactor TLB gathering API
3e6315e04092 mm: migrate: fix barriers around tlb_flush_pending
dfd48b98c025 mm: migrate: prevent racy access to tlb_flush_pending
e22fe745c30b mm: clarify mm_struct.mm_{users,count} documentation
28392c58710e x86/mpx: Move bd_addr to mm_context_t
2a647457e327 defconfig: enable qspinlocks
9da105679c9e Merge branch '4.19-arm64-qspinlock'
7568e27c729a arm64: barrier: Implement smp_cond_load_relaxed
63fc5da66064 locking/barriers: Introduce smp_cond_load_relaxed() and atomic_cond_read_relaxed()
094ef701beef locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
e655209c5b31 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
b4bc5086e182 BACKPORT: arm64: locking: Replace ticket lock implementation with qspinlock
45ff2c431d77 locking/spinlocks/arm64: Remove smp_mb() from arch_spin_is_locked()
ebcc184903be locking/arch: Remove dummy arch_{read,spin,write}_lock_flags() implementations
d0e8e067f451 locking/arch: Remove dummy arch_{read,spin,write}_relax() implementations
fd2b8fb32dfe arch: Remove spin_unlock_wait() arch-specific definitions
4439d80bc470 tcp: fastopen: support TCP fast open on all listeners
8a538f19c307 tcp: fastopen: enable support for TCP fast open on listeners
1208d8e08fb4 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4.10-genirq
2d657302020a genirq/msi: Drop artificial PCI dependency
1e95da2a1a58 genirq/affinity: Use default affinity mask for reserved vectors
c90dfbf1aa8e genirq/affinity: Take reserved vectors into account when spreading irqs
b032ad2d7fe3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
4b61852cf1f1 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
82598ee48dbf genirq/affinity: Introduce struct irq_affinity
f564698760b1 Merge branch '4.10-locking'
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
3c760a334786 Merge branch '4.10-misc'
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
229abdb08bb1 block: disable I/O stats accounting by default
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
67a34f815a64 block: disable random pool contribution by default
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
ccc1038db47e Merge branch '4.10-mm'
9e1d127a6a74 mm: make transparent hugepage size public
cc3ebcfdecd0 mm, slab: faster active and free stats
9fbbb059110f mm, compaction: allow compaction for GFP_NOFS requests
4.10-kernel-misc
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
4.10-locking
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
4.10-misc
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
4.10-mm
9e1d127a6a74 mm: make transparent hugepage size public
cc3ebcfdecd0 mm, slab: faster active and free stats
9fbbb059110f mm, compaction: allow compaction for GFP_NOFS requests
7a33edca1230 Revert "Merge branch 'mm-updates'"
3ee4bce40733 locking/atomic: Fix atomic_try_cmpxchg() semantics
89112a7ed160 locking/atomic: Introduce atomic_try_cmpxchg()
f73cf1121227 drm/msm: sde: remove devfreq boost
92e6091a6e30 locking/qspinlock: Use try_cmpxchg() instead of cmpxchg() when locking
f13b0dd6111e locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
bdb951d3bb54 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
3dd08ff26394 locking/qspinlock: Use atomic_cond_read_acquire()
7519ac61c5e1 Revert "locking/qspinlock: Re-order code"
cd7019e99707 Revert "locking/qspinlock, x86: Provide liveness guarantee"
a85c19533127 Revert "locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node"
71f7dadc37d7 Revert "locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()"
2b7dfac6a387 locking/qspinlock: Explicitly include asm/prefetch.h
b1b8c2ddd10a Merge branch 'mm-updates'
51e8fec9f329 arm64: kconfig: Ensure spinlock fastpaths are inlined if !PREEMPT
fde47f269bf6 mm: update mmu_gather range correctly
71d50a601e86 mm: improve struct page documentation
35fa9293292f mm: combine LRU and main union in struct page
2027f80920b8 mm: move lru union within struct page
b646d8d4c08f mm: combine first three unions in struct page
df421757e3af mm: move _refcount out of struct page union
a12a80a0f9c6 mm: move 'private' union within struct page
0d5ff77d4bbd mm: switch s_mem and slab_cache in struct page
a8ecdeddd8ac BACKPORT: mm: split page_type out from _mapcount
b56509e138e3 mm: introduce arg_lock to protect arg_start|end and env_start|end in mm_struct
791f5c392504 mm: document how to use struct page
2559ae52f23b mm: improve comment on page->mapping
324387cdf48d mm: update comments for struct page.mapping
6ad632cfe420 mm: fix MADV_[FREE|DONTNEED] TLB flush miss problem
cb50bf7ab0be mm: make tlb_flush_pending global
a18b33233c2d mm: refactor TLB gathering API
3e6315e04092 mm: migrate: fix barriers around tlb_flush_pending
dfd48b98c025 mm: migrate: prevent racy access to tlb_flush_pending
e22fe745c30b mm: clarify mm_struct.mm_{users,count} documentation
28392c58710e x86/mpx: Move bd_addr to mm_context_t
2a647457e327 defconfig: enable qspinlocks
9da105679c9e Merge branch '4.19-arm64-qspinlock'
7568e27c729a arm64: barrier: Implement smp_cond_load_relaxed
63fc5da66064 locking/barriers: Introduce smp_cond_load_relaxed() and atomic_cond_read_relaxed()
094ef701beef locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
e655209c5b31 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
b4bc5086e182 BACKPORT: arm64: locking: Replace ticket lock implementation with qspinlock
45ff2c431d77 locking/spinlocks/arm64: Remove smp_mb() from arch_spin_is_locked()
ebcc184903be locking/arch: Remove dummy arch_{read,spin,write}_lock_flags() implementations
d0e8e067f451 locking/arch: Remove dummy arch_{read,spin,write}_relax() implementations
fd2b8fb32dfe arch: Remove spin_unlock_wait() arch-specific definitions
4.10-pm
43d549fe8f4f Merge branch 'revert-adreno-idler'
1358a94c4180 defconfig: Disable Adreno Idler
f8caaff85927 Revert "Introduce Adreno idler for devfreq-based Adreno devices"
521f5507134b Revert "adreno_idler: switch to count based instead of time based"
76243e7b6a73 Revert "adreno_idler: remove frequency bump"
39b58543fa2d Revert "adreno_idler: fix-up type definitions"
2a24edacbe69 Revert "adreno_idler: fix-up some comments"
0a702f1fce1c Revert "adreno_idler: fix typos :)"
7f2e1f370969 Revert "adreno idler: Ramp down more agressively"
ca4f85bd141f Revert "adreno_idler: Add display state awareness"
684bc12b8e91 Revert "adreno_idler: Declare display_on correctly"
4f88f1ce84aa Revert "msm_adreno_tz: Add display state awareness"
2132d76cda84 Revert "adreno_idler: convert to state notifier"
755ea71da782 defconfig: Update to stable version v13
bf8dc7ebab5c defconfig: Decrease general and input stune boost values
3dc2b5fe34b5 kernel: Reduce app launch boost timeout to 75 ms
ef3dee1ebec8 defconfig: Bump general boost frequencies and stune level
6f17085ae2f7 drm/atomic: Use general boosting for frame boost
6588d52682d4 cpu_input_boost: Reduce frame boost timeout if vidc is active
1305d13ddf8a cpu_input_boost: Introduce should_kick_frame_boost function
bc8257d46975 powerhint: Revert to 710 MHz maximum GPU frequency
e211b99baa4e Revert "Revert "powerhint: set minimum GPU freq to 180 MHz""
3ef841309245 Revert "Revert "GPU: add 180 MHz step""
4b0943f7b4ee defconfig: Remove higher screen-on return frequencies
8df13219807b Revert "cpu_input_boost: add separate return frequencies for screen-on states"
aefe1bc62a2f Revert "EXPERIMENTAL: sdm845: overclock GPU to 810 MHz"
2dce9afe29db Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
88063e7b0977 Merge branch 'freak07-changes'
8a6febdd8682 defconfig: Sync with latest changes
cfac3065a9a7 UPSTREAM: dm: do not allow readahead to limit IO size
c848fc3bd4c8 UPSTREAM: readahead: stricter check for bdi io_pages
7e49fa19562c UPSTREAM: mm: don't cap request size based on read-ahead setting
bcc191f5b4e7 UPSTREAM: ppp: Move PFC decompression to PPP generic layer
d0fca2ae7de0 UPSTREAM: l2tp: Add protocol field decompression
5861f4ed326e BACKPORT: l2tp: remove ->recv_payload_hook
8cbe23fc1907 tcp/dccp: drop SYN packets if accept queue is full
3037c6300471 perf: Cancel the mux hrtimer during CPU hotplug to avoid migration
b92b5ad23b4d msm: vidc: Fix dead lock during long stability run
1ae1a36422a4 msm: camera: Add reset logic for snps phy
c6cd47c72b44 ufs: qcom: set load before setting voltage in regulator
60c39a13ec1a scsi: ufs: set load before setting voltage in regulators
ad24f86de0da scsi: ufs: Avoid writing null to Boot LUN enable attribute
2140e696bc2a scsi: ufs: avoid deadlock by releasing rw_sem during hibernate
d541db9d7bd4 scsi: ufs: Fix race condition in rls_work and ufshcd_resume
a16d0029a6cd Revert "ANDROID: dm verity: add minimum prefetch size"
78f576c57da6 UPSTREAM: mm: /proc/pid/smaps_rollup: fix NULL pointer deref in smaps_pte_range()
49e82eccba58 BACKPORT: fs/proc/task_mmu.c: fix Locked field in /proc/pid/smaps*
1954c89c99e5 BACKPORT: mm: add /proc/pid/smaps_rollup
6d670a0cefcf Revert "locking: rwsem: spin faster"
7b58dcf7d48b Revert "ipv4/tcp: allow the memory tuning for tcp to go a little bigger than default"
3752ab119049 Revert "powerhint: set minimum GPU freq to 180 MHz"
6989eaba12e0 Revert "GPU: add 180 MHz step"
4.10-rcu
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
3c760a334786 Merge branch '4.10-misc'
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
229abdb08bb1 block: disable I/O stats accounting by default
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
67a34f815a64 block: disable random pool contribution by default
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
ccc1038db47e Merge branch '4.10-mm'
9e1d127a6a74 mm: make transparent hugepage size public
cc3ebcfdecd0 mm, slab: faster active and free stats
9fbbb059110f mm, compaction: allow compaction for GFP_NOFS requests
7a33edca1230 Revert "Merge branch 'mm-updates'"
3ee4bce40733 locking/atomic: Fix atomic_try_cmpxchg() semantics
4.10-sched
8952e24fdb94 sched/dl: Fix comment in pick_next_task_dl()
3d481e02b2b1 cpuidle: Allow enforcing deepest idle state selection
7f4f8aede9e8 sched/cputime: Simplify task_cputime()
6e2b281df2c2 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d38fd9dbb70c sched/cputime, powerpc: Remove cputime_to_scaled()
baf6b91a15c9 sched/deadline: Fix typo in a comment
d705de000399 sched/core: Explain sleep/wakeup in a better way
8987ada54ed5 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
770213b4704e Merge branch '4.10-genirq'
2d657302020a genirq/msi: Drop artificial PCI dependency
1e95da2a1a58 genirq/affinity: Use default affinity mask for reserved vectors
c90dfbf1aa8e genirq/affinity: Take reserved vectors into account when spreading irqs
b032ad2d7fe3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
4b61852cf1f1 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
82598ee48dbf genirq/affinity: Introduce struct irq_affinity
f564698760b1 Merge branch '4.10-locking'
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
3c760a334786 Merge branch '4.10-misc'
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
4.10-scjed
8952e24fdb94 sched/dl: Fix comment in pick_next_task_dl()
3d481e02b2b1 cpuidle: Allow enforcing deepest idle state selection
7f4f8aede9e8 sched/cputime: Simplify task_cputime()
6e2b281df2c2 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d38fd9dbb70c sched/cputime, powerpc: Remove cputime_to_scaled()
baf6b91a15c9 sched/deadline: Fix typo in a comment
d705de000399 sched/core: Explain sleep/wakeup in a better way
8987ada54ed5 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
770213b4704e Merge branch '4.10-genirq'
2d657302020a genirq/msi: Drop artificial PCI dependency
1e95da2a1a58 genirq/affinity: Use default affinity mask for reserved vectors
c90dfbf1aa8e genirq/affinity: Take reserved vectors into account when spreading irqs
b032ad2d7fe3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
4b61852cf1f1 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
82598ee48dbf genirq/affinity: Introduce struct irq_affinity
f564698760b1 Merge branch '4.10-locking'
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
3c760a334786 Merge branch '4.10-misc'
17fb9e7732ad block: deal with stale req count of plug list
24e2f5219194 block: move poll code to blk-mq
de767e4c041f block: add bio_iov_iter_get_pages()
4921e5533eae defconfig: set default console loglevel to 4
297d2601ed32 block: fix use after free in __blkdev_direct_IO
64f37a05ae7b block: add back plugging in __blkdev_direct_IO
90bcbca0ecb3 block_dev: don't update file access position for sync direct IO
f3593945d0b8 block: bio: pass bvec table to bio_init()
33126a228994 block_dev: get rid of blksize bits calculation
7f9160e910c6 block_dev: Fixed direct I/O bio sector calculation
85a5a329adde block: new direct I/O implementation
7c8b2b096841 block: support a full bio worth of IO for simplified bdev direct-io
06f1de984b3e block: fast-path for small and simple direct I/O requests
8f81b0af3212 dm block manager: make block locking optional
b0d02dce3dd7 cpufreq: stats: New sysfs attribute for clearing statistics
bdfe32929424 PCI: Create revision file in sysfs
33c868802ea9 Kconfig: Introduce the "imply" keyword
9b250c810def printk: add Kconfig option to set default console loglevel
a86731e569ad posix-timers: Make them configurable
fe1fa90020e5 iomap: implement direct I/O
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
4.10-wbt
f5c25cfdbd91 defconfig: enable block writeback throttling
9236e874fb85 f2fs: remove duplicate wbc_to_write_flags implementation
d9e043841660 block, bfq: Disable writeback throttling
500adb3a09e1 block: Avoid that sparse complains about context imbalance in __wbt_wait()
8413b0ca1515 block: Make wbt_wait() definition consistent with declaration
fd6f11a05565 blk-wbt: allow wbt to be enabled always through sysfs
527ed5fd1aee blk-wbt: cleanup disable-by-default for CFQ
958203f1955b blk-wbt: allow reset of default latency through sysfs
2482f33e8b71 blk-wbt: fix old-style function declaration
ce177f9fa259 blk-wbt: use BLK_STAT_{READ,WRITE} instead of 0/1
aaf375b98253 blk-wbt: remove stat ops
9faeeccbfe28 blk-wbt: store queue instead of bdi
3b903f8ecb03 block: hook up writeback throttling
44cf09a0201b blk-wbt: add general throttling mechanism
06fda3555f99 block: add scalable completion tracking of requests
4698f57c53cc writeback: track if we're sleeping on progress in balance_dirty_pages()
08213a790f9d writeback: mark background writeback as such
827ee8b3441a block: replace REQ_NOIDLE with REQ_IDLE
eb1e51ed37f3 block: don't use REQ_SYNC in the READ_SYNC definition
f8111d4e99fd writeback: add wbc_to_write_flags()
4.11-locking
cf61c7c04525 locking/pvqspinlock: Don't wait if vCPU is preempted
138af573cfca locking/spinlocks: Remove the unused spin_lock_bh_nested() API
4b3153191a13 defconfig: reduce input boost duration to 64 ms
79baa0429798 qcacld-3.0: Fix panics with BUILD_DEBUG_VERSION disabled
f70ad2a73aad Revert "defconfig: enable kernel samepage merging (KSM)"
eb9452bc2b24 driver core: add devm_device_add_group() and friends
4f5090620cf2 Merge branch 'tcp-tsq-shift'
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
4.12-swap
69b8317b8d66 swap: Remove obsolete sentence
982e6c8e3022 mm, swap: use kvzalloc to allocate some swap data structures
850c511128e4 mm, swap: remove unused function prototype
37cce266aeba mm, swap: avoid lock swap_avail_lock when held cluster lock
f7ee8d7e9653 mm, swap: improve readability via make spin_lock/unlock balanced
dcde2b8683c8 mm, swap: fix comment in __read_swap_cache_async
fe2d8bb207b7 mm, swap: Fix a race in free_swap_and_cache()
5dbfcb786412 mm, swap: Remove WARN_ON_ONCE() in free_swap_slot()
06e81ebec395 mm/swap: don't BUG_ON() due to uninitialized swap slot cache
48c5d352d5fc mm/swap: skip readahead only when swap slot cache is enabled
8642dce26005 mm/swap: enable swap slots cache usage
e3ab9391e3c5 mm/swap: add cache for swap slots allocation
a5ada5769b20 mm/swap: free swap slots in batch
d2fe55a16671 mm/swap: allocate swap slots in batches
7e73c0d8f8e6 mm/swap: skip readahead for unreferenced swap slots
f92b0873a009 mm/swap: split swap cache into 64MB trunks
e08ff5a8ceba mm/swap: add cluster lock
2675919a9a5e mm/swap: fix kernel message in swap_info_get()
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
4.17-pm-2
79baa0429798 qcacld-3.0: Fix panics with BUILD_DEBUG_VERSION disabled
f70ad2a73aad Revert "defconfig: enable kernel samepage merging (KSM)"
eb9452bc2b24 driver core: add devm_device_add_group() and friends
4f5090620cf2 Merge branch 'tcp-tsq-shift'
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
ce1f3a498696 mm: ksm: Optimize defaults
95c1830f673a mark qcedev data const
fbb3c3b99576 UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
4.19-arm64-qspinlock
7568e27c729a arm64: barrier: Implement smp_cond_load_relaxed
63fc5da66064 locking/barriers: Introduce smp_cond_load_relaxed() and atomic_cond_read_relaxed()
094ef701beef locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
e655209c5b31 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
b4bc5086e182 BACKPORT: arm64: locking: Replace ticket lock implementation with qspinlock
45ff2c431d77 locking/spinlocks/arm64: Remove smp_mb() from arch_spin_is_locked()
ebcc184903be locking/arch: Remove dummy arch_{read,spin,write}_lock_flags() implementations
d0e8e067f451 locking/arch: Remove dummy arch_{read,spin,write}_relax() implementations
fd2b8fb32dfe arch: Remove spin_unlock_wait() arch-specific definitions
4439d80bc470 tcp: fastopen: support TCP fast open on all listeners
8a538f19c307 tcp: fastopen: enable support for TCP fast open on listeners
1208d8e08fb4 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
3f181649e7d8 sch_cake: enable TCP ACK filter by default
699f6cc39503 cpu_input_boost: make wq unbound
455dd6990518 dmaengine: fix memleak
3ede99e65074 net: ipc_router_core: fix memleak with IPC_LOGGING disabled
e96864a3ea0d cpu_input_boost: avoid boosting big cluster when load is low
c3404d3a2f21 Revert "defconfig: enable stack protector, hardened usercopy, FORTIFY_SOURCE"
e75ae1378b91 Revert "fastchg: enable force fast charge by default"
75d546e05f4f Revert "fastchg: force enable by default"
4.19-misc
a9655c0b8843 defconfig: trust the CPU's hwrng
6997c5a8df37 namei: enable protected_{fifos,regular} by default
1bda808e5345 random: allow arm64 to trust the CPU's hwrng
398abe30c9f4 random: add a config option to trust the CPU's hwrng
c703f4dfe16b defconfig: enable support for RTL815x USB Ethernet adapters
b73f8e890517 EXPERIMENTAL: defconfig: enable IFB
83be89c9789a Revert "EXPERIMENTAL: defconfig: use BBR as default TCP congestion control"
7c870a04f32f helpers: adjust for new Termux server
03462c2470cb defconfig: remove broken and useless TCP congestion controls
f37374da2106 EXPERIMENTAL: defconfig: use BBR as default TCP congestion control
3972a7281e95 EXPERIMENTAL: defconfig: switch to 1000 Hz timer
a06a86c19f8b wake_gestures: use correct resolution for blueline
c496fb33bac5 defconfig: fully disable dm-verity
d8c6ef6d99ce helpers: silence pushd and popd output
63886dbed9e7 Merge branch 'revert-westwood-tune'
2d9c30dc3353 Revert "tcp_westwood: Bump minimum RTT and lower initial RTT duration"
ab9211fd6ab8 Revert "tcp_westwood: correct minimum RTT and initial RTT duration"
83f0a4d30ba0 Revert "tcp_westwood: bump initial RTT duration"
c3b7b5bcccf1 Merge branch 'revert-lede-net'
a03b76744ed1 Revert "netfilter: conntrack: cache route for forwarded connections"
acd8db927307 Revert "tcp: tsq: add tsq_flags / tsq_enum"
83fbab21185b Revert "tcp: tsq: remove one locked operation in tcp_wfree()"
1c713b620f77 Revert "tcp: tsq: add shortcut in tcp_tasklet_func()"
3ff1ce8a0c97 Revert "tcp: tsq: avoid one atomic in tcp_wfree()"
7f548e83460f Revert "tcp: tsq: add a shortcut in tcp_small_queue_check()"
af4cc392e462 Revert "tcp: tcp_mtu_probe() is likely to exit early"
dd45911f9466 Revert "tcp: tsq: move tsq_flags close to sk_wmem_alloc"
1264ea4050a6 Revert "tcp: add a missing barrier in tcp_tasklet_func()"
fedd1ad9bbf5 Revert "tcp: allow drivers to tweak TSQ logic"
7c7abaa20632 Revert "mm: add support for releasing multiple instances of a page"
aa82ff3a8c65 Revert "mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free"
ebaeb74af4dd Revert "mm: rename __page_frag functions to __page_frag_cache, drop order from drain"
154f92054250 Revert "i2c: gpio: Enable working over slow can_sleep GPIOs"
f96b1f517093 Revert "drivers: net: generalize napi_complete_done()"
32b35b832758 Revert "ip6_tunnel: Fix missing tunnel encapsulation limit option"
59366140e446 Revert "ipv6: Need to export ipv6_push_frag_opts for tunneling now."
1ff00466959c Revert "uapi/if_ether.h: prevent redefinition of struct ethhdr"
a5938cfd9c3b Revert "defconfig: enable conntrack route caching"
eba7d1fd9116 Revert "bridge: only accept EAP locally"
9d3be08e29de Revert "spi: use gpio_set_value_cansleep for setting chipselect GPIO"
68fdeef0ce5d Revert "kernel: add a new version of my netfilter speedup patches for linux 2.6.39 and 3.0"
7452b63d7fe3 Revert "netfilter: reduce match memory access"
6864b846cdf1 Revert "netfilter: optional tcp window check"
fc952245bfe8 Revert "kernel: add a small xfrm related performance optimization"
8978a880de39 Revert "net_sched/codel: do not defer queue length update"
69312c46e3df Revert "net: replace GRO optimization patch with a new one that supports VLANs/bridges with different MAC addresses"
e4b680f432ac Merge branch 'sysfs-devicetree-config'
ed89bc4f846a defconfig: enable sysfs devicetree exposure
d9bd05fb18af of: Make CONFIG_OF_KOBJ configurable
d9e2915bb040 of: make kobject and bin_attribute support configurable
56f8f5c92325 mm: Silence vmap() allocation failures based on caller gfp_flags
d02d9b55786f defconfig: disable obscure HID drivers
474e5cc49258 Use the kernel mm data in case the address is more than PAGE_OFFSET
4.20-crypto
3e0d71c0f58c arm64: neon: Remove support for nested or hardirq kernel-mode NEON
2e4d125be8dc arm64: neon: Add missing header guard in <asm/neon.h>
5fe4bcb54d85 arm64: fpsimd: Consistently use __this_cpu_ ops where appropriate
15d3c26355ed crypto: cryptd - Add support for skcipher
8b96daf965d2 crypto: seqiv - Remove unused alg/spawn variable
d7e47c4609fa crypto: xts - Drop use of auxiliary buffer
1e5298a547fe crypto: scatterwalk - remove 'chain' argument from scatterwalk_crypto_chain()
5a7080b38fd2 crypto: xts - remove xts_crypt()
ad849be506a1 crypto: remove redundant backlog checks on EBUSY
80d5ede4a906 crypto: xts - Fix an error handling path in 'create()'
bb59c9b19458 crypto: xts - Fix use-after-free on EINPROGRESS
d96b00721098 crypto: gf128mul - remove incorrect comment
0aa2f80e247f crypto: gf128mul - The x8_ble multiplication functions
e687587c7dc4 crypto: gf128mul - switch gf128mul_x_ble to le128
b719b853be39 crypto: gf128mul - define gf128mul_x_* in gf128mul.h
578f7dc6e481 crypto: gf128mul - rename the byte overflow tables
9defcbc2e585 crypto: gf128mul - remove xx() macro
cd6adb42c96b crypto: gf128mul - constify 4k and 64k multiplication tables
3caafc3ded49 crypto: gf128mul - fix some comments
b78313428b8a crypto: gf128mul - Zero memory when freeing multiplication table
ack-ion
0a543b348501 ion: Ensure non-HLOS memory cannot be mapped by CPU
3774b46b832e ion: Do not perform cache maintenance for secure buffer
910356072fd5 ion: Consider ion pool pages as indirectly reclaimable
006595fbf5bf Merge branch 'caf-kgsl'
7d3915df5fee msm: kgsl: Increase the fenced write timeout
31e95874abf0 msm: kgsl: Trigger preemption only if GMU is in ACTIVE state
f4a8873057e6 msm: kgsl: Add a property to find if secure context is supported
f480767c795d msm: kgsl: Add a property to find alignment of secure buffers
ae644fadd7f8 msm: kgsl: Limit log frequency in case of context count maxed out
ba61c3325fbe msm: kgsl: Make sure gpu-speed-bin-vectors has the correct size
4ca3be7b6017 msm: kgsl: Don't halt dispatcher if device is not in SUSPEND state
ff3a01bc25ed msm: kgsl: Fix the missing IBs from the snapshot
0e7f2ed0e131 msm: kgsl: Keep a list of perfcounters per file descriptor
2c4934c717ec msm: kgsl: Trigger GMU recovery on OOB set failures
148e0cb1a626 zram: allow zram to allocate CMA pages
992f6d3db068 cpufreq: Add CPUFREQ_STOP notification when cpu offline
503fb6934f9a sched/rt.c: fix missing include for latest backport
c87b2a189ed4 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
bdab773807ee BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
b555e2ab75b2 ANDROID: Move schedtune en/dequeue before schedutil update triggers
0116fa61c87a Merge branch 'overflow'
499c17a321b0 overflow changes: fix some conflicts
1516399848ab BACKPORT: treewide: Use array_size() in sock_kmalloc()
339ae11eaa33 BACKPORT: treewide: Use array_size() in vzalloc_node()
9c9a52b1a49e BACKPORT: treewide: Use array_size() in vzalloc()
969c355deb27 BACKPORT: treewide: Use array_size() in vmalloc()
f71890ffd000 BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
a4154311a159 BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
890e541b0852 BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
7f7af5555cf4 BACKPORT: treewide: kzalloc() -> kcalloc()
6052593ec9fd BACKPORT: treewide: kmalloc() -> kmalloc_array()
115fcf234a17 BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
0ccd15b2ae63 BACKPORT: treewide: Use struct_size() for vmalloc()-family
5fc7b60eb036 BACKPORT: treewide: Use struct_size() for kmalloc()-family
1d05ec3ff219 UPSTREAM: mm: Introduce kvcalloc()
c713ba5cdfc3 UPSTREAM: Convert v4l2 event to struct_size
0c6a73aaa96a UPSTREAM: Convert virtio_console to struct_size
51fadc5421a4 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
51737dea6daf BACKPORT: mm: Use overflow helpers in kvmalloc()
75d13b5f4c9a UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
a199de13c4df UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
86230c38a66a UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
bf5cf91bf78b UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
028c4a398964 UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
439ad57581d2 CHROMIUM: mm: Take kvmalloc_array() from upstream
807fb4a3dcd5 BACKPORT: mm: introduce kv[mz]alloc helpers
d9a9284b99a6 f2fs: Remove duplicate k*alloc definitions
0e6ff298f62d diag: Featurize IPC logging
8c58b707dbcf defconfig: enable state notifier
1025affbae13 state_notifier: add a third case for boosting
601fdbc41d09 state_notifier: Check delayed work status before cancel
d7ac66e1c8cf state_notifier: remove debug and enabled parameters
72d2993cac7b state_notifier: Remove internal enablement switch
90b31f92f238 state_notifier: Drop unneeded module_param_named entries
24eb5eabab9c msm: dsi: add direct HBM
a3d98c373002 wake_gestures: fixes and cleanup
ack-sched
6549078631e2 Revert "sched: Check out to latest Android common kernel state"
8f08de55c601 sched: Check out to latest Android common kernel state
b6ce9f64da1e Revert "ARM: dts: sdm845: Enable SDE null packet insertion"
953ae586653c init: 748800
d39ec9a055c7 Revert "block: immediately dispatch big size request"
1391e59d8dcf Revert "Revert "mm: workingset: tell cache transitions from workingset thrashing""
8af7a94f03f8 Revert "BACKPORT: mm: vmscan: fix IO/refault regression in cache workingset transition"
94b59ff4031b Revert "net: mii: add generic function to support ksetting support"
35a2d68936b3 Revert "net: mii: report 0 for unknown lp_advertising"
a1f6be13a5d2 Revert "net/{mii, smsc}: Make mii_ethtool_get_link_ksettings and smc_netdev_get_ecmd return void"
2f341dd0c35e Revert "Revert "r8152: switch to realtek.com.tw release v2.11.0""
2b2dacd4e7ad Revert "net/usb: r8152: Update to the latest version from k5.0"
1ac3dd39d684 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
e53f2add9354 defconfig: Sync for Linux 4.9.169
a6f2178c285a Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4f29e1d0c316 Revert "init: Adjust schedutil rate limits"
9a8f4990f416 clk: qcom: clk-cpu-osm: Reduce CPU frequency update rate limit to 500 us
fde04f4a3b6b defconfig: Remove default big cluster max frequency option
2d2f52eb0593 init: Bump balanced big cluster max frequency to 2803.2 MHz
882a4122a183 Revert "powerhint: Limit big cluster max frequency to 2323.2 MHz"
add-sdfat
b33a749c3866 boeffla_wl_blocker: Block default wakelocks we had before
4b258fee182c usb: f_qc_rndis: Remove unused static variables
d9d3806faba5 msm: ipa: Fix enum-conversion warning
b3dcc9a31d2a soc: qcom: rpm_master_stat: Fix third argument of strlcpy
53128b35d5e5 mmc: host: sdhci-msm-ice: Fix logical not parentheses warning
1630d7e8dba9 camera_v2: sensor: disable clang array-bounds
348cf97c3ea8 msm: camera: Remove unnecessary parentheses
afb8955d694a kernel: fake system calls on seccomp to succeed
e464acba7df7 drivers: pinctrl: mask non-wakeup interrupts in suspend path
1fde5363d609 crypto: arm64/crc32 - merge CRC32 and PMULL instruction based drivers
0e6dd1bc8b3d BACKPORT: mm: fix pageblock heuristic
be29888a0354 qcacld: don't warn about unused declarations
7dd34a64557e Revert "b1c1_defconfig: Disable debugfs"
9fb43512ae56 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
2d195054bad3 fscrypt: make fscrypt_operations.max_namelen an integer
c6727c6f8046 mm, page_alloc: wakeup kcompactd even if kswapd cannot free more memory
ff01248883b0 setlocalversion: avoid calling git describe
84f7daf4da6a defconfig: Disable Sharp Zaurus USB network support
febb1effa9e9 kernel: time: reduce ntp wakeups
195cc18e784d qcacld: reduce log spam
android-flash
8c68fd7e6d53 HACK: flasher: use self-contained GNU cpio on Android
02675b4c5494 flasher: clear environment PATH when running flasher portion
63b4ae36bbbf helpers: directly run flasher under Android if applicable
51ad07106cc9 flasher: customize output when running under Android
84c085ce386e flasher: add support for running flasher in Android
2894d2103287 flasher: use TMPDIR environment variable instead of hardcoded path
1ea2bc7fb64c helpers: fix release builds
59122e81780f Merge tag 'ae72f73787af9b83c2c20bd5790f352784c1119d'
2a706743556e Merge tag '6b28c94006fe6c4053fe43981b511961be52df19'
45bced568da0 helpers: update subtrees to tag provided as argument
0ed0c1643575 b1c1-stock_defconfig: remove comments and whitespace
d646dcf07da9 EXPERIMENTAL: dts: pmi8998: use fully analog display dimming
abcd0b99fae2 defconfig: don't autoselect V4L2 drivers
338ac81112fd defconfig: massive debloat
3e9a2f5f7a76 Merge branch 'revert-verity-disable'
2ec9f7f90eea Revert "arm64: dts: disable AVB 2.0 verification"
086929b7fc12 Revert "dm-android-verity: permanently disable verification"
c9dc8b18de4e defconfig: disable SMACK
45bfcafac35e Use GCC as the primary compiler (setup scripts)
63ab23871c73 Merge branch 'revert-html5-sony-sched'
cef9fa2dfe60 cs40l2x: fix missing header for wake gestures
7334492fc135 arm64: crypto: build for ARMv8.2, fix GCC flags
anxiety-iosched
07143b94e55a block: anxiety-iosched: make max_writes_starved sysfs tunable
9b5390f1fa88 block: anxiety-iosched: reduce maximum writes starved
ef042f73042d block: anxiety-iosched: don't use size_t type for starvation
d88df4d59a57 block: anxiety-iosched: improve variable & argument naming
5db658780ba0 block: anxiety-iosched: improve Kconfig description
eaba62d50b1d block: anxiety-iosched: further improve code style
c9be1021ef08 block: anxiety-iosched: remove async request discrimination
ccbe59e22e92 block: anxiety-iosched: improve code style
9af9a707f57b block: anxiety-iosched: fix header wording
29eb8ae767c7 block: introduce Anxiety I/O scheduler
b95111a7dc6a ANDROID: modpost: add an exception for CFI stubs
e52295892a8f FROMGIT: modpost: validate symbol names also in find_elf_symbol
71421265eefa UPSTREAM: tcp: Do not reload skb pointer after skb_gro_receive().
b9d42687e410 UPSTREAM: tcp: ack immediately when a cwr packet arrives
dca11c6cf621 tcp_westwood: fix tcp_westwood_info() style mistakes
7504d935f661 tcp: make undo_cwnd mandatory for congestion modules
03111acbc347 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
33a0bee895d5 defconfig: disable GCMA and cleancache, revert to CMA
32d6e6cf5a8f Revert "HACK: gcma: ignore refcount being less than 0"
0a0d3a2b0855 Revert "arm64/dts: b1c1: revert Google thermal changes"
aoom
c1e183133aaa android_oom: Make chosen tasks die faster
a54e18bb0829 android_oom: Boost CPU and DDR bus when memory reclaim is invoked
c494e7a92fbf signal: Do not compile lmkd checks if memory cgroup is off
dea68f57bcbf android_oom: Introduce Android extension to OOM killer
bbc15884401a mm, oom: Disable oom_kill_allocating_task
294ba2084074 ARM: dts: sdm845: Disable LPM prediction for the big cluster
25b61f95b9ef Revert "ARM: dts: msm: Update energy numbers for SDM845"
52826d6f13df ARM: dts: msm: enable dsi phy idle mode for sdm845
daa752015a94 Revert "ARM: dts: b1c1: Enable display power-saving features"
e5e1c3c0f0be Revert "mm: allow __GFP_MOVABLE to use CMA memory"
b9d8889b0460 signal: Activate OOM reaper when lmkd kills processes
f78ca39c0da8 defconfig: Revert to stock RCU CPU stall timeout
f34168636924 defconfig: Bind offloaded RCU callback threads to the little cluster
a47cb1d2e5a5 rcu: Add support for binding offload threads to the little cluster
ae33e15d7bd7 kthread: Add API to create kthreads bound to low-power CPUs
b7f1bdc5198b defconfig: Enable single-queue writeback throttling
0cb3ae689be3 FROMLIST: block: hook up writeback throttling
8fdf9a18a2ec sched/walt: Reduce window size to 8 ms and load history to 64 ms
eaad3b084337 defconfig: Append git commit hash to kernel version
be62847978da signal: Accelerate lmkd task killing speed
arm64-lib-optimize
99050d870a3c arm64: Use optimized memcmp
1d21446cae99 arm64: strcmp: align to 64B cache line
db6a9f725ba8 Revert "arm64: strcmp: Align to cache and preload"
58cfd4a16552 FROMGIT: arm64: export tishift functions to modules
1a5d923a6af6 Merge commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
bf28aef43692 Merge commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4039e17d68da drm/msm/dsi-staging: Prevent flickerfree from being enabled on b1
ae41b9284a75 arm64: Add functions to get the current device being used
0e347db60a90 cpu_input_boost: Clean up SchedTune boost handling
265cf4de2ffa defconfig: Update SchedTune boost configuration
c2f190c9b557 cpu_input_boost: Revise SchedTune boost configuration
6d68dda951d9 defconfig: Disable bootloader log driver
4c21a9a08785 drm/msm/dsi-staging: Update brightness upon backlight dimmer toggle
arter97-serial
4c5024d53b75 msm_geni_serial: skip flushing tx upon shutdown
a897ecda03f1 msm_geni_serial: guard PM related logs with #ifdef DEBUG_PM
063be7698a5a msm_geni_serial: reduce wakelock timeout from ISR to 100ms
7d8b61de3926 drivers: Add flush_buffer for tty driver
fa934c8ff4ed msm_geni_serial: ensure proper ioctl_count range
ebef0ef1cd46 msm_geni_serial: log timeouts in wait_for_transfers_inflight()
4840242690f5 msm_geni_serial: log wakelocks from ISR
994e69434fa8 msm_geni_serial: log accesses to clock voting
3e34e52147f3 msm_geni_serial: make ioctl always exclusive
219b705a3d4e msm_geni_serial: remove IPC_LOG entirely
8767133620af msm_geni_serial: featurize console
8054c6e90919 init: Remove redundant I/O stat accounting disable
d14fd9396732 block: Disallow writing to iostats in sysfs
024ccd897a17 blk: disable IO_STAT completely
ce2bf8407f3d arm64: relocatable: fix inconsistencies in linker script and options
e0239c078ad9 Revert "sched/walt: Reduce window size to 8 ms and load history to 64 ms"
211769a8f5c2 defconfig: Switch to 500 Hz timer frequency
47262d24f8c0 helpers: Update qca-wifi-host-common subtree remote name
e43ba8efc7ee input: fpc: Boost CPU and DDR bus on interrupt
241051fc6350 cpu_input_boost: Expose wake boost duration as a module parameter
bfq
b7b879e3a453 defconfig: enable BFQ I/O scheduler
4bc76eb5a8f5 block: BFQ: fix improper use backing_dev_info struct
4a4b0f5dcd9f BFQ-v8r10
ed15007c32f5 BFQ-v8r10-rc1
923c799eaceb BUGFIX: Remove problematic check on max service duration
fd2dcc32cb8e BUGFIX: Handle failure of weight-counter allocation
d94a1c3c333a BFQ-v8r9
5ec568456fae BUGFIX: remove use of bfq queues after free
a9e0f9c64a76 BFQ-v8r8
5f1ed5d2fb7b block/bfq-cgroup: fix bfq_bic_update_cgroup() API
ccbd29b65c75 BFQ-v8r8-rc2
fdef7224b791 Avoid a second dispatch in case of budget exhaustion
d9d8e03abfe6 BFQ-v8r8-rc1
92ba15b9ee69 Better tune weight-raising for slow flash-based devices
a2765bb7a06e Fix check of the percentage of sequential dispatches
1b93291d787c BUGFIX: Put async queues on exit also without cgroups
50df2546bd5b Add a ton of forgotten static qualifiers
8e8ca90bdb4b Remove wrong compilation warning
bf9ab313a383 Turn into BFQ-v8r7 for 4.9.0
61c81c8d5edd block, bfq: add Early Queue Merge (EQM) to BFQ-v7r11 for 4.5.0
bfq-updates
300a8a9f8359 block, bfq: improve and refactor throughput-boosting logic
e277625468fb block, bfq: consider also in_service_entity to state whether an entity is active
c50f4b09b551 block, bfq: reset in_service_entity if it becomes idle
24ab1e184644 Add extra checks related to entity scheduling
acbf4dae898b BFQ-v8r12
9a880cf9ca6e block, bfq: don't change ioprio class for a bfq_queue on a service tree
283d7bc967d9 Fix commit "don't dereference bic before null checking it"
281b6e576b84 block, bfq: stress that low_latency must be off to get max throughput
462fa8a7f843 block, bfq: update wr_busy_queues if needed on a queue split
0e051a24c0e9 BFQ-v8r11
08591c2c6ea1 block, bfq: don't dereference bic before null checking it
46c16b5ec980 block, bfq: use pointer entity->sched_data only if set
b2994931d0e1 Merge branch 'sdfat'
36ad1a89802f defconfig: enable sdfat filesystem
5127a0e998cb fs: sdfat: Update to version 2.1.8
25315a7d23f8 fs: sdfat: Update to version 2.0.8
b0ac55b04449 sdfat: push rcu_barrier() from deactivate_locked_super() to filesystems
dda0e9dbc62e fs: sdfat: Use clean_bdev_bh_alias instead of unmap_underlying_metadata for >=4.10
4d1850982bd5 fs: sdfat: Stop using CURRENT_TIME_SEC for Linux >= 4.9
30d4234a5bb8 fs: sdfat: 4.14 replaced bi_bdev with a gendisk pointer and partitions index
720836c07af9 fs: sdfat: bio->bi_error got renamed to bio->bi_status on >= 4.13 (Partial)
f85c91ba4f60 fs: sdfat: Add -lineage extraversion to SDFAT_VERSION
2b68162ebcce fs: sdfat: Fix compilation for 32-bit targets
0b4a94faa624 fs: sdfat: Add MODULE_ALIAS_FS for supported filesystems
59d9c2452c1c fs: sdfat: Add config option to register sdFAT for VFAT
ccadace6015b fs: sdfat: Add config option to register sdFAT for exFAT
cb2e01c98283 fs: sdfat: Update to driver version 2.0.6
92c3fcf4fe3c fs: sdfat: Fix compilation without debugging
4704f3d0d934 fs: Import sdFAT driver
b33a749c3866 boeffla_wl_blocker: Block default wakelocks we had before
4b258fee182c usb: f_qc_rndis: Remove unused static variables
d9d3806faba5 msm: ipa: Fix enum-conversion warning
b3dcc9a31d2a soc: qcom: rpm_master_stat: Fix third argument of strlcpy
53128b35d5e5 mmc: host: sdhci-msm-ice: Fix logical not parentheses warning
1630d7e8dba9 camera_v2: sensor: disable clang array-bounds
348cf97c3ea8 msm: camera: Remove unnecessary parentheses
blk-wbt
98a8492172e2 trace: make IPC logging independent of tracing
9b0913334e9a arch: select THIN_ARCHIVES by default
9c24b35fb20e helpers: add sorted object size helper
2422864bb950 init: override zram compressor to zstd before enabled
255b914e0b9c ANDROID: zram: set comp_len to PAGE_SIZE when page is huge
0bffea0c9194 Merge branch 'idle-lpm'
e83ed1cb05b3 cpuidle: lpm-levels: Hold lock during tick_broadcast_enter
0ea728d139d7 cpuidle: lpm-levels: Suppress driver bind/unbind feature
b54f88986758 cpuidle: lpm-levels-legacy: Use of_node_put on node pointers
aa58a420211d cpuidle: lpm-levels: select default level for cluster lpms
7cf6a6506b72 drivers: cpuidle: lpm-levels: Correctly check for list empty
37079aa7e8c5 drivers: cpuidle: lpm-levels: Move local_irq_enable
958c401fa8d8 defconfig: enable Xbox and DualShock controller support
c9729a584d7d BACKPORT: zram: drop max_zpage_size and use zs_huge_class_size()
e1f70863839e BACKPORT: zsmalloc: introduce zs_huge_class_size()
27ee89010cc5 Revert "module: load panel modules and wlan module"
ea3d219d4080 Revert "module: break signature check in driver"
d21af6459700 Merge branch 'freak07-changes'
33677c3162f1 UPSTREAM: HID: sony: remove redundant check for -ve err
8b714c8f5d6d UPSTREAM: HID: sony: Make sure to unregister sensors on failure
0ff5daee5b95 UPSTREAM: HID: sony: Make DS4 bt poll interval adjustable
4e7b080cfba6 UPSTREAM: HID: sony: Set proper bit flags on DS4 output report
e247331df395 UPSTREAM: HID: sony: DS4 use brighter LED colors
e40a93a6fd3c UPSTREAM: HID: sony: Improve navigation controller axis/button mapping
0205246a115b UPSTREAM: HID: sony: Use DS3 MAC address as unique identifier on USB
0cf1cd09044d UPSTREAM: HID: sony: Perform duplicate device check earlier on
c33b36a0d50c UPSTREAM: HID: sony: Expose DS3 motion sensors through separate device
a098ed9fba2e UPSTREAM: HID: sony: Print error on failure to active DS3 / Navigation controllers
b1b96e62c4a9 UPSTREAM: HID: sony: DS3 comply to Linux gamepad spec
8de26cf21ff5 UPSTREAM: HID: sony: Mark DS4 touchpad device as a pointer
ddc476adae1d UPSTREAM: HID: sony: Support motion sensor calibration on dongle
4745c7c06d01 UPSTREAM: HID: sony: Make work handling more generic
2009b3a0f778 UPSTREAM: HID: sony: Treat the ds4 dongle as a separate device
7c183780f481 UPSTREAM: HID: sony: Remove report descriptor fixup for DS4
010d0f45ef38 UPSTREAM: HID: sony: Report hardware timestamp for DS4 sensor values
bb651cc445a1 UPSTREAM: HID: sony: Calibrate DS4 motion sensors
9d1c8c91091c UPSTREAM: HID: sony: Report DS4 motion sensors through a separate device
d145a35b4935 UPSTREAM: HID: sony: Fix input device leak when connecting a DS4 twice using USB/BT
c084a2b0eb92 UPSTREAM: HID: sony: Ignore DS4 dongle reports when no device is connected
7b9040ff29e3 UPSTREAM: HID: sony: Use DS4 MAC address as unique identifier on USB
1747165967d9 UPSTREAM: HID: sony: Fix error handling bug when touchpad registration fails
d724d7ddec47 UPSTREAM: HID: sony: Comply to Linux gamepad spec for DS4
1c58e0f93056 UPSTREAM: HID: sony: Make the DS4 touchpad a separate device
c32fb05c94e8 UPSTREAM: HID: sony: Fix memory issue when connecting device using both Bluetooth and USB
ab8c37f9d6ff UPSTREAM: HID: sony: Adjust value range for motion sensors
6cf76414b9e6 UPSTREAM: HID: sony: Handle multiple touch events input record
83dcb6f5e113 UPSTREAM: HID: sony: Send ds4 output reports on output end-point
f9972a8eb204 UPSTREAM: HID: sony: Perform CRC check on bluetooth input packets
acccec37b40f UPSTREAM: HID: sony: Adjust HID report size name definitions
cf811729828f UPSTREAM: HID: sony: Fix race condition in sony_probe
1014b2aafcdc UPSTREAM: xfrm: fix ptr_ret.cocci warnings
f3bc34505d67 UPSTREAM: xfrm: Return detailed errors from xfrmi_newlink
9c431291f5cf UPSTREAM: xfrm: Allow xfrmi if_id to be updated by UPDSA
dc93153ba974 UPSTREAM: xfrm: Allow Set Mark to be Updated Using UPDSA
e38c2840b01d BACKPORT: xfrm: Add virtual xfrm interfaces
ce6160e1df30 BACKPORT: xfrm: Add a new lookup key to match xfrm interfaces.
ed0466d44e2e UPSTREAM: flow: Extend flow informations with xfrm interface id.
105bfa2f3b76 BACKPORT: xfrm: Extend the output_mark to support input direction and masking.
fe3a69f2df64 BACKPORT: xfrm: fix XFRMA_OUTPUT_MARK policy entry
314f2bf0ec36 BACKPORT: arm64: Expose support for optional ARMv8-A features
0c3f672f8423 UPSTREAM: loop: Add LOOP_SET_BLOCK_SIZE in compat ioctl
e29cdb6ba63f BACKPORT: block/loop: set hw_sectors
12f145891a41 UPSTREAM: loop: add ioctl for changing logical block size
9a5b1b832dd0 ANDROID: usb: gadget: f_mtp: Return error if count is negative
69ecd856fdd5 Merge branch 'wlan'
4a106c56cf10 qcacld-3.0: disable mac randomization by default
dbd8054d2588 add specialized MAC randomization for qcacld-3.0
899206f328b7 qcacld-3.0: Reduce qcom_rx_wakelock timeouts to 7 seconds
ff5b036bb1b7 Merge branch 'revert-clang-hacks'
1c601be0ef40 Revert "ANDROID: HACK: arm64, LLVMLinux: replace prfm instruction in spin_lock_prefetch()"
a1c37a08cb95 Revert "LLVMLINUX: DO-NOT-UPSTREAM arm64, LLVMLinux: prfm"
2559104be002 Revert "ANDROID: HACK: futex, LLVMLinux: don't optimize futex_detect_cmpxchg() on ARM64"
b071e678491c Merge branch 'zram-zstd'
b3bd9a7edfc0 zram: use zstd over lz4 over lzo by default
36906ac32bc1 defconfig: enable zstd
d0fa2d8a27bc zram_drv.c: use pointer as per commit https://github.com/freak07/bluecross/commit/1cdb7f9c79812ecb70c698f7eb5574a47464585f
4d65fd2bb730 Revert "Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write""
76739d97bc8b Revert "Revert "mm/block: convert rw_page users to bio op use""
ec4413dc8ebd zram_drv.c: make zstd default compression algorithm, use lzo as a fallback
6b9c099d97c2 BACKPORT: crypto: zstd - Add zstd support
7b99ea0f72d5 UPSTREAM: drivers/block/zram/zram_drv.c: fix bug storing backing_dev
b3371525dd94 BACKPORT: zram: introduce zram memory tracking
bf3be17249c9 BACKPORT: zram: record accessed second
7bb47c49fdd2 BACKPORT: zram: mark incompressible page as ZRAM_HUGE
5a621e1607b9 UPSTREAM: zram: correct flag name of ZRAM_ACCESS
cafa93a8c470 UPSTREAM: zram: Delete gendisk before cleaning up the request queue
5a64fd5f1b6f UPSTREAM: drivers/block/zram/zram_drv.c: make zram_page_end_io() static
3a1b6ae3f5c4 BACKPORT: zram: set BDI_CAP_STABLE_WRITES once
82dcf0969021 UPSTREAM: zram: fix null dereference of handle
76ec4805f2cb UPSTREAM: zram: add config and doc file for writeback feature
44dcdb9ad4a0 BACKPORT: zram: read page from backing device
44141f625db4 BACKPORT: zram: write incompressible pages to backing device
f9487dd3d947 BACKPORT: zram: identify asynchronous IO's return value
5a2859ed3e3f BACKPORT: zram: add free space management in backing device
c96d6c4e3c72 UPSTREAM: zram: add interface to specif backing device
5286b4c41c7b UPSTREAM: zram: rename zram_decompress_page to __zram_bvec_read
7a4b0d0fefcd UPSTREAM: zram: inline zram_compress
e75026d980e7 UPSTREAM: zram: clean up duplicated codes in __zram_bvec_write
0264bc746786 UPSTREAM: zram: add zstd to the supported algorithms list
5749154c5812 UPSTREAM: lib: Add zstd modules
fb205881c979 UPSTREAM: lib: Add xxhash module
d09190ad1f06 UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()
9a2281755931 UPSTREAM: zram: constify attribute_group structures.
5c0818ff10d6 UPSTREAM: zram: count same page write as page_stored
462937d99516 UPSTREAM: zram: reduce load operation in page_same_filled
20bf041d4dd7 UPSTREAM: zram: use zram_free_page instead of open-coded
d3af2c9e919e UPSTREAM: zram: introduce zram data accessor
93d1060af4cd UPSTREAM: zram: remove zram_meta structure
7d234c66cc93 UPSTREAM: zram: use zram_slot_lock instead of raw bit_spin_lock op
a7191058ba68 BACKPORT: zram: partial IO refactoring
d80238fbc78c UPSTREAM: zram: use __GFP_MOVABLE for memory allocation
cb66adc663de BACKPORT: zram: handle multiple pages attached bio's bvec
86c9aadb5d03 UPSTREAM: zram: fix operator precedence to get offset
828a88674553 BACKPORT: zram: extend zero pages to same element pages
a4d51e3d8d67 BACKPORT: zram: remove waitqueue for IO done
fc42fd3f4a3e Revert "mm/block: convert rw_page users to bio op use"
b1d98cf1e689 Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write"
46f1c9baa318 Revert "staging: zram: Rate limit memory allocation errors"
e9e441cb71c5 Revert "UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()"
14455cf6f3a7 Revert "zram: use __GFP_MOVABLE for memory allocation"
75356bdb7fee Revert "power: Block all them crazy wakelocks"
937a8b66db21 gpu: adreno: only compile Adrneo 6xx driver
9c8af3d2fb7e defconfig: disable menu cpuidle governor
11d8939cbd4e cpuidle: allow disabling menu governor if lpm is available
adfffc6cdf90 defconfig: disable unused touchscreen drivers
bpf-list
3c564631eb24 bpf: Introduce bpf_map ID
952b8309a886 bpf: Introduce bpf_prog ID
78940095ed5d sched/fair: Fix issue where frequency update not skipped
701ad41547ca sched/fair: Skip frequency updates if CPU about to idle
a1d9de02dc07 flasher: overlay: remove default profile settings
b9148e656400 init: set PowerHAL interaction boost duration to 64 ms
e8702b8330d8 cpu_input_boost: refactor last input boost event variable name
46f057f55f87 Merge branch '4.12-swap'
69b8317b8d66 swap: Remove obsolete sentence
982e6c8e3022 mm, swap: use kvzalloc to allocate some swap data structures
850c511128e4 mm, swap: remove unused function prototype
37cce266aeba mm, swap: avoid lock swap_avail_lock when held cluster lock
f7ee8d7e9653 mm, swap: improve readability via make spin_lock/unlock balanced
dcde2b8683c8 mm, swap: fix comment in __read_swap_cache_async
fe2d8bb207b7 mm, swap: Fix a race in free_swap_and_cache()
5dbfcb786412 mm, swap: Remove WARN_ON_ONCE() in free_swap_slot()
06e81ebec395 mm/swap: don't BUG_ON() due to uninitialized swap slot cache
48c5d352d5fc mm/swap: skip readahead only when swap slot cache is enabled
8642dce26005 mm/swap: enable swap slots cache usage
e3ab9391e3c5 mm/swap: add cache for swap slots allocation
a5ada5769b20 mm/swap: free swap slots in batch
d2fe55a16671 mm/swap: allocate swap slots in batches
7e73c0d8f8e6 mm/swap: skip readahead for unreferenced swap slots
f92b0873a009 mm/swap: split swap cache into 64MB trunks
e08ff5a8ceba mm/swap: add cluster lock
2675919a9a5e mm/swap: fix kernel message in swap_info_get()
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
6a9f7f219309 Revert "defconfig: bump input boost duration to 80 ms"
946e74073de3 EXPERIMENTAL: defconfig: disable devfreq boost
5ec4c7fc6978 cpu_input_boost: only kick general boost when the screen is on
a81c4ddf8f54 Revert "Merge branch 'zram-skip-swapcache'"
fd315d111ffe Revert "Revert "scsi: ufs: disable clock scaling""
322a7c119a5b Merge branch 'zram-skip-swapcache'
1d3e0e36ba29 bdi: introduce BDI_CAP_SYNCHRONOUS_IO
3f624bdfd133 mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
98b7cba2e8b4 mm, swap: skip swapcache for swapin of synchronous device
f22e34c09b33 mm/page_io.c: fix oops during block io poll in swapin path
47796050ab86 swap: add block io poll in swapin path
ce25f65db6ba mm, swap: introduce SWP_SYNCHRONOUS_IO
2a6176cea3d2 scripts/wireguard: Limit connection time to 30 seconds
efbf9b6f46f5 Revert "state_notifier: add a third case for boosting"
d24c9362eb06 qpnp-fg: adjust percentage calculation formula
decce9a2511f Revert "scsi: ufs: disable clock scaling"
c1-ts-fw
d86be069327f HACK: defconfig, firmware: bundle s6sy761 firmware for c1
7bab87d13b54 HACK: sec_ts: force firmware update on probe
7beb37eead53 Revert "HACK: input: touchscreen: sec_ts: Don't update FW on probe"
56f8f5c92325 mm: Silence vmap() allocation failures based on caller gfp_flags
d02d9b55786f defconfig: disable obscure HID drivers
474e5cc49258 Use the kernel mm data in case the address is more than PAGE_OFFSET
925d89112012 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
c4113cac4525 defconfig: enable verity at most once by default
6fa1e61df24c ANDROID: Add kconfig to make dm-verity check_at_most_once default enabled
e2a106c05c30 defconfig: sync for qrwlock
49a068ce4809 sched/walt: improve the scheduler
551fb409fb9a locking/qrwlock: Prevent slowpath writers getting held up by fastpath
e4dd454fe5e4 locking/qrwlock, arm64: Move rwlock implementation over to qrwlocks
d5d914e242b3 locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
65663f5fdc4d locking/atomic: Add atomic_cond_read_acquire()
42b43939b70e locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'
f7703f21b951 sched/walt: Fix stale max_capacity issue during CPU hotplug
46a7cc7bbdab drivers: cpu_cooling: vote thermal limit on CPUFREQ_INCOMPATIBLE event
47d5c6b29ec6 cpufreq: add CPUFREQ_INCOMPATIBLE event in policy notifiers
cabc5746dd64 Revert "defconfig: debloat"
caf
9c09512972b8 Merge tag 'LA.UM.7.3.r1-06600-sdm845.0' into caf
ec8fb9b8be18 defconfig: release version v8
584214c6aa49 devfreq_boost: Clean up code style and update license header
0512d34573d2 cpu_input_boost: Clean up code style and update license header
91802ae2d514 soc: qcom: service-locator: Fix kernel panic in pd_locator_work()
647244f40a8f gitignore: ignore saved System.map files
08d450d98668 helpers: save System.map from each build
bdb302632037 defconfig: debloat
4f074351ee55 defconfig: disable stack protector
ce7af2c018b4 defconfig: disable KAISER and KPTI support
99be8eefebf8 Revert "netfilter: match bypass default table"
fc217bb81297 Revert "netfilter: nf_tables: fix mismatch in big-endian system"
7aa6e02029d0 Revert "net: add an optimization for dealing with raw sockets"
03fa5bf35fb6 Revert "kernel: add a few patches for avoiding unnecessary skb reallocations - significantly improves ethernet<->wireless performance"
e37b5f6fc6c7 EXPERIMENTAL: defconfig: enable and use CAKE qdisc as default
8824964b05e8 sch_cake: remove kvzalloc compatibility backport
97bf21340ac4 sch_cake: don't force building as module
9529302008d6 net: allow selecting cake as default qdisc
fdce5356528d net: sched: import sch_cake
f00a3821187b Add 'net/sched/sch_cake/' from commit '581967cba2f465d615b6dc1595e14ae881a56413'
caf-20190207
46165946bd80 ANDROID: sched/fair: Don't balance misfits if it would overload local group
a47750a32b8d ANDROID: sched/fair: Attempt to improve throughput for asym cap systems
068a7c229174 EXPERIMENTAL: defconfig: Disable seccomp filter
44e4a682f22c Merge tag '467d45e50f8f176427b97d1c91785a594a438a02'
493176cfafcf helpers: Don't touch flasher tree
4558b294f456 Revert "cpu_input_boost: Rework scheduling setup"
daf2e016073d Makefile: Remove -fwrapv GCC flag
18b53d6ef872 flasher: Update to February 2019 stock DTBO
9a895c07106f Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
dc79d5980540 setup: Switch to official Arm GCC toolchain
4c065162dbf4 misc: cs40l2x: Promote vibration start work to SCHED_FIFO
1d742e60e6df defconfig: Reduce vmstat update interval
1d3751c01b98 security: pfe: Disable clocks for crypto engine
4b2169056abf security: pfe: Use non blocking scm call
502dd0147f81 ARM: dts: c1: Update ROI alignment values
529260e0ea7b ARM: dts: b1: Enable partial update
e6904143a7e4 defconfig: Remove negative boost values
02dee903f856 Revert "cpu_input_boost: introduce negative display state aware boosting"
d020d0f239c6 defconfig: Update to stable version v14
25516be9308a defconfig: Reduce general stune boost to 10
caf-kgsl
7d3915df5fee msm: kgsl: Increase the fenced write timeout
31e95874abf0 msm: kgsl: Trigger preemption only if GMU is in ACTIVE state
f4a8873057e6 msm: kgsl: Add a property to find if secure context is supported
f480767c795d msm: kgsl: Add a property to find alignment of secure buffers
ae644fadd7f8 msm: kgsl: Limit log frequency in case of context count maxed out
ba61c3325fbe msm: kgsl: Make sure gpu-speed-bin-vectors has the correct size
4ca3be7b6017 msm: kgsl: Don't halt dispatcher if device is not in SUSPEND state
ff3a01bc25ed msm: kgsl: Fix the missing IBs from the snapshot
0e7f2ed0e131 msm: kgsl: Keep a list of perfcounters per file descriptor
2c4934c717ec msm: kgsl: Trigger GMU recovery on OOB set failures
148e0cb1a626 zram: allow zram to allocate CMA pages
992f6d3db068 cpufreq: Add CPUFREQ_STOP notification when cpu offline
503fb6934f9a sched/rt.c: fix missing include for latest backport
c87b2a189ed4 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
bdab773807ee BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
b555e2ab75b2 ANDROID: Move schedtune en/dequeue before schedutil update triggers
0116fa61c87a Merge branch 'overflow'
499c17a321b0 overflow changes: fix some conflicts
1516399848ab BACKPORT: treewide: Use array_size() in sock_kmalloc()
339ae11eaa33 BACKPORT: treewide: Use array_size() in vzalloc_node()
9c9a52b1a49e BACKPORT: treewide: Use array_size() in vzalloc()
969c355deb27 BACKPORT: treewide: Use array_size() in vmalloc()
f71890ffd000 BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
a4154311a159 BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
890e541b0852 BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
7f7af5555cf4 BACKPORT: treewide: kzalloc() -> kcalloc()
6052593ec9fd BACKPORT: treewide: kmalloc() -> kmalloc_array()
115fcf234a17 BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
0ccd15b2ae63 BACKPORT: treewide: Use struct_size() for vmalloc()-family
5fc7b60eb036 BACKPORT: treewide: Use struct_size() for kmalloc()-family
1d05ec3ff219 UPSTREAM: mm: Introduce kvcalloc()
c713ba5cdfc3 UPSTREAM: Convert v4l2 event to struct_size
0c6a73aaa96a UPSTREAM: Convert virtio_console to struct_size
51fadc5421a4 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
51737dea6daf BACKPORT: mm: Use overflow helpers in kvmalloc()
75d13b5f4c9a UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
a199de13c4df UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
86230c38a66a UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
bf5cf91bf78b UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
028c4a398964 UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
439ad57581d2 CHROMIUM: mm: Take kvmalloc_array() from upstream
807fb4a3dcd5 BACKPORT: mm: introduce kv[mz]alloc helpers
d9a9284b99a6 f2fs: Remove duplicate k*alloc definitions
0e6ff298f62d diag: Featurize IPC logging
8c58b707dbcf defconfig: enable state notifier
1025affbae13 state_notifier: add a third case for boosting
caf-mem
eb993fd76128 mm: Silence vmap() allocation failures based on caller gfp_flags
baa41135adff diag: Prevent accessing uninitialized diag_md_info member
a6ad718c264a net: sockev: fix uninitialized data leak into userspace
7a7592885b58 defconfig: disable obscure HID drivers
7d7115d6b10e drm/msm/sde: sanitize debugfs inputs when reading mdp memory
f0ddcb19e848 trace: ipc_logging: Fix memory leak of "struct dfunc_info"
e43af4f6e382 soc: qcom: pil: Avoid memory leaks by releasing the firmware resources
f1358e272e07 msm:ipa: Fix memleak issue
54baa8ac7128 usb: pd: Fix memory leak in usbpd_create()
99e3cd10bb9f usb: dwc3-msm: Fix memory leak of dwc3 child device
474e5cc49258 Use the kernel mm data in case the address is more than PAGE_OFFSET
925d89112012 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
c4113cac4525 defconfig: enable verity at most once by default
6fa1e61df24c ANDROID: Add kconfig to make dm-verity check_at_most_once default enabled
e2a106c05c30 defconfig: sync for qrwlock
49a068ce4809 sched/walt: improve the scheduler
551fb409fb9a locking/qrwlock: Prevent slowpath writers getting held up by fastpath
e4dd454fe5e4 locking/qrwlock, arm64: Move rwlock implementation over to qrwlocks
d5d914e242b3 locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
65663f5fdc4d locking/atomic: Add atomic_cond_read_acquire()
caf-mem-leaks
1faaa1e82892 ANDROID: sched/debug: Make Energy Model read-only
a6dab4811253 net: memset smsg to avoid the padding data
84f526a7b285 net: sockev: fix uninitialized data leak into userspace
69fa264d5f2c net: core: null pointer derefernce in sockev_client_cb
e20e9aff4430 cnss_prealloc: Remove excessive warnings in cnss_prealloc driver
ede6fd6e8fa7 f_qc_rndis: Call rndis_ipa_init() from rndis_qc_bind()
54f61cb32918 dwc3-msm: Add delay between consecutive register reads in while loop
bd2d40b5f1e5 soc: qcom: secure_buffer: Fix the parameter passing to dmac_flush_range
f3e34b846b76 drm/msm/dsi-staging: fix potential out of bounds memory accesses
6f91638a14f2 ASoC: Fix UBSAN warning at snd_soc_get/put_volsw_sx()
329953ae9e4c wcnss: Fix buffer overflow in wcnss_prealloc_get
b718c6946937 msm:ipa: Fix memleak issue
486860a8b744 msm: camera: Fix for Possible information leak issue
e0bc7198fc1d cnss_prealloc: Update prealloc memory table
de6ff938496f arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default
645dfa15b137 qseecom: Increase the scattered entry buffer size
0ee144fdee59 ARM: enable vmalloc saving
479f43d8de7c msm: vidc: do not set video state to DEINIT very early
f9492b0c74cd msm: vidc: ignore processing responses in invalid state
57a7ec06f025 Revert "zram: update zram to use zpool"
caf-merge
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4039e17d68da drm/msm/dsi-staging: Prevent flickerfree from being enabled on b1
ae41b9284a75 arm64: Add functions to get the current device being used
0e347db60a90 cpu_input_boost: Clean up SchedTune boost handling
265cf4de2ffa defconfig: Update SchedTune boost configuration
c2f190c9b557 cpu_input_boost: Revise SchedTune boost configuration
6d68dda951d9 defconfig: Disable bootloader log driver
4c21a9a08785 drm/msm/dsi-staging: Update brightness upon backlight dimmer toggle
9007d0a4be1d Merge branch 'revert-blu-schedutil'
acbbcaf73cb6 defconfig: Remove blu_schedutil options
dd5dd1a0dd45 Revert "cpufreq: blu_schedutil: Introduce initial bringup"
458cf5c426d9 qseecom: Fix typo in app loading message
4ff54ee05378 Revert "cpufreq: blu_schedutil: make iowait boost optional"
511090227fdd Revert "cpufreq: blu_schedutil: add a couple fixes"
0c0a76a4c302 Revert "cpufreq: blu_schedutil: add some bits from Pixel 3"
791b549db61f defconfig: Enable display exposure adjustment driver
b29ed57b56c6 drm/msm/dsi-staging: Hook up configurable display exposure adjustment
1e4929ca2515 drm: Introduce exposure adjustment driver
5db5c27c6f27 sched/walt: Reduce window size to 8 ms and load history to 64 ms
caf-misc
005ed4e64020 defconfig: sync for qrwlock
a880166e253a sched/walt: improve the scheduler
8a05085e5d91 locking/qrwlock: Prevent slowpath writers getting held up by fastpath
b7230da82d4a locking/qrwlock, arm64: Move rwlock implementation over to qrwlocks
5d57f75cb901 locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
91800ac6725c locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'
c76df6a32474 sched/walt: Fix stale max_capacity issue during CPU hotplug
094170e0890d drivers: cpu_cooling: vote thermal limit on CPUFREQ_INCOMPATIBLE event
cabc5746dd64 Revert "defconfig: debloat"
ec8fb9b8be18 defconfig: release version v8
584214c6aa49 devfreq_boost: Clean up code style and update license header
0512d34573d2 cpu_input_boost: Clean up code style and update license header
91802ae2d514 soc: qcom: service-locator: Fix kernel panic in pd_locator_work()
647244f40a8f gitignore: ignore saved System.map files
08d450d98668 helpers: save System.map from each build
bdb302632037 defconfig: debloat
4f074351ee55 defconfig: disable stack protector
ce7af2c018b4 defconfig: disable KAISER and KPTI support
99be8eefebf8 Revert "netfilter: match bypass default table"
fc217bb81297 Revert "netfilter: nf_tables: fix mismatch in big-endian system"
caf-ndelay
5bbe0157c154 kernel: time: Add delay after cpu_relax() in tight loops
12f8fe92ac46 Revert "hrtimer: Change cpu_relax() in hrtimer_cancel() to udelay(1) instead."
85ae8ee55fa7 Revert "timers: Change cpu_relax() in del_timer_sync() to udelay(1) instead"
53cdefb026ad Revert "alarmtimer: Change cpu_delay() in alarm_cancel() to udelay(1)."
f85ac00441dc Merge tag 'android-9.0.0_r0.73' into drivers/staging/qcacld-3.0
6931877f9813 Merge tag 'android-9.0.0_r0.73' into techpack/audio
3cc32b50b49c Revert "lib/int_sqrt: optimize initial value compute"
b4244620bb52 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
943947ede822 vdso32: Invoke clang with correct path to GCC toolchain
040e6fd7cf62 Revert "ANDROID: arm64: vdso32: fix CC=clang build"
a0f5afd594ea panic: Print the function name after stack corruption
8e7f010d7862 block: silently forbid sending any ioctl to a partition
a9813d0b88c5 usb: dwc3: add NULL pointer check in gadget driver.
4fe69609f795 qseecom: set rcv_req_flag to 0 when listener is just registered
2cab20cc5f66 qseecom: do not wake up listener to receive request if it is not ready
013a10b78fd9 qseecom: check if listener is not ready to receive request
89b7d14b9f1b qseecom: set listener id before sending registration scm_call
d43c9ae6bbf2 qseecom: processing invalid listener request
0939848fbdab qseecom: change check_blocked flag to an u32 value
0b8032419ffc qseecom: check if app is blocked when unloading app
caf-rebase
ec8fb9b8be18 defconfig: release version v8
584214c6aa49 devfreq_boost: Clean up code style and update license header
0512d34573d2 cpu_input_boost: Clean up code style and update license header
91802ae2d514 soc: qcom: service-locator: Fix kernel panic in pd_locator_work()
647244f40a8f gitignore: ignore saved System.map files
08d450d98668 helpers: save System.map from each build
bdb302632037 defconfig: debloat
4f074351ee55 defconfig: disable stack protector
ce7af2c018b4 defconfig: disable KAISER and KPTI support
99be8eefebf8 Revert "netfilter: match bypass default table"
fc217bb81297 Revert "netfilter: nf_tables: fix mismatch in big-endian system"
7aa6e02029d0 Revert "net: add an optimization for dealing with raw sockets"
03fa5bf35fb6 Revert "kernel: add a few patches for avoiding unnecessary skb reallocations - significantly improves ethernet<->wireless performance"
e37b5f6fc6c7 EXPERIMENTAL: defconfig: enable and use CAKE qdisc as default
8824964b05e8 sch_cake: remove kvzalloc compatibility backport
97bf21340ac4 sch_cake: don't force building as module
9529302008d6 net: allow selecting cake as default qdisc
fdce5356528d net: sched: import sch_cake
f00a3821187b Add 'net/sched/sch_cake/' from commit '581967cba2f465d615b6dc1595e14ae881a56413'
344ea50efaee Revert "defconfig: revert to pfifo_fast qdisc"
caf-sched
aa2cf4ce9baa sched: remove skip_sg
7893f7b5da4c sched/fair: start_cpu() fix for rtg_target case
a03629a2ba08 sched/fair: Improve the scheduler
3bab5693b91e sched/fair: improve placement logic
eb412ed73b01 sched/fair: Fix redundant load balancer reattempt due to LBF_ALL_PINNED
cb45ae930682 sched/fair: Allow idle local group to pull tasks from overloaded group
5edae1fcfed9 sched/walt: improve the scheduler
894bf5478e4e sched/walt: improve the scheduler
35e82836c1a6 Revert "Merge branch 'caf-sdm710-sched'"
f21dcb2d222c HID: uhid: Remove the redundant reference counting for open/close
331170e011d8 defconfig: Disable ChaCha20 through crypto API
e90de435686c Revert "cpuidle: don't disable cpuidle when entering suspend"
78cf5b618001 ion: msm_ion: fix incorrect ion_buffer member assignment
ec953a6a0c09 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
b399081dc922 drm/msm/dsi-staging: Prevent flickerfree from being enabled on b1
62a20fbdde45 arm64: Add functions to get the current device being used
f17005de1371 cpu_input_boost: Clean up SchedTune boost handling
9536b1a89d9b sched: tune: Add prioritization logic to negative boosting
265cf4de2ffa defconfig: Update SchedTune boost configuration
c2f190c9b557 cpu_input_boost: Revise SchedTune boost configuration
caf-sdm710-sched
e8492df2490b sched/fair: fix compilation after commit d1aff798c840
ba9a52ffc6d1 sched: remove skip_sg
d90aa7cb79b0 sched/fair: start_cpu() fix for rtg_target case
d8d51e974500 sched/fair: Improve the scheduler
8746365466ba sched/fair: Fix redundant load balancer reattempt due to LBF_ALL_PINNED
c7a6b2c3c186 sched/fair: Allow idle local group to pull tasks from overloaded group
247b47f6d111 sched/walt: improve the scheduler
459ed229cf56 sched/walt: improve the scheduler
d29fd0403603 sched/fair: improve placement logic
705eacedabf4 init: Bump performance profile boost frequencies
485aaaf55cd7 Revert "[iov_iter] new primitives - copy_from_iter_full() and friends"
a64e1f04702b Revert "net: sch_generic: Remove unnecessary watchdog warning"
25827f6f8f61 init: Update profiles for recent changes
cfa77e2baf7e defconfig: Use default frame boost timeout
1b8530abbc58 cpu_input_boost: Include types.h in header
12c070f139dc cpu_input_boost: Make frame boost timeout configurable
44f270f6de20 drm/atomic: Use input boost instead of general boost
6dc6e9eef8ce defconfig: Remove general boost options
d70428168e01 cpu_input_boost: Fix indentation and header ordering
89d5483f2148 Revert "cpu_input_boost: add API for general CPU boosting"
cib-mdss
2f7a50c801b5 cpu_input_boost: Replace msm_drm notifier with fb notifier
94414be2e4ad defconfig: Update CPU Input Boost options
68b99deb4d2f drm/atomic: Add a configurable timeout for frame commit boosts
1f0f35c2d013 fork: Update input timeout boost check to use new API
32d9e5102672 cpu_input_boost: Update copyright header
00089ecbcc17 cpu_input_boost: Convert to global display state tracker
d539f9777209 cpu_input_boost: Update SchedTune boost value alongside frequency
b43097e2592b cpu_input_boost: Add early wake boost on power button press
f88d6a5c73f3 cpu_input_boost: Add dedicated wake boost functionality
abe3111da59b cpu_input_boost: Track input event times and expose timeout helper
64e4be6da04f cpu_input_boost: Allow configuration of each cluster's base frequency
fb025d298250 cpu_input_boost: Expose compile-time settings as module parameters
56d433956ec1 cpu_input_boost: Allow configuration of each cluster's max-boost freq
1bc14bdc8d89 cpu_input_boost: Fix SPDX identifier format in header
c67d764beabf cpu_input_boost: Mark boost kthread as performance critical
7bb7b9ba9864 cpu_input_boost: Serialize everything with a master kthread
21a6f76976c0 cpu_input_boost: Discard custom changes
ea4593588bbd drm/atomic: Discard custom boost changes
5a6c20bd9d49 drivers: thermal: limits-dcvs: Always build driver
03c324f5b521 defconfig: Sync
cleanup
1c4a61f9f7c2 Revert "uapi: Export sockaddr_storage for userspace"
3615049a4a29 Revert "fs/sync: add blocking variant of sync() to be called within the kernel"
760d09efe697 Revert "mdss: rotator: Use FIFO kthread for rotator work"
2e5b24710bde Revert "msm_serial_hs: actually check if msm_serial_hs_tx_work failed to init"
9d42bf2cfe59 Revert "qpnp-fg: adjust percentage calculation formula"
e456d077be80 Revert "sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q"
3e0326e6dc5c Revert "cpufreq: stats: New sysfs attribute for clearing statistics"
8ea38c068d9c Revert "mm, slab: faster active and free stats"
5cb1b5f98566 Revert "EXPERIMENTAL: defconfig: enable IFB"
3b6076a54108 Revert "Merge branch 'sysfs-devicetree-config'"
d3c329f198bd Revert "debloat: add some debloat patches, strip down procfs and make O_DIRECT support optional, saves ~15K after lzma on MIPS"
045b9ea9be89 Revert "debloat: procfs"
57da33347124 Revert "debloat: dmabuf"
060caa850124 Revert "mm: keep zoneinfo when stripped procfs is enabled"
cd4519410499 Revert "Add an OSX specific patch to make the kernel be compiled"
3b044f0b9bfe Revert "kernel: fix linux 4.9 host tools portability issues"
92e36fef2268 Revert "linux-3.6: fix portability of some includes files in tools/ used on the host"
caa161fb89a5 Revert "kernel: fix linux/spi/spidev.h portability issues with musl"
f778ed40f925 Revert "disable -Wattribute-alias warning for SYSCALL_DEFINEx()"
bfc08fd78540 Revert "Add optional debugging for cpu_input_boost and devfreq_boost"
cleanup2
5de5ef85cd96 Revert "Merge branch 'debug-omits'"
b542ab16c383 arm64: Remove I-cache invalidation from flush_cache_range()
8cd7428444e7 Revert "Merge branch '4.10-genirq'"
58974c174824 Revert "Merge branch '4.10-rcu'"
9c44a5c89204 Revert "Merge branch 'slub-updates'"
c4ab906ec0ba Revert "Merge branch '4.10-sched'"
ef35634c8185 Revert "binfmt_elf.c: use get_random_int() to fix entropy depleting"
b2c2473f6605 Revert "AIO: Don't plug the I/O queue in do_io_submit()"
4bbc0042df7e Revert "EXPERIMENTAL: defconfig: Disable seccomp filter"
53585a39dbb8 defconfig: Bump boost settings
3bd4ef6c77ed Revert "init: Disable prefer_idle for FG and TA SchedTune groups"
df814cff93c0 Revert "Merge branch '4.10-arm64'"
86d8d8e6f262 Reapply fbf12e19c9f13374ded72893f34777c2fa41f75c
06247b0550ff Revert "Revert "softirq: Let ksoftirqd do its job""
e9bef258c114 defconfig: Enable scheduler debugging
c7e4e4c99843 defconfig: Bump timer frequency to 500 Hz
f52926b3c56e Revert "include: asm-generic: do not hard code HZ to 100"
ce0bb526d82b defconfig: Disable scheduler debugging
30ccda7bfd01 sched/debug: Remove SCHED_DEBUG dependency on DEBUG_KERNEL
75f21ee70a72 UPSTREAM: xfrm: Make set-mark default behavior backward compatible
cleanup3
a52c4864418d defconfig: Sync for cleanup
a8db640b83e9 Revert "net: ipc_router_core: fix memleak with IPC_LOGGING disabled"
ac6bb0e4b497 Revert "defconfig: Bump boost settings"
139f54ec3843 Revert "dwc3-msm: boost CPU and DDR when usb is connected"
e69a94e31037 Revert "ARM: dts: msm: Enable SMMU S1 from IPA and WLAN side in SDM845"
a6838367f2c2 Revert "Merge branch '4.10-misc'"
1b85e1bc8de5 Revert "Merge branch 'lede-backports'"
51bb36df42af Revert "Merge branch 'lede-hacks'"
760080d82556 Revert "Merge branch 'lede-pending'"
d223f1d284fc defconfig: Sync for optimize inlining revert
65dbdc6eae77 Revert "compiler-gcc: optimize inlining"
e91e4684cedc setup: Use Clang as the primary compiler
b5b15953ade5 setup_clang: Remove unnecessary environment exports
566da05ac602 Makefile: Remove unnecessary linker erratum flags
6a863b83e352 Makefile: Remove duplicate GCC erratum fix disable flag
a835a4989c27 Revert "arm64: explicitly disable erratum 843419 fix if disabled in config"
519fcc2bd865 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d337789da93d Revert "mm: compaction: Add automatic compaction mechanism"
fd06fdcc6ea0 Revert "mm: compaction: switch FB notifier API to MSM DRM notifier"
accc048ab578 Revert "mm: compaction: Fix bad logging"
clear-linux-patches
315ea290d3f2 locking: rwsem: spin faster
c8892fcfa66c ipv4/tcp: allow the memory tuning for tcp to go a little bigger than default
fe64b0f28e8f give rdrand some credit
d73b539ad98c Initialize ata before graphics
b8b5bc168796 pci pme wakeups
6b20da7f5f01 Increase the ext4 default commit age
fb75a329bc9b helpers: use sftp instead of scp for sktest
1a5d218f4c16 setup: clean up environment variables from clang script
3660673d0ff2 sec_ts: de-Samsungify
6e3d0b5252bc defconfig: enable LD_DEAD_CODE_DATA_ELIMINATION
f6371e50dc2e arch: allow configuring LD_DEAD_CODE_DATA_ELIMINATION
3867c395bc4f power: silence constant logging during charging
4610c7aaa83b Merge branch 'zram-z3fold'
3949cbc80fc0 defconfig: use z3fold for zram, disable zsmalloc
6da0e4fc71fb zram: use octal permissions
4522b6cc97e5 zram: Add compile-time support for choosing default allocator
958458beb507 zsmalloc: Add compaction callbacks
68f04cad810d zpool: add compaction api
e3580e631c8c zram: use common zpool interface
0492ebebb9bd z3fold: Don't fail on zRAM allocation requests
f891205d2825 FROMLIST: z3fold: fix wrong handling of headless pages
fcc045503da4 zram: set physical queue limits to avoid array out of bounds accesses
3bcbd74458f5 staging: zram: Rate limit memory allocation errors
2862e86c6a43 Merge branches 'upstream-stable' and 'caf-mem-leaks'
1faaa1e82892 ANDROID: sched/debug: Make Energy Model read-only
a6dab4811253 net: memset smsg to avoid the padding data
84f526a7b285 net: sockev: fix uninitialized data leak into userspace
69fa264d5f2c net: core: null pointer derefernce in sockev_client_cb
e20e9aff4430 cnss_prealloc: Remove excessive warnings in cnss_prealloc driver
ede6fd6e8fa7 f_qc_rndis: Call rndis_ipa_init() from rndis_qc_bind()
54f61cb32918 dwc3-msm: Add delay between consecutive register reads in while loop
bd2d40b5f1e5 soc: qcom: secure_buffer: Fix the parameter passing to dmac_flush_range
f3e34b846b76 drm/msm/dsi-staging: fix potential out of bounds memory accesses
6f91638a14f2 ASoC: Fix UBSAN warning at snd_soc_get/put_volsw_sx()
329953ae9e4c wcnss: Fix buffer overflow in wcnss_prealloc_get
b718c6946937 msm:ipa: Fix memleak issue
486860a8b744 msm: camera: Fix for Possible information leak issue
e0bc7198fc1d cnss_prealloc: Update prealloc memory table
de6ff938496f arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default
645dfa15b137 qseecom: Increase the scattered entry buffer size
0ee144fdee59 ARM: enable vmalloc saving
479f43d8de7c msm: vidc: do not set video state to DEINIT very early
f9492b0c74cd msm: vidc: ignore processing responses in invalid state
e4e871903232 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into upstream-stable
d3f53b32471c mm: swap: don't delay swap free for fast swap devices
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
compilerbench
e35f5ec1ae8d defconfig: Sync
3c48dcf22a4f Makefile: Disable GCC Graphite optimizations
e142eb741dee Revert "arm64/kernel: jump_label: Switch to relative references"
6e369b71d252 Revert "jump_label: remove bug.h, atomic.h dependencies for HAVE_JUMP_LABEL"
602c4d5f2f11 Revert "jump_label: Reduce the size of struct static_key"
ffb2a9bfa611 Revert "jump_label: Reorder hotplug lock and jump_label_lock"
e0e7cb58e2c7 Revert "jump_label: Fix concurrent static_key_enable/disable()"
c0149b3aa55f Revert "jump_label: Add RELEASE barrier after text changes"
7134a1cea989 Revert "jump_label: Move CPU hotplug locking"
eb9eaf92ec67 Revert "jump_label: Split out code under the hotplug lock"
2eb7403e7533 Revert "jump_label: Provide hotplug context variants"
9c23584222e7 Revert "locking/static_keys: Improve uninitialized key warning"
7479539e6934 Revert "sched/core: Fix cpu.max vs. cpuhotplug deadlock"
9847fcd52263 Revert "jump_label: Fix sparc64 warning"
257764f04a12 Revert "jump_label: Use static_key_linked() accessor"
5599d4f5642f Revert "jump_label: Fix typo in warning message"
963bf50aa517 Revert "jump_label/lockdep: Assert we hold the hotplug lock for _cpuslocked() operations"
8e14c45f8c75 Revert "jump_label: Abstract jump_entry member accessors"
974a4f887c89 Revert "jump_label: Implement generic support for relative references"
1de45aeea1ec Revert "jump_label: Annotate entries that operate on __init code earlier"
corepower
dfeeab3e7086 cib unbound
ea9117ba4ebc defconfig: Enable CorePower
a2f8502d47c2 input: fpc: Trigger CorePower wakeup on interrupt
fb8af7b9f48f drm/bridge: Trigger CorePower wakeup before enabling bridges
9989e0b9f24a power: Introduce CorePower system power state optimizer
f2a63d3ab7d2 Revert "clk: qcom: clk-cpu-osm: Bypass clk framework for CPU frequencies"
7710b5318ae4 clk: qcom: clk-cpu-osm: Advertise transition latency to cpufreq
2da7deb93c6d clk: qcom: clk-cpu-osm: Bypass clk framework for CPU frequencies
705128abf67d clk: qcom: clk-cpu-osm: Remove sdm845v1 support
d13310af5c88 clk: qcom: clk-cpu-osm: Don't sleep inside the global clk lock
209c95e86bd6 clk: qcom: clk-cpu-osm: Convert atomic delay into sleep
5a0133252133 clk: qcom: clk-cpu-osm: Limit the rate of CPU clock-rate changes
751d2d0f6bbd Merge branch 'int-sqrt-opt'
0975b398ca41 lib/int_sqrt: adjust comments
0bf1552feaa9 lib/int_sqrt: optimize initial value compute
14187502b21d lib/int_sqrt: optimize small argument
cfd118a060c6 Revert "int_sqrt.c: Correction square root algo with naming"
494defcefb5c Revert "int_sqrt: Improve 3x faster integer sqrt."
8d9d6126b6a8 drm/msm/sde: Wait for ctl_start asynchronously on cmd mode panels
020bf2288ca4 Revert "kernel: Force trivial, unbound kthreads onto low-power CPUs"
738dd4ecd9be sched/fair: Fix botched starting CPU selection logic
92cb67f5c93c Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
31a14c6413a7 clk: qcom: clk-cpu-osm: Set dvfs_possible_from_any_cpu cpufreq driver flag
9ae4a1188fcd cpufreq: schedutil: Don't restrict kthread to related_cpus unnecessarily
62693c13c6ce cpufreq: Simplify cpufreq_can_do_remote_dvfs()
cpu-input-boost-new
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
6a9f7f219309 Revert "defconfig: bump input boost duration to 80 ms"
946e74073de3 EXPERIMENTAL: defconfig: disable devfreq boost
5ec4c7fc6978 cpu_input_boost: only kick general boost when the screen is on
a81c4ddf8f54 Revert "Merge branch 'zram-skip-swapcache'"
fd315d111ffe Revert "Revert "scsi: ufs: disable clock scaling""
322a7c119a5b Merge branch 'zram-skip-swapcache'
1d3e0e36ba29 bdi: introduce BDI_CAP_SYNCHRONOUS_IO
3f624bdfd133 mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
98b7cba2e8b4 mm, swap: skip swapcache for swapin of synchronous device
f22e34c09b33 mm/page_io.c: fix oops during block io poll in swapin path
47796050ab86 swap: add block io poll in swapin path
ce25f65db6ba mm, swap: introduce SWP_SYNCHRONOUS_IO
2a6176cea3d2 scripts/wireguard: Limit connection time to 30 seconds
efbf9b6f46f5 Revert "state_notifier: add a third case for boosting"
d24c9362eb06 qpnp-fg: adjust percentage calculation formula
decce9a2511f Revert "scsi: ufs: disable clock scaling"
c4be6b3394a6 Revert "ANDROID: dm-crypt: run in a WQ_HIGHPRI workqueue"
d439564fa1cf sched_clock: shut. up.
7f8cf34e2f66 qpnp-fg-gen3: limit fg data queries to once per 8 seconds
7b148db64fc0 tcp_westwood: tune RTT values, mark as __read_mostly
315ad518cdc2 qcacld-3.0: disable some debugging features
3339e23d36f5 defconfig: enable Yama security
5bc7a458296f mm: keep zoneinfo when stripped procfs is enabled
b9ededd127b3 EXPERIMENTAL: defconfig: use userspace lmkd
cpu-oc
2cc43fe728cf HACK: clk-cpu-osm: overclock big cluster to 2956.8 MHz
e9414e26bb81 Revert "power: silence constant logging during charging"
4cd2a0568f3f Merge branch 'clear-linux-patches'
315ea290d3f2 locking: rwsem: spin faster
c8892fcfa66c ipv4/tcp: allow the memory tuning for tcp to go a little bigger than default
fe64b0f28e8f give rdrand some credit
d73b539ad98c Initialize ata before graphics
b8b5bc168796 pci pme wakeups
6b20da7f5f01 Increase the ext4 default commit age
fb75a329bc9b helpers: use sftp instead of scp for sktest
1a5d218f4c16 setup: clean up environment variables from clang script
3660673d0ff2 sec_ts: de-Samsungify
6e3d0b5252bc defconfig: enable LD_DEAD_CODE_DATA_ELIMINATION
f6371e50dc2e arch: allow configuring LD_DEAD_CODE_DATA_ELIMINATION
3867c395bc4f power: silence constant logging during charging
4610c7aaa83b Merge branch 'zram-z3fold'
3949cbc80fc0 defconfig: use z3fold for zram, disable zsmalloc
6da0e4fc71fb zram: use octal permissions
4522b6cc97e5 zram: Add compile-time support for choosing default allocator
958458beb507 zsmalloc: Add compaction callbacks
68f04cad810d zpool: add compaction api
e3580e631c8c zram: use common zpool interface
0492ebebb9bd z3fold: Don't fail on zRAM allocation requests
f891205d2825 FROMLIST: z3fold: fix wrong handling of headless pages
fcc045503da4 zram: set physical queue limits to avoid array out of bounds accesses
3bcbd74458f5 staging: zram: Rate limit memory allocation errors
2862e86c6a43 Merge branches 'upstream-stable' and 'caf-mem-leaks'
1faaa1e82892 ANDROID: sched/debug: Make Energy Model read-only
a6dab4811253 net: memset smsg to avoid the padding data
84f526a7b285 net: sockev: fix uninitialized data leak into userspace
69fa264d5f2c net: core: null pointer derefernce in sockev_client_cb
e20e9aff4430 cnss_prealloc: Remove excessive warnings in cnss_prealloc driver
ede6fd6e8fa7 f_qc_rndis: Call rndis_ipa_init() from rndis_qc_bind()
54f61cb32918 dwc3-msm: Add delay between consecutive register reads in while loop
bd2d40b5f1e5 soc: qcom: secure_buffer: Fix the parameter passing to dmac_flush_range
f3e34b846b76 drm/msm/dsi-staging: fix potential out of bounds memory accesses
6f91638a14f2 ASoC: Fix UBSAN warning at snd_soc_get/put_volsw_sx()
329953ae9e4c wcnss: Fix buffer overflow in wcnss_prealloc_get
b718c6946937 msm:ipa: Fix memleak issue
486860a8b744 msm: camera: Fix for Possible information leak issue
e0bc7198fc1d cnss_prealloc: Update prealloc memory table
de6ff938496f arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default
645dfa15b137 qseecom: Increase the scattered entry buffer size
0ee144fdee59 ARM: enable vmalloc saving
479f43d8de7c msm: vidc: do not set video state to DEINIT very early
f9492b0c74cd msm: vidc: ignore processing responses in invalid state
e4e871903232 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into upstream-stable
d3f53b32471c mm: swap: don't delay swap free for fast swap devices
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
cpuidle-teo-gov
716f20f71cb2 things
2df1ba27c194 Merge branch 'pm-4.17' into cpuidle-teo-gov
7c6cca75a7b6 defconfig: enable teo cpuidle governor
fe60e420d9ae cpuidle: teo: bump rating
d586c2845dcf cpuidle: New timer events oriented governor for tickless systems
4610c7aaa83b Merge branch 'zram-z3fold'
3949cbc80fc0 defconfig: use z3fold for zram, disable zsmalloc
6da0e4fc71fb zram: use octal permissions
4522b6cc97e5 zram: Add compile-time support for choosing default allocator
958458beb507 zsmalloc: Add compaction callbacks
68f04cad810d zpool: add compaction api
e3580e631c8c zram: use common zpool interface
0492ebebb9bd z3fold: Don't fail on zRAM allocation requests
f891205d2825 FROMLIST: z3fold: fix wrong handling of headless pages
fcc045503da4 zram: set physical queue limits to avoid array out of bounds accesses
3bcbd74458f5 staging: zram: Rate limit memory allocation errors
2862e86c6a43 Merge branches 'upstream-stable' and 'caf-mem-leaks'
1faaa1e82892 ANDROID: sched/debug: Make Energy Model read-only
a6dab4811253 net: memset smsg to avoid the padding data
84f526a7b285 net: sockev: fix uninitialized data leak into userspace
69fa264d5f2c net: core: null pointer derefernce in sockev_client_cb
e20e9aff4430 cnss_prealloc: Remove excessive warnings in cnss_prealloc driver
ede6fd6e8fa7 f_qc_rndis: Call rndis_ipa_init() from rndis_qc_bind()
54f61cb32918 dwc3-msm: Add delay between consecutive register reads in while loop
bd2d40b5f1e5 soc: qcom: secure_buffer: Fix the parameter passing to dmac_flush_range
f3e34b846b76 drm/msm/dsi-staging: fix potential out of bounds memory accesses
6f91638a14f2 ASoC: Fix UBSAN warning at snd_soc_get/put_volsw_sx()
329953ae9e4c wcnss: Fix buffer overflow in wcnss_prealloc_get
b718c6946937 msm:ipa: Fix memleak issue
486860a8b744 msm: camera: Fix for Possible information leak issue
e0bc7198fc1d cnss_prealloc: Update prealloc memory table
de6ff938496f arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default
645dfa15b137 qseecom: Increase the scattered entry buffer size
0ee144fdee59 ARM: enable vmalloc saving
479f43d8de7c msm: vidc: do not set video state to DEINIT very early
f9492b0c74cd msm: vidc: ignore processing responses in invalid state
e4e871903232 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into upstream-stable
d3f53b32471c mm: swap: don't delay swap free for fast swap devices
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
152b1975be1b tick: Don't clear idle and iowait sums on CPU down
b480730bdf0b drivers: i2c: Fix direct reference to HZ
ddd30747bf49 selinux: don't require auditing
d13c2b34e989 defconfig: disable twofish and bluetooth debugfs
ffed36cda5f6 BACKPORT: Merge branches 'pm-cpuidle' and 'pm-qos'
6b1292a00bfe hrtimer: Factor out __hrtimer_next_event_base()
cpuquiet
cdb084f93e6d cpuquiet: Add stateful governor
57499e21b554 rqbalance: Tune delays for performance
92e868b84c3a rqbalance: Use isolation instead of hotplugging
f411508029d5 rqbalance: Reduce balance penalty
2cae850ca2ee sched/core: Initialize CPU isolated mask at core init time
3a501a491e6e kernel: cpu: Mark the boot processor as not isolated
31e9490aec6d cpumask: Simplify num_online_uniso_cpus macro
486496149ce6 cpumask: Add cpumask for not-isolated CPUs
28064e4ab833 rqbalance: Introduce a balance penalty configurable parameter
ccd5519981b9 rqbalance: Be informative of the performance management mode
cfcd3c99e8c8 cpuquiet: Make the hotplug/isolation switch more robust
1fb6c649abb2 cpuquiet: Simplify and make more robust cpuquiet_find_governor
741d8919ae2d rqbalance: Use the available CPUs mask for CPU_UPCORE compat
a5b1072dabb3 rqbalance: Properly remove cpuhp notification callbacks on stop
0d240b4671de cpuquiet: sysfs: Protect real-time governor switching with mutex
39a5eac2a2f0 rqbalance: Declare isolation/hotplug runtime switch supported
0f3100eac53a cpuquiet: Switch from/to isolation only if governor is compatible
521f24cf4d61 cpuquiet: Restart the governor if runtime-switching isol/hotplug
4b7ea9218a68 cpuquiet: Switch from/to isolation at governor switch time
b595d0c2c273 rqbalance: Provide compatibility with CPU isolation
custom-eas-em
ac0dde1bc577 ARM: dts: msm: Adjust sdm845-v2 EAS energy model
ce0bb526d82b defconfig: Disable scheduler debugging
30ccda7bfd01 sched/debug: Remove SCHED_DEBUG dependency on DEBUG_KERNEL
75f21ee70a72 UPSTREAM: xfrm: Make set-mark default behavior backward compatible
127c1ab04aba BACKPORT: net: dev_is_mac_header_xmit() true for ARPHRD_RAWIP
ff45a3a85809 UPSTREAM: binder: filter out nodes when showing binder procs
d058b9a8c049 init: Add brief comments to each custom setting
81701d070824 init: Disable prefer_idle for FG and TA SchedTune groups
2524dd39f076 defconfig: Sync for stune boost floor removal
2e69390fd006 Revert "cpu_input_boost: introduce display-on stune boost floor"
cb1d817d1faa ARM: dts: c1: Reduce unnecessary display PHY clock cycles
1fb16c270af6 Revert "EXPERIMENTAL: dts: pmi8998: use fully analog display dimming"
79ed93a6de1b init: Set PowerHAL interaction timeout to CPU Input Boost duration
833be06dde66 ANDROID: arm64: lse: fix LSE atomics with LTO
dc5adc16bb56 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
35c4e2f5c254 defconfig: Update timer frequency options
f7c32eb41ac1 sched: walt: Update 300 Hz check for variable frequencies
fd5c6e45011c kernel: Allow arbitrary timer frequency values
5c3c7c28e048 kernel: Make timer frequency options conform to code style
823cda63cc19 kernel: Revert to 250 Hz as the default timer frequency
debug-omits
2581156f5e9c fs: ecryptfs: conditionally omit debugging
bda428097706 mm: conditionally omit debugging
9e388e7c2388 usb: dwc3: conditionally omit debugging
adbfbfb98000 lib: conditionally omit debugging
f6a6d7ade4ab staging: qcacld-3.0: conditionally omit debugging
7e47058aca97 defconfig: increase vmstat interval to 20 seconds
060622f23107 HACK: mm: add Kconfig interface for vmstat interval
90cbb9ab69e0 ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices
927f785e84ee defconfig: remove wake boost duration options
dc1a862cf7b0 devfreq_boost: remove wake boost functionality
fb520337e751 cpu_input_boost: remove wake boost functionality
5a6977d06465 defconfig: disable System V IPC
4d2bdf4cc0e3 kernel: never boost on top-app events if suspended
73171d86911f drm/msm: sde: boost only if last interaction was within 5000 ms
901a8a4cbfa1 helpers: reduce detail of build timestamp
b43dfed452f9 Revert "use -ffunction-sections, -fdata-sections and --gc-sections"
0f6485422f4d EXPERIMENTAL: defconfig: switch to 1000 Hz timer
2866d2ea971c cpu_input_boost: only boost on app launch if recently touched
9355ecb65f2b Kbuild: fix LDFLAGS_MODULE
79834dd17438 Merge branch 'lede-pending'
13689d0fb0d2 defconfig: disable common PCI quirks, optimize inlining
3b30a1915e45 usb: Remove annoying warning about bogus URB
098aee3811fd debloat: disable common USB quirks
84aa795f0470 debloat: add kernel config option to disabling common PCI quirks
e77372028dbe net: replace GRO optimization patch with a new one that supports VLANs/bridges with different MAC addresses
2da662881f88 kernel: add a few patches for avoiding unnecessary skb reallocations - significantly improves ethernet<->wireless performance
4fcd3fd0a942 net: add an optimization for dealing with raw sockets
43fb27e109b3 net_sched/codel: do not defer queue length update
fcc8da599635 kernel: add a small xfrm related performance optimization
9e2312db5256 netfilter: optional tcp window check
9643dad8eecd netfilter: reduce match memory access
c0ceaf41de69 netfilter: match bypass default table
8b37ba082ce3 kernel: add a new version of my netfilter speedup patches for linux 2.6.39 and 3.0
f88d7f2954ea compiler-gcc: optimize inlining
f9c0bb5db040 spi: use gpio_set_value_cansleep for setting chipselect GPIO
disable-debugfs
8f847cd9810b treewide: fix compile errors without debugfs
4a5002c00830 drm/msm: do not compile sde rotator debug
a8d2ce2d12e6 HACK: msm/ipa_v(2, 3): conditionally compile debugfs drivers
8150e269a437 HACK: usb/uvc: conditionally compile debugfs parts
453ad9d50bea scsi: ufs: Enable debugfs usage for bluecross
305c5b6d5705 mm: Enable oom_kill_allocating_task and disable oom_dump_tasks
4e8f92d9fe6d msm: camera: Remove always false checks in msm_camera_{get,put}_clk_info
bff28d632efe misc: mnh: Remove always true check in mnh_sm_open
3d61463e9185 msm: vidc: Remove always true check in hfi_process_session_rel_buf_done
e6589b690fe9 msm: camera: Remove unnecessary null check in msm_remove_session_cmd_ack_q
fa4c150f61bb msm: sensor: flash: Remove unnecessary null checks in msm_flash_i2c_release
511b304d38e4 msm: ipa: Remove unnecessary null checks in ipa_add_rt_rule_after
be4692c6fdd7 regulator: qpnp-lcdb: Remove unnecessary null check in qpnp_lcdb_init_bst
a37a0d5abc19 soc: qcom: sysmon-qmi: Remove unnecessary null check in sysmon_send_shutdown
a85277976090 thermal: qpnp-temp-alarm: Remove unnecessary null check in qpnp_tm_probe
c8fc54dc909a tty: msm_smd_tty: Remove unnecessary null checks for {ch,dev}_name
5b0c1c82606e defconfig: disable LZO
65e400bbde96 zram: allow LZO to be disabled
f1798bf6a15d Makefile: disable Cortex-A53 erratum 835769 fix
21b7a718e1c3 arm64: only pass -mpc-relative-literal-loads if 843419 fix is enabled
disable-perf
2802009258ca Merge branch 'caf-sched'
4b5a9c6ff47c sched/fair: Improve no-hz idle balance kicking in misfit task scenario
9c3fde84e7e6 sched: rt: Use RCU lock in rt task cpu select path
7a3e65cadc15 sched: Fix lockdep warning for rq locks
4ba6fb4482fb sched/fair: dont run energy calculation unless necessary
4c47923619a0 sched: improve trace prints
788561e00487 sched: energy: rebuild sched_domains with actual capacities
7eb072a145a3 sched: walt: use_cycle_counter check before rq lock held
2734e6985281 sched: walt: Add BUG_ON() when wallclock goes backwards
6ce4cb6ea7fa Revert "sched: Remove sched_ktime_clock()"
deb0504f47af sched/fair: Force balancing on NOHZ balance if local group has capacity
264433dc5d79 sched: Avoid placing task on isolated prev_cpu
c6e096e57c2f disable crc check
553619416645 ANDROID: sched/tune: fix boost_group spin_lock re-initialization
0bda369ab05a ANDROID: sched/tune: cleanup schedtune_boostgroup_{init,release}
4dbc35825652 ANDROID: sched/tune: remove unused variable
fdbe09d22841 ANDROID: sched/fair: cosmetics
f5f9384a52e2 core_ctl: Isolate not_preferred CPUs first during max_cpus limiting
fc134a5b35e3 sched/cpupri: Exclude isolated CPUs from the lowest_mask
224991c461af UPSTREAM: sched/fair: Consider RT/IRQ pressure in capacity_spare_wake
1512e40cb05e sched: ceil idle index to prevent from out of bound accessing
de507c4f8001 sched: prevent out of bound access in sched_group_energy()
e2f32fcf902b Merge branch 'revert-html5-sony-sched'
15794ec2a4ad Revert "sched: check pinned tasks before balance"
c307511c3357 Revert "sched: set loop_max after rq lock is taken"
76efb43f2bc9 Revert "sched: set number of iterations to h_nr_running"
93d6ba5f05bf Revert "sched: ignore task_h_load for CPU_NEWLY_IDLE"
e757bdf1de10 Revert "sched/fair: Search a task from the tail of the queue"
997a6fdbb0db Revert "sched: boost: Don't try to kick idle CPU"
afe34af9298e lowmemorykiller: enable oom reaper
6781c343a06a defconfig: enable input boost and devfreq boost
cead983d552a kernel: boost Lawnchair v2 when becoming top-app
7cad4b7a2d80 kernel: Increase Pixel launcher top-app boost duration to 1000 ms
f7a8c3c2f1c8 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
bb909336b72c cpu_input_boost: Simplify bitwise operations used to store boost state
cdff042e64c0 kernel: Boost CPU to the max when Pixel launcher becomes a top app
c53a1b37ce7d devfreq: Introduce devfreq boost driver
a367652187d8 msm: performance: prevent the driver from handling userspace boosts
405c0336b3d3 cpu_input_boost: expose input freqs and duration to userspace
5d127ebe0321 cpu_input_boost: Destroy workqueue on error path in init
9b6f659c4cf1 cpu_input_boost: Fix and refactor max boost logic
0306bf4cba7d kernel: Boost all CPUs to the max when userspace launches an app
3acda3225849 cpu_input_boost: Add API for boosting all CPUs to max frequency
e624c0ddd172 cpufreq: Kill userspace CPU boosting entirely
857f7159e499 drm: msm: sde: Boost CPU when a new frame is ready to be committed
ef30384aabea cpu_input_boost: Introduce driver for event-based CPU boosting
f4ba79080efd zram: revise default allocator config option
disable-qcacld-debug
8200fda9f408 qcacld-3.0: Disable BUILD_DEBUG_VERSION
b59e1c37eaf9 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
2fcd913da8d6 Revert "qcacld-3.0: Fix building non-debug"
00385588fc94 Revert "qcacld-3.0: Conditionally omit debugging"
d39d669a65c5 Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
b864046716d6 defconfig: enable kernel samepage merging (KSM)
ef04d3da41f0 lpm-levels: remove remaining old module code
e9441b1af386 Merge branch '4.10-cpuidle'
9d5dfaa308b6 cpuidle: Add a kerneldoc comment to cpuidle_use_deepest_state()
91f541710eac cpuidle: fix improper return value on error
ca8ac0f79c97 cpuidle/powernv: staticise powernv_idle_driver
6d115b6ae2f0 cpuidle: dt: assign ->enter_freeze to same as ->enter callback function
16ab7a11b205 cpuidle: governors: Remove remaining old module code
ef8de42e9212 Merge branch '4.10-sched'
8952e24fdb94 sched/dl: Fix comment in pick_next_task_dl()
3d481e02b2b1 cpuidle: Allow enforcing deepest idle state selection
7f4f8aede9e8 sched/cputime: Simplify task_cputime()
6e2b281df2c2 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d38fd9dbb70c sched/cputime, powerpc: Remove cputime_to_scaled()
baf6b91a15c9 sched/deadline: Fix typo in a comment
d705de000399 sched/core: Explain sleep/wakeup in a better way
8987ada54ed5 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
770213b4704e Merge branch '4.10-genirq'
2d657302020a genirq/msi: Drop artificial PCI dependency
1e95da2a1a58 genirq/affinity: Use default affinity mask for reserved vectors
c90dfbf1aa8e genirq/affinity: Take reserved vectors into account when spreading irqs
b032ad2d7fe3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
4b61852cf1f1 genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
82598ee48dbf genirq/affinity: Introduce struct irq_affinity
f564698760b1 Merge branch '4.10-locking'
ac6f69e1f875 don't open-code file_inode()
663d4611f293 locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
b42ef8c7eabd locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
b5575e7cd08d locking/lockdep: Provide a type check for lock_is_held
5eb9abfd3942 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
eb6bcb8ff448 locking/core: Remove cpu_relax_lowlatency() users
0da46b0f3db7 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
789876f03a7e locking/mutex: Enable optimistic spinning of woken waiter
b3840d71b1dc locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
6ac761125fb7 locking/mutex: Restructure wait loop
60bd67d1fcbd locking/mutex: Add lock handoff to avoid starvation
ac86528282a5 locking/mutex: Rework mutex::owner
ec681a8a411d Merge branch '4.10-rcu'
a72f993495b2 rcu: Don't kick unless grace period or request
162d7f4e3f4e rcu: Make expedited grace periods recheck dyntick idle state
fea8d3d6a532 torture: Trace long read-side delays
25ec14a5054c rcu: Remove obsolete comment from __call_rcu()
7abeabab8c9d rcu: Remove obsolete rcu_check_callbacks() header comment
85072648b4a5 rcu: Tighten up __call_rcu() rcu_head alignment check
df434df27d03 mm: ksm: Optimize defaults
cbcf6d29214f mark qcedev data const
1591bce776ba UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
d0be45aaefcf ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
bc9bc0503ef1 soc: qcom: stop spam when IPC_LOGGING is disabled
caa5e1da0e4d qcacld-3.0: Conditionally omit debugging
f59b0261f666 qcacld-3.0: Fix building non-debug
e5bb26767b4d Merge branch '4.10-crypto'
8122e868372b defconfig: enable arm64 ce accelerated sha256 and sha512
92fe26815b76 crypto: skcipher - fix crash in virtual walk
ff1634ade6aa crypto: asymmetric_keys - set error code on failure
3c9a1bb92b75 crypto: doc - clarify AEAD memory structure
e03589bb88b5 crypto: testmgr - fix overlap in chunked tests again
88a292cac896 crypto: testmgr - add/enhance test cases for CRC-T10DIF
2c3b03fb18d9 crypto: testmgr - avoid overlap in chunked tests
0c999abe86f1 crypto: algif_aead - fix AIO handling of zero buffer
07c690cb3045 crypto: algif_skcipher - set error code when kcalloc fails
8d6bb735df72 crypto: skcipher - Add separate walker for AEAD decryption
b78a5d8e3c99 crypto: skcipher - fix crash in skcipher_walk_aead()
6f7c8237d0c3 crypto: cbc - Export CBC implementation
c9a7a63f911d crypto: cbc - Convert to skcipher
4751c412c128 crypto: aesni - Convert to skcipher
5d10fe9f2223 crypto: testmgr - Do not test internal algorithms
89ff0a4c5ed1 crypto: glue_helper - Add skcipher xts helpers
25acfb300772 crypto: pcbc - Convert to skcipher
916b689bb9bb crypto: simd - Add simd skcipher helper
64edd9252316 crypto: cryptd - Add support for skcipher
625a510a0efc crypto: api - Do not clear type bits in crypto_larval_lookup
d3f987cc5869 crypto: xts - Convert to skcipher
f99a1e1b4b97 crypto: lrw - Convert to skcipher
a739d339c426 crypto: skcipher - Add skcipher walk interface
c5da1a130316 crypto: crc32c-vpmsum - Rename CRYPT_CRC32C_VPMSUM option
42b12daab40d crypto: drbg - advance output buffer pointer
7e13511614a8 crypto: gf128mul - Zero memory when freeing multiplication table
52decb336889 crypto: jitterentropy - drop duplicate header module.h
1e91b2ac071a net: fix sleeping for sk_wait_event()
ca2a38d4011b crypto: gf128mul - remove dead gf128mul_64k_lle code
8008feda27fb crypto: dh - Consistenly return negative error codes
7704b3ca9e88 crypto: poly1305 - Use unaligned access where required
a88ac040f4ed crypto: cryptd - Remove unused but set variable 'tfm'
49b48d2984fe crypto: skcipher - Get rid of crypto_spawn_skcipher2()
0a1b46594042 crypto: skcipher - Get rid of crypto_grab_skcipher2()
85f447cf2538 crypto: engine - Handle the kthread worker using the new API
c9e44b2fb036 crypto: gcm - Fix error return code in crypto_gcm_create_common()
84c26bb38b25 crypto: cmac - fix alignment of 'consts'
0825408eac39 crypto: cmac - return -EINVAL if block size is unsupported
ef4acc1182ee crypto: api - Remove no-op exit_ops code
7514eb49136e crypto: api - Fix Kconfig dependencies for FIPS
22a6a3506eda crypto: arm64/crc32 - accelerated support based on x86 SSE implementation
c6c9a362f72b crypto: arm64/crct10dif - port x86 SSE implementation to arm64
5f872384f69d crypto: arm64/aes-ce-ccm - Fix AEAD decryption length
89d30eb87251 crypto: arm64/aes-ce-ctr - fix skcipher conversion
196899847ba9 crypto: arm/aes-ce - fix broken monolithic build
9ff0270fd6d2 crypto: arm/aes - Select SIMD in Kconfig
6cbee3892071 crypto: arm64/sha2 - add generated .S files to .gitignore
692bcada8bf7 crypto: arm64/aes - Convert to skcipher
72db38f714a6 crypto: aes-ce-ccm - Use skcipher walk interface
6b482f2366e1 crypto: arm64/sha2 - integrate OpenSSL implementations of SHA256/SHA512
dtsx-ultra
32c37c319fec Revert "base: dd: Continue probe deferral forever as needed after late_initcall"
9fbd61523cbf Revert "base: dd: Limit probe deferral when booted into recovery"
7c63954f941a defconfig: Enable software-processed DTS audio effect driver
dd1c4afdcd5c sound: Import DTS Eagle audio effect driver
a6d575084765 init: Revert to s2idle suspend
8125113abd2b defconfig: Update for security reverts
dc6ee0f5a772 Revert "BACKPORT: init/main.c: extract early boot entropy from the passed cmdline"
43709a9aefaa Revert "gather extra early boot entropy"
fbb7357b7106 Revert "UPSTREAM: mm: add SLUB free list pointer obfuscation"
e589d8f8d9dd Revert "UPSTREAM: mm/slub.c: add a naive detection of double free or corruption"
c01f33dba5e7 Revert "BACKPORT: mm: allow slab_nomerge to be set at build time"
4d8795580f6b Revert "add a SLAB_HARDENED configuration option"
2486f040bd9d Revert "add missing cache_from_obj !PageSlab check"
b7a696b878be Revert "bug on kmem_cache_free with the wrong cache"
62b3ffbaa196 Revert "real slab_equal_or_root check for !MEMCG_KMEM"
83547fc13e7f Revert "always perform cache_from_obj consistency checks"
d7b094704077 Revert "bug on !PageSlab && !PageCompound in ksize"
a8ee9caa4699 Revert "randomize lower bits of the argument block"
59602631bccc Revert "restrict device timing side channels"
42da18312b21 Revert "add toggle for disabling newly added USB devices"
dynamic-stune-boost
3dbcbf36e34d cpu_input_boost: try to fix Dynamic SchedTune Boost
eca2982d048f sched/tune: prevent userspace from setting boosts
e492f52d3023 cpu_input_boost: implement Dynamic SchedTune Boost v3
99b42f2a2223 sched/boost: Update functions for newer Dynamic Schedtune Boost changes
23e4ffe0ffdb sched/tune: Switch Dynamic Schedtune Boost to a slot-based tracking system
4c883364dd15 sched/stune: Rename stune_boost() to do_stune_sched_boost()
20402cb67877 sched/tune: Rename dynamic_boost parameter to sched_boost
19e7a340c9eb sched/tune: Track active boosts on a per-Schedtune basis
71b585414e65 sched/tune: Reset Dynamic Schedtune Boost only if no more boosts running
433bdf06785d sched/boost: Perform SchedTune boosting when sched_boost is triggered
ef1f2900f787 sched/tune: Introduce stune_boost() function
a5633559e2e0 sched/tune: Refactor do_stune_boost()
52b1cecf6c00 sched/tune: Create dynamic_boost SchedTune parameter
20a00f6e583c sched/tune: Rename dynamic_boost_write() to dynamic_boost()
953f50d94146 sched/tune: Add initial support for Dynamic SchedTune Boost
9466e12aee96 Revert "defconfig: enable GCMA and cleancache"
edce5e2d775a ipv4: enable rp filter by default on all interfaces
b62271b2173b Revert "defconfig: disable EDAC"
40df3dfc3478 defconfig: bump RCU CPU stall timeout
b6a881b466d2 net: rmnet_data: disable HI log level
eas-governors
c074c2bd0f71 defconfig: enable smurfutil cpufreq governor
477ee191383c sched: add smurfutil flex pixelized variant
b33c30cb4333 sched/walt: Fix the memory leak of idle task load pointers
ae55cb577db1 overflow.h: Add allocation size calculation helpers
24acad06f9de Merge branch 'caf-ion'
0a543b348501 ion: Ensure non-HLOS memory cannot be mapped by CPU
3774b46b832e ion: Do not perform cache maintenance for secure buffer
910356072fd5 ion: Consider ion pool pages as indirectly reclaimable
006595fbf5bf Merge branch 'caf-kgsl'
7d3915df5fee msm: kgsl: Increase the fenced write timeout
31e95874abf0 msm: kgsl: Trigger preemption only if GMU is in ACTIVE state
f4a8873057e6 msm: kgsl: Add a property to find if secure context is supported
f480767c795d msm: kgsl: Add a property to find alignment of secure buffers
ae644fadd7f8 msm: kgsl: Limit log frequency in case of context count maxed out
ba61c3325fbe msm: kgsl: Make sure gpu-speed-bin-vectors has the correct size
4ca3be7b6017 msm: kgsl: Don't halt dispatcher if device is not in SUSPEND state
ff3a01bc25ed msm: kgsl: Fix the missing IBs from the snapshot
0e7f2ed0e131 msm: kgsl: Keep a list of perfcounters per file descriptor
2c4934c717ec msm: kgsl: Trigger GMU recovery on OOB set failures
148e0cb1a626 zram: allow zram to allocate CMA pages
992f6d3db068 cpufreq: Add CPUFREQ_STOP notification when cpu offline
503fb6934f9a sched/rt.c: fix missing include for latest backport
c87b2a189ed4 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
bdab773807ee BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
b555e2ab75b2 ANDROID: Move schedtune en/dequeue before schedutil update triggers
0116fa61c87a Merge branch 'overflow'
499c17a321b0 overflow changes: fix some conflicts
1516399848ab BACKPORT: treewide: Use array_size() in sock_kmalloc()
339ae11eaa33 BACKPORT: treewide: Use array_size() in vzalloc_node()
9c9a52b1a49e BACKPORT: treewide: Use array_size() in vzalloc()
969c355deb27 BACKPORT: treewide: Use array_size() in vmalloc()
f71890ffd000 BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
a4154311a159 BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
890e541b0852 BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
7f7af5555cf4 BACKPORT: treewide: kzalloc() -> kcalloc()
6052593ec9fd BACKPORT: treewide: kmalloc() -> kmalloc_array()
115fcf234a17 BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
0ccd15b2ae63 BACKPORT: treewide: Use struct_size() for vmalloc()-family
5fc7b60eb036 BACKPORT: treewide: Use struct_size() for kmalloc()-family
1d05ec3ff219 UPSTREAM: mm: Introduce kvcalloc()
c713ba5cdfc3 UPSTREAM: Convert v4l2 event to struct_size
0c6a73aaa96a UPSTREAM: Convert virtio_console to struct_size
51fadc5421a4 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
51737dea6daf BACKPORT: mm: Use overflow helpers in kvmalloc()
75d13b5f4c9a UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
a199de13c4df UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
86230c38a66a UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
bf5cf91bf78b UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
028c4a398964 UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
439ad57581d2 CHROMIUM: mm: Take kvmalloc_array() from upstream
807fb4a3dcd5 BACKPORT: mm: introduce kv[mz]alloc helpers
d9a9284b99a6 f2fs: Remove duplicate k*alloc definitions
0e6ff298f62d diag: Featurize IPC logging
8c58b707dbcf defconfig: enable state notifier
1025affbae13 state_notifier: add a third case for boosting
601fdbc41d09 state_notifier: Check delayed work status before cancel
d7ac66e1c8cf state_notifier: remove debug and enabled parameters
72d2993cac7b state_notifier: Remove internal enablement switch
90b31f92f238 state_notifier: Drop unneeded module_param_named entries
eliminate-late-init-script
fd89e0e69394 drm/msm: Prevent init from setting idle timeout
9b8537917606 drm/msm: Populate idle timeout during initialization
2f1c66f0801c init: Drop custom swappiness
d1930157757f Merge remote-tracking branch 'als2/android-msm-bluecross-4.9'
813575bbd5ba sched/fair: Don't let tasks slip away from gold to silver cluster
6d10505784b0 STOPSHIP: sched/idle: Don't refresh vmstat counters in idle loop
b7c49836348c defconfig: Switch to 100 Hz timer frequency
6a77f465ab7b binder: Fix concurrency issue in target_thread wakeup
6a77813e3583 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
2ff15ef83521 iommu: msm: Rewrite to improve clarity and performance
a3b16e3c0699 defconfig: Update to stable version v18
ef1a34a92ae2 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
3d08bc36b971 helpers: Introduce and use helper to get build number
f9f9193d2b01 defconfig: Disable DisplayPort display output support
6eb851ac4575 drm/msm/dp: Make DisplayPort support optional
c55bbe304c9b setup{,_gcc}: Update toolchain paths
63896c86ddf3 mm, vmstat: Add likelihood labels to quiet_vmstat conditions
606dc468a990 defconfig: Bump default SchedTune boost level
44d62bdac71a init: Bump SchedTune boost levels
baf65e2d1cdc sched/fair.c: Don't allow SchedTune boosted tasks to be migrated to small cores
execprog
a3be2b9ccc32 Defconfig
35c5555cc945 Execprog
86d683d1cd19 init: Prepare script to be embedded with execprog
d6bd8c690174 execprog_helper: Output to stdout instead of hardcoded file
f473d6f2b500 Revert "EXPERIMENTAL: flasher: Revert to stock powerhint"
d68540c5448c defconfig: Disable eBPF JIT
4d3b868594d5 powerhint: Reduce idle top-app SchedTune boost
20b0ed089256 powerhint: Update to reflect GPU overclock + underclock
500935bdc5f0 powerhint: Reset to latest stock January 2019 state
4e70421817de flasher: Restore stock DTBO if modified by Proton
2e03abbe16e5 helpers: Do not copy DTBO into flasher
fcc7df9fe3b8 flasher: Revise F2FS extension list check
4607068ba21a Merge branch 'sultan-b1c1'
015a660569e1 Revert "module: always return success"
6f790a7d5c7c Revert "Revert "Revert "staging: qcacld-3.0: Load driver on late initcall when not built as a module"""
81332f8648b1 Revert "Revert "Revert "staging: qcacld-3.0: Load driver at device_initcall"""
825008d90edf drm/atomic: Fix compilation with kernel boosting disabled
e6d610e116f4 ufdt: Fix compilation of libufdt
4eb0982a35a2 char: mem: Link /dev/random to /dev/urandom
734dc00f93ff Revert "random: always use non-blocking pool"
82f23c78b0c0 defconfig: Embed full DTBs in kernel image
79a4965b261c boot: Embed fully integrated DTBs instead of using dtbo partition
950db834cdc7 drm/atomic: Only boost if last input was within 2500 ms
a09ba625f259 drm/atomic: Boost CPU and DDR bus when committing a new frame
18301ee8951c Revert "drm: msm: sde: Boost CPU when a new frame is ready to be committed"
67dbc92f6bb8 Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app"
7fa8b28727aa defconfig: Clean up and optimize
d156f80117b3 Revert "cpu_input_boost: expose API for boosting CPUs on wake"
bea6e98b4c7e mkdtimg: Bundle upstream python rewrite as submodule
ea6a255bd7f0 dtc: Bundle AOSP's fork of dtc
6a2c7eb4e82d drm: Mark the bridge-enable kthread as performance critical
14d9d25dcfe0 drm: Boost to the max when powering on the display
3017b87d5525 drm: Enable bridges asynchronously as early as possible
0aca8b547a04 clk: qcom: clk-cpu-osm: Use CLK_GET_RATE_NOCACHE
08b2716241bf init: Initialize module-intended b1c1 drivers when userspace insmods them
6709ca716d0b Revert "HACK: input: touchscreen: sec_ts: Don't update FW on probe"
5932f3bc5234 base: dd: Continue probe deferral forever as needed after late_initcall
a3ad0ceb9ffb msm: kgsl: Update previously picked commits
24717de5f0c5 devfreq_boost: Update driver
935d5c806e95 cpu_input_boost: Integrate code style updates from the author
eaac31b48074 Revert "cpu_input_boost: make wq unbound"
5cd1e4fae584 Revert "fpc1020: Mark IRQ as performance critical"
94a200810d2a drm/msm: Mark important kthreads as performance critical
8560ef8a268f drm: Mark IRQ as performance critical
a0e5c34313be kernel: Force trivial, unbound kthreads onto low-power CPUs
c4a0ef7e1d1e kernel: Add API to mark IRQs and kthreads as performance critical
a7a629ea0b0c Revert "kernel: Add API to mark IRQs and kthreads as performance critical"
82021d6e019f Revert "kernel: Force trivial, unbound kthreads onto low-power CPUs"
3d18e77dc095 cpumask: Add cpumasks for big and little CPU clusters
5b9d426da714 ARM: dts: b1c1: Enable display power-saving features
adee42cf3095 msm: msm_bus: Don't enable QoS clocks when none are present
93b82b4304f1 Revert "msm: msm_bus: Don't enable QoS clocks when none are present"
216c5694cdf7 firmware: qcom: Don't build legacy scm driver for b1c1
c422522dfa63 soc: qcom: watchdog_v2: Fix memory leaks when memory_dump_v2 isn't built
f9298610d0f3 f2fs: Replace strncpy with memcpy
70378676a484 usb: phy: qusb: Fix improperly-indented code
934089b27bd3 soc: qcom: pil: Fix trivial -Wmaybe-used-uninitialized warning
d48ce5df1c36 proc: Remove SafetyNet flags from /proc/cmdline
1b93b49b799a Revert "proc: Remove verifiedbootstate flag from /proc/cmdline"
c0c924bd0637 Revert "proc: Remove additional SafetyNet flags from /proc/cmdline"
b9a8959d90aa Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
0acffb637434 misc: mnh: Demote state change work from SCHED_FIFO class
664795abfffd defconfig: Disable execprog2
396594c5f3d8 init: copy execprog to execprog2
3e67dd8c4860 execprog: use pr_fmt()
cab5fb4ee56e flasher: Fix F2FS extension clearing on non-Proton kernels
0d90b291e4d7 Revert "firmware: add function for checking firmware presence"
f2fs-patches
d5cd7ee815d6 init: set optimal SQLite flags for f2fs
899debbcef8d f2fs: mark is_extension_exist() inline
adc365480fcf f2fs: fix minor typo on extensions reporting
c292a6c5b3d1 f2fs: set ioprio of GC kthread to idle
bc403f896da5 EXPERIMENTAL: sdm845: overclock GPU to 810 MHz
18b7efdbfe54 Merge branch 'caf-mm-misc'
807bf376ed01 mm: vmalloc: don't print lowmem information
32516a7f8f3f mm: cma: retry only on EBUSY
69273ec3b034 mm: Kconfig: Add support for config size of purging vmap_area
68209b6380a4 Merge branch 'spf'
ce9bf98b5140 defconfig: enable speculative page fault
6bfb66e67eaa mm: disable fault around on emulated access bit architecture
428a7279beb7 mm: make faultaround produce old ptes
7ee5cfef0147 Revert "mm: memory: reduce fault_around_bytes"
d644d89df68a arm64/mm: add speculative page fault
3063aeaeefa8 arm64/mm: define ARCH_SUPPORTS_SPECULATIVE_PAGE_FAULT
2c3ef0fc2b7d mm: add speculative page fault vmstats
944617a92364 mm: speculative page fault handler return VMA
9e01b88b3e32 mm: adding speculative page fault failure trace events
b87ad03df49e mm: provide speculative fault infrastructure
9a6b91130079 mm: protect mm_rb tree with a rwlock
bc8e541b8786 mm: introduce __page_add_new_anon_rmap()
6e608fa6ed57 mm: introduce __vm_normal_page()
7cd18d41dd15 mm: introduce __lru_cache_add_active_or_unevictable
f98a70f41c11 mm/migrate: Pass vm_fault pointer to migrate_misplaced_page()
ef820c3f46da mm: cache some VMA fields in the vm_fault structure
6e730d6f0f38 mm: protect SPF handler against anon_vma changes
e55cd279301b mm: protect mremap() against SPF handler
4cc259b725be mm: protect VMA modifications using VMA sequence count
6912b5b55198 mm: VMA sequence count
1bd7652db8c9 mm: introduce INIT_VMA()
ac75415d939b mm: make pte_unmap_same compatible with SPF
33ede21ab88d mm: introduce pte_spinlock for FAULT_FLAG_SPECULATIVE
6dea641dfc6e mm: prepare for FAULT_FLAG_SPECULATIVE
1d129972f370 mm: introduce CONFIG_SPECULATIVE_PAGE_FAULT
a81870d6ee32 helpers: reboot after flashing kernel in Android
f0f8ef60778c sched/walt: Fix the memory leak of idle task load pointers
fa42e5b43c9a overflow.h: Add allocation size calculation helpers
67e389097e91 Merge branch 'caf-ion'
9c3c6fc97849 ion: Ensure non-HLOS memory cannot be mapped by CPU
ce0d28cd14cd ion: Do not perform cache maintenance for secure buffer
da40c41b74b3 ion: Consider ion pool pages as indirectly reclaimable
bd8a4ea25269 Merge branch 'caf-kgsl'
c26eb0b01ad5 msm: kgsl: Increase the fenced write timeout
8cd28ac709ce msm: kgsl: Trigger preemption only if GMU is in ACTIVE state
37dd49aefd77 msm: kgsl: Add a property to find if secure context is supported
e5ad3bac709d msm: kgsl: Add a property to find alignment of secure buffers
6b9d35f66732 msm: kgsl: Limit log frequency in case of context count maxed out
a822bc5e3f40 msm: kgsl: Make sure gpu-speed-bin-vectors has the correct size
19737091ee8f msm: kgsl: Don't halt dispatcher if device is not in SUSPEND state
bf23deaa2791 msm: kgsl: Fix the missing IBs from the snapshot
106f81b2381a msm: kgsl: Keep a list of perfcounters per file descriptor
0cedc12d5b9f zram: allow zram to allocate CMA pages
c27fa7aeee45 msm: kgsl: Trigger GMU recovery on OOB set failures
90de7a02a922 cpufreq: Add CPUFREQ_STOP notification when cpu offline
6bc422e8a84c sched/rt.c: fix missing include for latest backport
7f4c48031d79 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
9aaa25270016 BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
fa63602453e0 ANDROID: Move schedtune en/dequeue before schedutil update triggers
84066a267d81 Merge branch 'overflow'
bf082dc705d0 overflow changes: fix some conflicts
e914212ed026 BACKPORT: treewide: Use array_size() in sock_kmalloc()
1374c07608bf BACKPORT: treewide: Use array_size() in vzalloc_node()
b16836bbdf83 BACKPORT: treewide: Use array_size() in vzalloc()
317db95bc657 BACKPORT: treewide: Use array_size() in vmalloc()
e21abae8044f BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
f1d3fc96c76e BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
c4afa56c426c BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
73b750af8e90 BACKPORT: treewide: kzalloc() -> kcalloc()
254d6fd87335 BACKPORT: treewide: kmalloc() -> kmalloc_array()
0de7be4b080f BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
d279f564fee5 BACKPORT: treewide: Use struct_size() for vmalloc()-family
e0aaccd27ec9 BACKPORT: treewide: Use struct_size() for kmalloc()-family
bd0f8edc3fb5 UPSTREAM: mm: Introduce kvcalloc()
b4881bf24d51 UPSTREAM: Convert v4l2 event to struct_size
3867fe0d7a1d UPSTREAM: Convert virtio_console to struct_size
e9acbf7db8d2 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
76265912b333 BACKPORT: mm: Use overflow helpers in kvmalloc()
d5e622d1e969 UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
ff2b61efa06b UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
1febfc7533cc UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
544a953f61ac UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
21058be9436f UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
6b9bd9bdad55 CHROMIUM: mm: Take kvmalloc_array() from upstream
4c9f7c2fb0b9 BACKPORT: mm: introduce kv[mz]alloc helpers
3d5617cb15ed f2fs: Remove duplicate k*alloc definitions
868010817629 diag: Featurize IPC logging
f2fs-updates
e83b6cfc5aa6 f2fs: support superblock checksum
d433a60c3324 f2fs: add to account skip count of background GC
eddabe813a1e f2fs: add to account meta IO
09f8abf68e36 f2fs: keep lazytime on remount
6bebc0f16a49 f2fs: return correct errno in f2fs_gc
882920c230f8 f2fs: avoid f2fs_bug_on if f2fs_get_meta_page_nofail got EIO
a2962e75a4a6 f2fs: mark inode dirty explicitly in recover_inode()
241e3183bbe1 f2fs: fix to recover inode's crtime during POR
0a7a0d96f887 f2fs: fix to recover inode's i_gc_failures during POR
9ad1e096afb2 f2fs: fix to recover inode's i_flags during POR
6e99977caf5e f2fs: fix to recover inode's project id during POR
900326bdd91d f2fs: update i_size after DIO completion
28d42072212e f2fs: report ENOENT correctly in f2fs_rename
89494fc509c7 f2fs: fix remount problem of option io_bits
a50645b1d512 f2fs: fix to recover inode's uid/gid during POR
0ec9665a38de f2fs: avoid infinite loop in f2fs_alloc_nid
42e7fa236e5e f2fs: add new idle interval timing for discard and gc paths
51d32012cdf1 f2fs: split IO error injection according to RW
549083c78d3d f2fs: add SPDX license identifiers
fa248870d569 f2fs: surround fault_injection related option parsing using CONFIG_F2FS_FAULT_INJECTION
fast-display-on
25d070100472 drm: Boost to the max when powering on the display
30e7d9b0941c drm: Mark the bridge-enable kthread as performance critical
b6defa128744 drm: Enable bridges asynchronously as early as possible
59b075fc5140 defconfig: Use default ld.bfd linker
4bd89a7bdf47 kbuild: Remove experimental tag from LTO and CFI
5a81247826d9 kbuild: Fix typo in LTO config
309dcbd3cdef kbuild: Add support for linking the kernel with LLD
296f23f024a3 Revert "arm64: kernel: force ET_DYN ELF type for CONFIG_RELOCATABLE=y"
606ec6c7087d random: fix inconsistent spinlock usage
4134bb05a3c1 ANDROID: cfi: fix shadow rebasing
e2b002446270 defconfig: Disable Clang Polly optimizations
919e0613b8f7 kbuild: Add support for Clang Polly optimizations
659f0a9c8024 Makefile: Don't assume Clang and GCC are the only compilers
3f80eda067fc ANDROID: arm64: kbuild: only specify code model with LTO for modules
01e05a51d4be ANDROID: kbuild: disable LTO_CLANG with KASAN
3f2a64be76fc cpufreq: schedutil: Enable iowait boost by default
5c83ebaf0d20 init: Re-enable iowait boost for balanced profile
77f31eebcb43 BACKPORT: kbuild: clang: remove crufty HOSTCFLAGS
b24e9737a315 boot: Ignore firmware node from bootloader DT
52dbd63d077d ANDROID: Kbuild, LLVMLinux: disable clang -Wpointer-bool-conversion
fast-swapoff
0e330919b176 Revert "Revert "HACK: sched/tune: clamp boosts with a value of 10""
9aba799b4217 Merge branch 'io-mmap_sem-drop'
6b7f24d21e22 FROMLIST: filemap: drop the mmap_sem for all blocking operations
1e87d90fbb05 FROMLIST: filemap: pass vm_fault to the mmap ra helpers
6099c4ef5ae9 FROMLIST: filemap: kill page_cache_read usage in filemap_fault
b0f91a5f0d71 f2fs: add proper cleancache support
70db1e26d490 powerhint: bump interaction top-app schedtune boost to 20
c0fb2ce68c45 ASoC: wcd934x: fix unused variable warning
502f7e9bf383 defconfig: disable drv2624 haptics driver
fed9f63662a3 wcd934x: add speaker gain control
0ea0b5ed33e9 drm: msm: add backlight dimmer option
a5b47513c122 Merge branch 'mitigate-mmap_sem'
f1638af2b6b9 mm: unmap VM_PFNMAP mappings with optimized path
5f28b7fee91b mm: unmap VM_HUGETLB mappings with optimized path
e00ff6bd5d24 mm: mmap: zap pages with read mmap_sem in munmap
e96f16d07a87 mm: call vm_munmap in munmap syscall instead of using open coded version
5ff004676b19 kernel: time: remove NO_HZ_FULL_SYSIDLE_SMALL dependency on NR_CPUS
1cd1f6940d0a defconfig: disable frontswap
fdac63144a64 defconfig: disable gcma stats accouting
f2ef40c6a4b1 gcma: make stats accounting configurable
ab5f6585051c gcma: make cleancache and frontswap completely optional
d6a40aedf6fc Revert "ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices"
48774e870254 Revert "EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4"
7d6fc4324a30 defconfig: enable per-UID stats and memory state stats
233af9e879f2 arm64/dts: sdm845: remove vbmeta
fc6c4880d763 Merge branch 'gcma'
7c01a9e7f01e defconfig: enable gcma and use as default over cma
95c259d270b2 cma: fix area initialization error path
b9ddca85d1e9 cma: use gcma for early reserved memory if default
bc119e4f6720 gcma: fix typos
b97cddff123a gcma: only force frontswap if swap is enabled
786991038e79 gcma: integrate gcma under cma interface
14bc081400d2 gcma: export statistical data on debugfs
b30bfc215024 gcma: adopt cleancache and frontswap as second-class clients
c4dc37a48422 gcma: utilize reserved memory as discardable memory
03bb6b72fe64 gcma: introduce contiguous memory allocator
deeaacbe8125 Revert "EXPERIMENTAL: defconfig: switch to 1000 Hz timer"
fix-stutter-and-freezes
69df3753f84f Revert "FROMLIST: block: hook up writeback throttling"
8783ff7d83a8 Revert "defconfig: Enable single-queue writeback throttling"
aa3bbb0536c6 Revert "hrtimer: Bump default timer slack to 500 us"
4e15f0d63487 treewide: Remove redundant display state checks around max boosts
6396126ce15c devfreq_boost: Block max boosts while the screen is off
d56c89d8f022 cpu_input_boost: Block max boosts while the screen is off
11767a2bd2b6 init: Reduce balanced down rate limit
ad70d534186b cpufreq: schedutil: Reduce frequencies slower
61626f80aab9 scsi: ufs: fix wrong count of q_depth
cc32364f110f qseecom: improve blocked listener processing for smcinvoke
d93665227978 block: prevent merging of requests with different priorities
06cd67cf05a5 sched/cpufreq: Remove unused SUGOV_KTHREAD_PRIORITY macro
aad49e754061 cpufreq: schedutil: Use idle_calls counter of the remote CPU
4971669f9a8a sched/cpufreq: Don't pass flags to sugov_set_iowait_boost()
793090ca465f cpufreq: schedutil: Examine the correct CPU when we update util
03aac8750932 cpufreq: schedutil: Always process remote callback with slow switching
4b1c48ddfa0a userns: Add sysctl to disallow unprivileged CLONE_NEWUSER by default
5b39cfca14ff rcu: Speed up calling of RCU tasks callbacks
d8c4e857e7af mm/page_owner: use kvmalloc instead of kmalloc
39a47e1cfe18 helpers: Add helper to produce clean release builds
flickerfree
be95e6136b12 defconfig: Enable display exposure adjustment driver
2e78459a120a drm/msm: Hook up configurable display exposure adjustment
78fd8de7ac36 drm: Introduce exposure adjustment driver
5e3d74c10fb0 Revert "block, ice, cfq: support back/front merges and update req->__dun"
2c78b11ff7c3 sched/walt: Reduce window size to 10 ms
fd117cedaf43 defconfig: Update to stable version v16
970271bd75fa kbuild: Disallow enabling CFI shadow if modules are disabled
b4f1111f7ffa defconfig: Disable /proc/kallsyms
dc3e2f9e735b kallsyms: Allow /proc/kallsyms to be disabled at compile time
788a389bbdcf Merge branch 'revert-lmk-rbtree'
83760ef17306 Revert "drivers:lmk: implement task's adj rbtree"
9fbe73b54ea3 Revert "lmk: add static keywords to locally used variables"
90f1e223cbc2 Revert "drivers:lmk: Fix double delete issue"
0b84f9dbe3d9 Revert "drivers:lmk: Fix null pointer issue"
2f7178880183 Revert "fs: support task's adj rbtree"
584143d1f2e6 Revert "defconfig: Enable Simple LMK"
629bb4e7567f Revert "fs: avoid adding non-thread-group task to LMK rbtree"
80198f0f5075 Revert "kernel: support task's adj rbtree"
9937933fd2b2 Revert "kernel: avoid adding non-thread-group task to LMK rbtree"
9d36a6ff7fa2 Revert "defconfig: enable LMK rbtree optimization"
0f06ad478eac defconfig: Enable hang detection
eb2d6b50785a defconfig: Re-enable most stock security features
aea3c9be8c9b simple_lmk: Kill services before killing the launcher
c889ea52f680 defconfig: Update to stable version v15
e475b1917bc0 cpu_input_boost: Suppress input boost if duration is 0
a39be7b9d7be init: Tune schedutil ratelimits in profiles
ab868a067a61 kernel: Only boost for 32 ms on zygote fork
e2f9826826b9 kernel: Boost DDR bus on zygote fork
69f761865b33 kernel: Only boost on fork if the screen is on
flickerfree2
4334f11829ba defconfig: Enable display exposure adjustment driver
250b5165fe5d drm/msm/dsi-staging: Add PWM dimming control for C1
81a69b9c5ff4 arm64: Add functions to get the current device being used
1e4929ca2515 drm: Introduce exposure adjustment driver
5db5c27c6f27 sched/walt: Reduce window size to 8 ms and load history to 64 ms
d7115a83b36b sched: walt: Correct WALT window size initialization
fd117cedaf43 defconfig: Update to stable version v16
970271bd75fa kbuild: Disallow enabling CFI shadow if modules are disabled
b4f1111f7ffa defconfig: Disable /proc/kallsyms
dc3e2f9e735b kallsyms: Allow /proc/kallsyms to be disabled at compile time
788a389bbdcf Merge branch 'revert-lmk-rbtree'
83760ef17306 Revert "drivers:lmk: implement task's adj rbtree"
9fbe73b54ea3 Revert "lmk: add static keywords to locally used variables"
90f1e223cbc2 Revert "drivers:lmk: Fix double delete issue"
0b84f9dbe3d9 Revert "drivers:lmk: Fix null pointer issue"
2f7178880183 Revert "fs: support task's adj rbtree"
584143d1f2e6 Revert "defconfig: Enable Simple LMK"
629bb4e7567f Revert "fs: avoid adding non-thread-group task to LMK rbtree"
80198f0f5075 Revert "kernel: support task's adj rbtree"
9937933fd2b2 Revert "kernel: avoid adding non-thread-group task to LMK rbtree"
9d36a6ff7fa2 Revert "defconfig: enable LMK rbtree optimization"
0f06ad478eac defconfig: Enable hang detection
eb2d6b50785a defconfig: Re-enable most stock security features
aea3c9be8c9b simple_lmk: Kill services before killing the launcher
c889ea52f680 defconfig: Update to stable version v15
e475b1917bc0 cpu_input_boost: Suppress input boost if duration is 0
a39be7b9d7be init: Tune schedutil ratelimits in profiles
ab868a067a61 kernel: Only boost for 32 ms on zygote fork
e2f9826826b9 kernel: Boost DDR bus on zygote fork
forktime
4d6e4bd2a94c kernel: Measure fork-to-cgroup latency
eb204c2baf83 kernel: Only boost for 32 ms on zygote fork
683e69d072fd kernel: Boost DDR bus on zygote fork
e202d81cfe68 kernel: Only boost on fork if the screen is on
dc36c33d9f27 kernel: Boost whenever a zygote-forked process becomes a top app
ba1b174f8197 Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app"
3a060f5c23ae init: Reduce frame boost timeout on battery profile
6871c377fdc2 cpu_input_boost: Cancel general unboost work alongside other boosts
5e177a4dac35 defconfig: Sync
1e7c9ada03f2 state_notifier: Move to miscellaneous driver location
4452038b7c4b state_notifier: Clean up unused and unnecessary cruft
67b67a116981 sched/tune: Block boost requests from libperfmgr and init
d3a71e0c35ea Revert "sched/tune: block userspace boosting when in-kernel boost is enabled"
65ace18f8385 cpu_input_boost: Allow full general boost control via timeout
dc073886f0b9 cpu_input_boost: Fix incorrect SchedTune boost location
4fa3368370e1 ARM: dts: msm: Enable deeper UFS power saving levels on sdm845
d6dfa014c154 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
0883de71aa5b init: Reduce balanced big cluster boost frequencies
80e355f21ddb defconfig: Reduce big cluster boost frequencies
379bb9a45599 init: Tune frame boost timeout in profiles
frandom
a0fdd952b5bb defconfig: disable frandom
621b7ba8a1cf upgrade frandom to latest
fc94224da60b drivers: Upgrade frandom from staging
c853902d8eba staging: frandom: Clear up checkpatch conflicts
e141aecbdb78 staging: frandom: Dynamically allocate the char device numbers
dd01a291cfd4 staging: Add frandom RNG driver
7e7281cd1870 GPU: add 180 MHz step
73599cbdd327 Kbuild: optimize with -fgcse-sm
c92dec0c7d6f Kbuild: use ccache
32f8dbda703c drivers: base: boeffla_wl_blocker: Checkpatch cleanup
3670397184c8 msm: vidc: disable debug logs
ebffcdfdf18d arm64/dts: b1c1: reduce debug/dump reserved memory regions
7e1b53e094b0 Revert "arm64/dts: b1c1: disable QCOM QC"
6112e6ebab21 Revert "arm64: dts: c1-touch: set i2c frequency to 400kHz"
23948e39358d dma-contiguous: log name, address, and size in case of alignment error
5e2ae256b4b3 arm64/dts: c1: send panel on command in high speed mode
8e74927b2696 arm64/dts: c1: don't sleep after turning off panel
ebb9ace3cb6c arm64/dts: c1: reduce display on sleep time to 10 ms
ff729be0a8bd arm64/dts: b1c1: update hardware names
ddabef6b53e8 helpers: record absolute path to kernel root
freak07-caf
20edb7e7876d BACKPORT, FROMGIT: dm verity: log the hash algorithm implementation
3f08c796c06b BACKPORT, FROMGIT: dm crypt: log the encryption algorithm implementation
a656017033c5 drm/msm/sde: Avoid same work queue to multiple workers
6bd3d2484fe3 drm/msm/dsi-staging: fix memory leak issue in get modes call
55403bc86b67 Revert "drm/msm: dsi-staging: avoid reinitializing display modes"
4d1b5d3c713d drm/msm/sde: Change log level from error to warn
1b178d6fceb4 drm/msm: avoid memory allocation when sg table is imported
5a01c404b9d6 drm/msm/dsi-staging: Free memory to prevent memleak
da9c403c6a5e drm/msm/dsi-staging: alter length to avoid stepping out of bounds
1c12a9656b98 drm/msm/sde: Fix race condition between enable/disable hist irq
4d5abe51821b drm/msm/dp: fix error checking for memory allocations
f0f19d5a9f3c drm/msm/dsi-staging: update DSI phy T_TA_GO duration
1bba3fcfbd1a drm/msm/dsi-staging: set correct flags for MAX_RETURN_PACKET command
74ca83f76e0a drm: msm: sde: fix decimation validation in plane atomic_check
28eb0700d674 drm/msm: suppress display platform drivers bind/unbind feature
a122c655290b drm/msm/dsi-staging: fix mem leak issue in ESD debugfs
f47c7ca09974 drm/msm/sde: avoid lock while dumping fence status
f018f88fe17e drm/msm/sde: Fix deadlock due to input handler
03cd4c426a4f drm/msm/dsi-staging: set correct state for status check command
6f3ff5bb3da1 drm/msm/sde: prevent clearing multirect flags during validate failure
freak07-changes
8a6febdd8682 defconfig: Sync with latest changes
cfac3065a9a7 UPSTREAM: dm: do not allow readahead to limit IO size
c848fc3bd4c8 UPSTREAM: readahead: stricter check for bdi io_pages
7e49fa19562c UPSTREAM: mm: don't cap request size based on read-ahead setting
bcc191f5b4e7 UPSTREAM: ppp: Move PFC decompression to PPP generic layer
d0fca2ae7de0 UPSTREAM: l2tp: Add protocol field decompression
5861f4ed326e BACKPORT: l2tp: remove ->recv_payload_hook
8cbe23fc1907 tcp/dccp: drop SYN packets if accept queue is full
3037c6300471 perf: Cancel the mux hrtimer during CPU hotplug to avoid migration
b92b5ad23b4d msm: vidc: Fix dead lock during long stability run
1ae1a36422a4 msm: camera: Add reset logic for snps phy
c6cd47c72b44 ufs: qcom: set load before setting voltage in regulator
60c39a13ec1a scsi: ufs: set load before setting voltage in regulators
ad24f86de0da scsi: ufs: Avoid writing null to Boot LUN enable attribute
2140e696bc2a scsi: ufs: avoid deadlock by releasing rw_sem during hibernate
d541db9d7bd4 scsi: ufs: Fix race condition in rls_work and ufshcd_resume
a16d0029a6cd Revert "ANDROID: dm verity: add minimum prefetch size"
78f576c57da6 UPSTREAM: mm: /proc/pid/smaps_rollup: fix NULL pointer deref in smaps_pte_range()
49e82eccba58 BACKPORT: fs/proc/task_mmu.c: fix Locked field in /proc/pid/smaps*
1954c89c99e5 BACKPORT: mm: add /proc/pid/smaps_rollup
freak07-f2fs
14db48643cc5 f2fs: introduce sbi->gc_mode to determine the policy
8a8ca04f8c4b Revert "f2fs: implement rapid GC for Android"
55a9f00070a0 Revert "f2fs: convert wakelock APIs to wakeup_source"
fc28056929f0 Revert "f2fs: switch FB notifier API to MSM DRM notifier"
bc8e69c6a165 zram: Fix mem_used_max parameter
5c95517b5b70 Merge branch 'bfq-updates'
820757da3cf2 block, bfq: improve and refactor throughput-boosting logic
c0e5c3a207de block, bfq: consider also in_service_entity to state whether an entity is active
cd0383b07ff8 block, bfq: reset in_service_entity if it becomes idle
5ca8aad4299a Add extra checks related to entity scheduling
0a7291a1fc11 BFQ-v8r12
4c32823c9d75 block, bfq: don't change ioprio class for a bfq_queue on a service tree
04212e314d5a Fix commit "don't dereference bic before null checking it"
fab17d60e6e5 block, bfq: stress that low_latency must be off to get max throughput
c776344416da block, bfq: update wr_busy_queues if needed on a queue split
981cb1ee479c Merge branch 'sdfat'
0b1dbb5146fc BFQ-v8r11
e5b8aad2286f block, bfq: don't dereference bic before null checking it
f1cdf246732b block, bfq: use pointer entity->sched_data only if set
e45bf2d46cef defconfig: Enable sdFAT filesystem
5127a0e998cb fs: sdfat: Update to version 2.1.8
25315a7d23f8 fs: sdfat: Update to version 2.0.8
b0ac55b04449 sdfat: push rcu_barrier() from deactivate_locked_super() to filesystems
dda0e9dbc62e fs: sdfat: Use clean_bdev_bh_alias instead of unmap_underlying_metadata for >=4.10
4d1850982bd5 fs: sdfat: Stop using CURRENT_TIME_SEC for Linux >= 4.9
30d4234a5bb8 fs: sdfat: 4.14 replaced bi_bdev with a gendisk pointer and partitions index
720836c07af9 fs: sdfat: bio->bi_error got renamed to bio->bi_status on >= 4.13 (Partial)
f85c91ba4f60 fs: sdfat: Add -lineage extraversion to SDFAT_VERSION
2b68162ebcce fs: sdfat: Fix compilation for 32-bit targets
0b4a94faa624 fs: sdfat: Add MODULE_ALIAS_FS for supported filesystems
59d9c2452c1c fs: sdfat: Add config option to register sdFAT for VFAT
ccadace6015b fs: sdfat: Add config option to register sdFAT for exFAT
cb2e01c98283 fs: sdfat: Update to driver version 2.0.6
92c3fcf4fe3c fs: sdfat: Fix compilation without debugging
4704f3d0d934 fs: Import sdFAT driver
b33a749c3866 boeffla_wl_blocker: Block default wakelocks we had before
4b258fee182c usb: f_qc_rndis: Remove unused static variables
d9d3806faba5 msm: ipa: Fix enum-conversion warning
b3dcc9a31d2a soc: qcom: rpm_master_stat: Fix third argument of strlcpy
53128b35d5e5 mmc: host: sdhci-msm-ice: Fix logical not parentheses warning
1630d7e8dba9 camera_v2: sensor: disable clang array-bounds
348cf97c3ea8 msm: camera: Remove unnecessary parentheses
afb8955d694a kernel: fake system calls on seccomp to succeed
e464acba7df7 drivers: pinctrl: mask non-wakeup interrupts in suspend path
1fde5363d609 crypto: arm64/crc32 - merge CRC32 and PMULL instruction based drivers
0e6dd1bc8b3d BACKPORT: mm: fix pageblock heuristic
be29888a0354 qcacld: don't warn about unused declarations
7dd34a64557e Revert "b1c1_defconfig: Disable debugfs"
gcc-lto
96eb0e005fca EXPERIMENTAL: defconfig: Enable GCC LTO
a318d36c6e6e arm64: cpu_ops: Fix section mismatch
8394e3d18f62 Kbuild, lto: Add Link Time Optimization support
a1c1c55bf3b7 lto, workaround: Disable LTO for BPF
8da4ac29207f lto: Use C version for SYSCALL_ALIAS
60652d3a0458 lto, x86, mm: Disable vmalloc BUILD_BUG_ON for LTO
a7884f3de010 lto: Make asmlinkage __visible
b32d31dcf671 lto: Use real definitions for dm_table
9dc8467d4bf3 Kbuild, bloat-o-meter: Ignore .lto_priv postfix
f0b9af0b063d Work around gcc 5-7 inliner bug in vxfs
d4bbc237807f Make xen steal_time visible
7fe026d8dcd2 Mark spinlocks noinline when inline spinlocks are disabled
14f3b2452ccd Don't let LATENCYTOP and LOCKDEP select KALLSYMS_ALL
8ff4985f179e lto: Add __noreorder and mark initcalls __noreorder
e85b8c7c9991 arm64: Don't inline __const_udelay
bb7e5e17cedd lto, xen: Mark pv stub assembler symbol visible
ce0bb526d82b defconfig: Disable scheduler debugging
30ccda7bfd01 sched/debug: Remove SCHED_DEBUG dependency on DEBUG_KERNEL
75f21ee70a72 UPSTREAM: xfrm: Make set-mark default behavior backward compatible
127c1ab04aba BACKPORT: net: dev_is_mac_header_xmit() true for ARPHRD_RAWIP
gcma
7c01a9e7f01e defconfig: enable gcma and use as default over cma
95c259d270b2 cma: fix area initialization error path
b9ddca85d1e9 cma: use gcma for early reserved memory if default
bc119e4f6720 gcma: fix typos
b97cddff123a gcma: only force frontswap if swap is enabled
786991038e79 gcma: integrate gcma under cma interface
14bc081400d2 gcma: export statistical data on debugfs
b30bfc215024 gcma: adopt cleancache and frontswap as second-class clients
c4dc37a48422 gcma: utilize reserved memory as discardable memory
03bb6b72fe64 gcma: introduce contiguous memory allocator
deeaacbe8125 Revert "EXPERIMENTAL: defconfig: switch to 1000 Hz timer"
3a5b64eb1f7c Revert "helpers: reduce detail of build timestamp"
22a3e181ebf9 zen-iosched: fix misleading indentation warning
9d47fa792d08 selinux: avc: omit audit callbacks if disabled
fa0e367ba6e4 Merge branch 'debug-omits'
37d851b73a3e fs: ecryptfs: conditionally omit debugging
6f9c19b1be0b lib: conditionally omit debugging
dcf715c0fbfb staging: qcacld-3.0: conditionally omit debugging
bec9a2df5300 defconfig: increase vmstat interval to 20 seconds
50950e5ea85b HACK: mm: add Kconfig interface for vmstat interval
90cbb9ab69e0 ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices
927f785e84ee defconfig: remove wake boost duration options
dc1a862cf7b0 devfreq_boost: remove wake boost functionality
gcma-patches
48774e870254 Revert "EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4"
7d6fc4324a30 defconfig: enable per-UID stats and memory state stats
233af9e879f2 arm64/dts: sdm845: remove vbmeta
fc6c4880d763 Merge branch 'gcma'
7c01a9e7f01e defconfig: enable gcma and use as default over cma
95c259d270b2 cma: fix area initialization error path
b9ddca85d1e9 cma: use gcma for early reserved memory if default
bc119e4f6720 gcma: fix typos
b97cddff123a gcma: only force frontswap if swap is enabled
786991038e79 gcma: integrate gcma under cma interface
14bc081400d2 gcma: export statistical data on debugfs
b30bfc215024 gcma: adopt cleancache and frontswap as second-class clients
c4dc37a48422 gcma: utilize reserved memory as discardable memory
03bb6b72fe64 gcma: introduce contiguous memory allocator
deeaacbe8125 Revert "EXPERIMENTAL: defconfig: switch to 1000 Hz timer"
3a5b64eb1f7c Revert "helpers: reduce detail of build timestamp"
22a3e181ebf9 zen-iosched: fix misleading indentation warning
9d47fa792d08 selinux: avc: omit audit callbacks if disabled
fa0e367ba6e4 Merge branch 'debug-omits'
37d851b73a3e fs: ecryptfs: conditionally omit debugging
6f9c19b1be0b lib: conditionally omit debugging
dcf715c0fbfb staging: qcacld-3.0: conditionally omit debugging
bec9a2df5300 defconfig: increase vmstat interval to 20 seconds
50950e5ea85b HACK: mm: add Kconfig interface for vmstat interval
90cbb9ab69e0 ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices
927f785e84ee defconfig: remove wake boost duration options
dc1a862cf7b0 devfreq_boost: remove wake boost functionality
fb520337e751 cpu_input_boost: remove wake boost functionality
5a6977d06465 defconfig: disable System V IPC
4d2bdf4cc0e3 kernel: never boost on top-app events if suspended
73171d86911f drm/msm: sde: boost only if last interaction was within 5000 ms
901a8a4cbfa1 helpers: reduce detail of build timestamp
b43dfed452f9 Revert "use -ffunction-sections, -fdata-sections and --gc-sections"
general-boost
8a7dd447f2e2 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into general-boost
20b0e13aee3b Revert "STOPSHIP: defconfig: enable CPU and devfreq boost debug"
c85f1144dbde lowmemorykiller: kick general CPU boost on scan
a679cde3c72a defconfig: enable and configure general CPU boost
f2f8d5c3d077 drm/msm: sde: use general boost for frame commits
20a592750069 cpu_input_boost: add API for general CPU boosting
fe23e9bbdc6a defconfig: reduce wake boost duration to 250 ms
8ed6dd7eb6c1 EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4
a32188e9a933 kernel: don't boost CPUs on app launch when suspended
2c90a8ce41aa devfreq_boost: Replace all instances of fb_notif with msm_drm_notif
009f5012147a devfreq_boost: Convert to msm_drm_notifier
26bfb7af4191 cpu_input_boost: Replace all instances of fb_notif with msm_drm_notif
9aaa61161eee cpu_input_boost: Convert to msm_drm_notifier
7cf0ba294b4a Revert "fpc1020: boost CPUs for wakeup if display is off"
9ea3aecaba02 Revert "lowmemorykiller: boost CPU when scanning and killing processes"
9b419668a97d Revert "mm: compaction: boost CPU and DDR bus during background compaction"
5beeb8cce45f STOPSHIP: defconfig: enable CPU and devfreq boost debug
501bc11b1fbe Add optional debugging for cpu_input_boost and devfreq_boost
7ca1f0eb5421 defconfig: use flat memory model
22235ea2b1ef lowmemorykiller: reduce CPU and DDR boost to 100 ms
idle-lpm
e83ed1cb05b3 cpuidle: lpm-levels: Hold lock during tick_broadcast_enter
0ea728d139d7 cpuidle: lpm-levels: Suppress driver bind/unbind feature
b54f88986758 cpuidle: lpm-levels-legacy: Use of_node_put on node pointers
aa58a420211d cpuidle: lpm-levels: select default level for cluster lpms
7cf6a6506b72 drivers: cpuidle: lpm-levels: Correctly check for list empty
37079aa7e8c5 drivers: cpuidle: lpm-levels: Move local_irq_enable
958c401fa8d8 defconfig: enable Xbox and DualShock controller support
c9729a584d7d BACKPORT: zram: drop max_zpage_size and use zs_huge_class_size()
e1f70863839e BACKPORT: zsmalloc: introduce zs_huge_class_size()
27ee89010cc5 Revert "module: load panel modules and wlan module"
ea3d219d4080 Revert "module: break signature check in driver"
d21af6459700 Merge branch 'freak07-changes'
33677c3162f1 UPSTREAM: HID: sony: remove redundant check for -ve err
8b714c8f5d6d UPSTREAM: HID: sony: Make sure to unregister sensors on failure
0ff5daee5b95 UPSTREAM: HID: sony: Make DS4 bt poll interval adjustable
4e7b080cfba6 UPSTREAM: HID: sony: Set proper bit flags on DS4 output report
e247331df395 UPSTREAM: HID: sony: DS4 use brighter LED colors
e40a93a6fd3c UPSTREAM: HID: sony: Improve navigation controller axis/button mapping
0205246a115b UPSTREAM: HID: sony: Use DS3 MAC address as unique identifier on USB
0cf1cd09044d UPSTREAM: HID: sony: Perform duplicate device check earlier on
c33b36a0d50c UPSTREAM: HID: sony: Expose DS3 motion sensors through separate device
a098ed9fba2e UPSTREAM: HID: sony: Print error on failure to active DS3 / Navigation controllers
b1b96e62c4a9 UPSTREAM: HID: sony: DS3 comply to Linux gamepad spec
8de26cf21ff5 UPSTREAM: HID: sony: Mark DS4 touchpad device as a pointer
ddc476adae1d UPSTREAM: HID: sony: Support motion sensor calibration on dongle
4745c7c06d01 UPSTREAM: HID: sony: Make work handling more generic
2009b3a0f778 UPSTREAM: HID: sony: Treat the ds4 dongle as a separate device
7c183780f481 UPSTREAM: HID: sony: Remove report descriptor fixup for DS4
010d0f45ef38 UPSTREAM: HID: sony: Report hardware timestamp for DS4 sensor values
bb651cc445a1 UPSTREAM: HID: sony: Calibrate DS4 motion sensors
9d1c8c91091c UPSTREAM: HID: sony: Report DS4 motion sensors through a separate device
d145a35b4935 UPSTREAM: HID: sony: Fix input device leak when connecting a DS4 twice using USB/BT
c084a2b0eb92 UPSTREAM: HID: sony: Ignore DS4 dongle reports when no device is connected
7b9040ff29e3 UPSTREAM: HID: sony: Use DS4 MAC address as unique identifier on USB
1747165967d9 UPSTREAM: HID: sony: Fix error handling bug when touchpad registration fails
d724d7ddec47 UPSTREAM: HID: sony: Comply to Linux gamepad spec for DS4
1c58e0f93056 UPSTREAM: HID: sony: Make the DS4 touchpad a separate device
c32fb05c94e8 UPSTREAM: HID: sony: Fix memory issue when connecting device using both Bluetooth and USB
ab8c37f9d6ff UPSTREAM: HID: sony: Adjust value range for motion sensors
6cf76414b9e6 UPSTREAM: HID: sony: Handle multiple touch events input record
83dcb6f5e113 UPSTREAM: HID: sony: Send ds4 output reports on output end-point
f9972a8eb204 UPSTREAM: HID: sony: Perform CRC check on bluetooth input packets
acccec37b40f UPSTREAM: HID: sony: Adjust HID report size name definitions
cf811729828f UPSTREAM: HID: sony: Fix race condition in sony_probe
1014b2aafcdc UPSTREAM: xfrm: fix ptr_ret.cocci warnings
f3bc34505d67 UPSTREAM: xfrm: Return detailed errors from xfrmi_newlink
9c431291f5cf UPSTREAM: xfrm: Allow xfrmi if_id to be updated by UPDSA
dc93153ba974 UPSTREAM: xfrm: Allow Set Mark to be Updated Using UPDSA
e38c2840b01d BACKPORT: xfrm: Add virtual xfrm interfaces
ce6160e1df30 BACKPORT: xfrm: Add a new lookup key to match xfrm interfaces.
ed0466d44e2e UPSTREAM: flow: Extend flow informations with xfrm interface id.
105bfa2f3b76 BACKPORT: xfrm: Extend the output_mark to support input direction and masking.
fe3a69f2df64 BACKPORT: xfrm: fix XFRMA_OUTPUT_MARK policy entry
314f2bf0ec36 BACKPORT: arm64: Expose support for optional ARMv8-A features
0c3f672f8423 UPSTREAM: loop: Add LOOP_SET_BLOCK_SIZE in compat ioctl
e29cdb6ba63f BACKPORT: block/loop: set hw_sectors
12f145891a41 UPSTREAM: loop: add ioctl for changing logical block size
9a5b1b832dd0 ANDROID: usb: gadget: f_mtp: Return error if count is negative
69ecd856fdd5 Merge branch 'wlan'
4a106c56cf10 qcacld-3.0: disable mac randomization by default
dbd8054d2588 add specialized MAC randomization for qcacld-3.0
899206f328b7 qcacld-3.0: Reduce qcom_rx_wakelock timeouts to 7 seconds
ff5b036bb1b7 Merge branch 'revert-clang-hacks'
1c601be0ef40 Revert "ANDROID: HACK: arm64, LLVMLinux: replace prfm instruction in spin_lock_prefetch()"
a1c37a08cb95 Revert "LLVMLINUX: DO-NOT-UPSTREAM arm64, LLVMLinux: prfm"
2559104be002 Revert "ANDROID: HACK: futex, LLVMLinux: don't optimize futex_detect_cmpxchg() on ARM64"
b071e678491c Merge branch 'zram-zstd'
b3bd9a7edfc0 zram: use zstd over lz4 over lzo by default
36906ac32bc1 defconfig: enable zstd
d0fa2d8a27bc zram_drv.c: use pointer as per commit https://github.com/freak07/bluecross/commit/1cdb7f9c79812ecb70c698f7eb5574a47464585f
4d65fd2bb730 Revert "Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write""
76739d97bc8b Revert "Revert "mm/block: convert rw_page users to bio op use""
ec4413dc8ebd zram_drv.c: make zstd default compression algorithm, use lzo as a fallback
6b9c099d97c2 BACKPORT: crypto: zstd - Add zstd support
7b99ea0f72d5 UPSTREAM: drivers/block/zram/zram_drv.c: fix bug storing backing_dev
b3371525dd94 BACKPORT: zram: introduce zram memory tracking
bf3be17249c9 BACKPORT: zram: record accessed second
7bb47c49fdd2 BACKPORT: zram: mark incompressible page as ZRAM_HUGE
5a621e1607b9 UPSTREAM: zram: correct flag name of ZRAM_ACCESS
cafa93a8c470 UPSTREAM: zram: Delete gendisk before cleaning up the request queue
5a64fd5f1b6f UPSTREAM: drivers/block/zram/zram_drv.c: make zram_page_end_io() static
3a1b6ae3f5c4 BACKPORT: zram: set BDI_CAP_STABLE_WRITES once
82dcf0969021 UPSTREAM: zram: fix null dereference of handle
76ec4805f2cb UPSTREAM: zram: add config and doc file for writeback feature
44dcdb9ad4a0 BACKPORT: zram: read page from backing device
44141f625db4 BACKPORT: zram: write incompressible pages to backing device
f9487dd3d947 BACKPORT: zram: identify asynchronous IO's return value
5a2859ed3e3f BACKPORT: zram: add free space management in backing device
c96d6c4e3c72 UPSTREAM: zram: add interface to specif backing device
5286b4c41c7b UPSTREAM: zram: rename zram_decompress_page to __zram_bvec_read
7a4b0d0fefcd UPSTREAM: zram: inline zram_compress
e75026d980e7 UPSTREAM: zram: clean up duplicated codes in __zram_bvec_write
0264bc746786 UPSTREAM: zram: add zstd to the supported algorithms list
5749154c5812 UPSTREAM: lib: Add zstd modules
fb205881c979 UPSTREAM: lib: Add xxhash module
d09190ad1f06 UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()
9a2281755931 UPSTREAM: zram: constify attribute_group structures.
5c0818ff10d6 UPSTREAM: zram: count same page write as page_stored
462937d99516 UPSTREAM: zram: reduce load operation in page_same_filled
20bf041d4dd7 UPSTREAM: zram: use zram_free_page instead of open-coded
d3af2c9e919e UPSTREAM: zram: introduce zram data accessor
93d1060af4cd UPSTREAM: zram: remove zram_meta structure
7d234c66cc93 UPSTREAM: zram: use zram_slot_lock instead of raw bit_spin_lock op
a7191058ba68 BACKPORT: zram: partial IO refactoring
d80238fbc78c UPSTREAM: zram: use __GFP_MOVABLE for memory allocation
cb66adc663de BACKPORT: zram: handle multiple pages attached bio's bvec
86c9aadb5d03 UPSTREAM: zram: fix operator precedence to get offset
828a88674553 BACKPORT: zram: extend zero pages to same element pages
a4d51e3d8d67 BACKPORT: zram: remove waitqueue for IO done
fc42fd3f4a3e Revert "mm/block: convert rw_page users to bio op use"
b1d98cf1e689 Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write"
46f1c9baa318 Revert "staging: zram: Rate limit memory allocation errors"
e9e441cb71c5 Revert "UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()"
14455cf6f3a7 Revert "zram: use __GFP_MOVABLE for memory allocation"
75356bdb7fee Revert "power: Block all them crazy wakelocks"
937a8b66db21 gpu: adreno: only compile Adrneo 6xx driver
9c8af3d2fb7e defconfig: disable menu cpuidle governor
11d8939cbd4e cpuidle: allow disabling menu governor if lpm is available
adfffc6cdf90 defconfig: disable unused touchscreen drivers
int-sqrt-opt
0975b398ca41 lib/int_sqrt: adjust comments
0bf1552feaa9 lib/int_sqrt: optimize initial value compute
14187502b21d lib/int_sqrt: optimize small argument
cfd118a060c6 Revert "int_sqrt.c: Correction square root algo with naming"
494defcefb5c Revert "int_sqrt: Improve 3x faster integer sqrt."
8d9d6126b6a8 drm/msm/sde: Wait for ctl_start asynchronously on cmd mode panels
020bf2288ca4 Revert "kernel: Force trivial, unbound kthreads onto low-power CPUs"
738dd4ecd9be sched/fair: Fix botched starting CPU selection logic
92cb67f5c93c Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
31a14c6413a7 clk: qcom: clk-cpu-osm: Set dvfs_possible_from_any_cpu cpufreq driver flag
9ae4a1188fcd cpufreq: schedutil: Don't restrict kthread to related_cpus unnecessarily
62693c13c6ce cpufreq: Simplify cpufreq_can_do_remote_dvfs()
594e7cd99555 cpufreq: Process remote callbacks from any CPU if the platform permits
e7743f0af7fe sched: cpufreq: Allow remote cpufreq callbacks
7a290f37e591 init: Adjust performance profiles
ab3f8ea111ac powerhint: Do not trigger sched_boost
749b1ced91d9 mm: Boost when memory pressure becomes high
e5e060c1ca5f treewide: Update users of boost write block check function
9cc6ccdc7c4a exec: Make write block checking function name more idiomatic
a02bc34fe4a3 sysctl: Nuke sched_boost feature
io-mmap_sem-drop
6b7f24d21e22 FROMLIST: filemap: drop the mmap_sem for all blocking operations
1e87d90fbb05 FROMLIST: filemap: pass vm_fault to the mmap ra helpers
6099c4ef5ae9 FROMLIST: filemap: kill page_cache_read usage in filemap_fault
b0f91a5f0d71 f2fs: add proper cleancache support
70db1e26d490 powerhint: bump interaction top-app schedtune boost to 20
c0fb2ce68c45 ASoC: wcd934x: fix unused variable warning
502f7e9bf383 defconfig: disable drv2624 haptics driver
fed9f63662a3 wcd934x: add speaker gain control
0ea0b5ed33e9 drm: msm: add backlight dimmer option
a5b47513c122 Merge branch 'mitigate-mmap_sem'
f1638af2b6b9 mm: unmap VM_PFNMAP mappings with optimized path
5f28b7fee91b mm: unmap VM_HUGETLB mappings with optimized path
e00ff6bd5d24 mm: mmap: zap pages with read mmap_sem in munmap
e96f16d07a87 mm: call vm_munmap in munmap syscall instead of using open coded version
5ff004676b19 kernel: time: remove NO_HZ_FULL_SYSIDLE_SMALL dependency on NR_CPUS
1cd1f6940d0a defconfig: disable frontswap
fdac63144a64 defconfig: disable gcma stats accouting
f2ef40c6a4b1 gcma: make stats accounting configurable
ab5f6585051c gcma: make cleancache and frontswap completely optional
d6a40aedf6fc Revert "ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices"
48774e870254 Revert "EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4"
7d6fc4324a30 defconfig: enable per-UID stats and memory state stats
233af9e879f2 arm64/dts: sdm845: remove vbmeta
fc6c4880d763 Merge branch 'gcma'
7c01a9e7f01e defconfig: enable gcma and use as default over cma
95c259d270b2 cma: fix area initialization error path
b9ddca85d1e9 cma: use gcma for early reserved memory if default
bc119e4f6720 gcma: fix typos
b97cddff123a gcma: only force frontswap if swap is enabled
786991038e79 gcma: integrate gcma under cma interface
14bc081400d2 gcma: export statistical data on debugfs
b30bfc215024 gcma: adopt cleancache and frontswap as second-class clients
c4dc37a48422 gcma: utilize reserved memory as discardable memory
03bb6b72fe64 gcma: introduce contiguous memory allocator
irq-clusters
85b11bd3b202 fpc1020: Mark IRQ as performance critical
08db7695faf5 msm: kgsl: Mark IRQ and worker thread as performance critical
1c602ef33d82 kernel: Force trivial, unbound kthreads onto low-power CPUs
c894b0a3a2a7 flasher, helpers: check for Android with gatekeeperd
453ad9d50bea scsi: ufs: Enable debugfs usage for bluecross
305c5b6d5705 mm: Enable oom_kill_allocating_task and disable oom_dump_tasks
4e8f92d9fe6d msm: camera: Remove always false checks in msm_camera_{get,put}_clk_info
bff28d632efe misc: mnh: Remove always true check in mnh_sm_open
3d61463e9185 msm: vidc: Remove always true check in hfi_process_session_rel_buf_done
e6589b690fe9 msm: camera: Remove unnecessary null check in msm_remove_session_cmd_ack_q
fa4c150f61bb msm: sensor: flash: Remove unnecessary null checks in msm_flash_i2c_release
511b304d38e4 msm: ipa: Remove unnecessary null checks in ipa_add_rt_rule_after
be4692c6fdd7 regulator: qpnp-lcdb: Remove unnecessary null check in qpnp_lcdb_init_bst
a37a0d5abc19 soc: qcom: sysmon-qmi: Remove unnecessary null check in sysmon_send_shutdown
a85277976090 thermal: qpnp-temp-alarm: Remove unnecessary null check in qpnp_tm_probe
c8fc54dc909a tty: msm_smd_tty: Remove unnecessary null checks for {ch,dev}_name
5b0c1c82606e defconfig: disable LZO
65e400bbde96 zram: allow LZO to be disabled
f1798bf6a15d Makefile: disable Cortex-A53 erratum 835769 fix
21b7a718e1c3 arm64: only pass -mpc-relative-literal-loads if 843419 fix is enabled
kcbench
e91e4684cedc setup: Use Clang as the primary compiler
b5b15953ade5 setup_clang: Remove unnecessary environment exports
566da05ac602 Makefile: Remove unnecessary linker erratum flags
6a863b83e352 Makefile: Remove duplicate GCC erratum fix disable flag
a835a4989c27 Revert "arm64: explicitly disable erratum 843419 fix if disabled in config"
519fcc2bd865 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d337789da93d Revert "mm: compaction: Add automatic compaction mechanism"
fd06fdcc6ea0 Revert "mm: compaction: switch FB notifier API to MSM DRM notifier"
accc048ab578 Revert "mm: compaction: Fix bad logging"
9aa6d9f34197 defconfig: Switch to 250 Hz timer frequency
728a431405e8 Makefile: Remove most custom GCC optimization flags
834753b3b66b Revert "defconfig: enable Yama security"
207565962e31 msm: msm_bus: Fix boot-time logging
350a3e253506 arm64/dts: b1c1: Remove unnecessary reserved memory regions
9f8d5d57e4f4 defconfig: Include all kernel symbols in the image
539940747817 Revert "misc: cs40l2x: Promote vibration start work to SCHED_FIFO"
91e0643e833e defconfig: Enable KASLR for security
41b5d14693f9 Revert "defconfig: use flat memory model"
25d507d87e5c Merge branch 'cleanup2'
5cef7465f1f7 Revert "Merge branch 'debug-omits'"
608abc55a142 Revert "Merge branch '4.10-genirq'"
080008145c3c Revert "Merge branch '4.10-rcu'"
9b1560a7ff11 Revert "Merge branch 'slub-updates'"
0c0534fdcb1a Revert "EXPERIMENTAL: defconfig: Disable seccomp filter"
480cb48c90c8 Revert "Merge branch '4.10-sched'"
249693ff7b39 Revert "binfmt_elf.c: use get_random_int() to fix entropy depleting"
a6df3bd79d83 Revert "AIO: Don't plug the I/O queue in do_io_submit()"
kernel-boost
f3620fb2bd20 mm: compaction: boost CPU and DDR bus during background compaction
c1cfbb371582 cpu_input_boost: mark userspace tunables __read_mostly
b9effd3bf0e4 cpu_input_boost: expose return frequencies to userspace
4ba230ac4a55 lowmemorykiller: boost CPU when scanning and killing processes
ca3c2ecd3862 defconfig: configure input boost and devfreq boost
0ce859a206f9 Revert "devfreq_boost: convert to simple max boost driver"
0a952d960c66 cpufreq: Kill userspace CPU boosting entirely
40f19625d040 drm: msm: sde: Boost cpubw devfreq device when a new frame is ready
fbc79d164332 kernel: boost Lawnchair v2 when becoming top-app
2458f1d5db37 kernel: Boost CPU to the max when Pixel launcher becomes a top app
bcf9b7c1d5e2 drm: msm: sde: Boost CPU when a new frame is ready to be committed
3d231e7ef0b7 kernel: Boost all CPUs to the max when userspace launches an app
0074c48baaf3 cpu_input_boost: expose input freqs and duration to userspace
6613532d59d8 cpu_input_boost: Add ability to choose minimum frequency for big cluster
2b7f870c3ed5 cpu_input_boost: add an option to choose a custom boost finish return freq for the LP cluster
caee0ab39778 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
ee4b7d1185e2 cpu_input_boost: Simplify bitwise operations used to store boost state
cd045b61f066 cpu_input_boost: Destroy workqueue on error path in init
788fd3fbb5e3 cpu_input_boost: Fix and refactor max boost logic
094faa7fa450 cpu_input_boost: Add API for boosting all CPUs to max frequency
kernfs-procfs-backports
3ea271e715f0 kernfs: Check KERNFS_HAS_RELEASE before calling kernfs_release_file()
08c63cdbb9b0 kernfs: fix locking around kernfs_ops->release() callback
0fd7466a6073 kernfs: add kernfs_ops->open/release() callbacks
c9c7adf9db85 mm: Avoid page waitqueue race leaving possible page locker waiting
d2470b62fe20 mm: workingset: tell cache transitions from workingset thrashing
006cba305ad1 arm64: dma-mapping: alloc page order based on domain pgsize
393487ba2995 msm: ipa3: Initialize parameters for registering client
984f4ebee393 drm/msm/dp: update sink voltage and pre-emphasis
655b88c4ac70 tick/nohz: Fix softlockup on scheduler stalls in kvm guest
e053e5a4a27f Revert "block: defer timeouts to a workqueue"
0c408463923d defconfig: Re-enable sysrq triggers
a276a1fe57b4 mm: alloc_contig: re-allow CMA to compact FS pages
3d192ae02871 Revert "f2fs: Convert rapid GC to use global display state tracker"
bb9541b6e3c2 Revert "f2fs: Simplify rapid GC display state notifier"
49d36c8deccd Revert "f2fs: Simplify rapid GC worker control flow"
df80f9dfa241 Revert "devfreq_boost: Convert to global display state tracker"
9e4f1b333e7d Merge branch 'revert-gcma'
89a364176720 defconfig: Remove GCMA option
24ad739e57c6 Revert "Merge branch 'gcma'"
068cb224d2b4 Revert "gcma: make cleancache and frontswap completely optional"
2c350cf64e72 Revert "gcma: make stats accounting configurable"
73afd0704026 treewide: Update usages of boost task check helper
8c77677f64aa exec: Fix potential race condition in boost task checker
cb5e31bea0ac msm: kgsl: Initialize wakeup pwrlevel to the initial pwrlevel
klapse
1f9d68999de5 defconfig: Enable KLapse
0cac1e9e87ff drm/msm: klapse: Fix Kconfig option title
4ce9d4473e97 drm/msm: klapse: Refactor preprocessor definitions
28aab63451af drm/msm: klapse: Modernize sysfs functions to prevent CFI failures
cf330041d52d drm/msm: klapse: Fix some bugs and improve thread safety
f1d52b1b2972 drm/msm: klapse: Modify klapse_scaling_rate to use a minute value
0fd83d564c51 drm/msm: klapse: Allow fadeback_minutes to be greater than 0 instead of 2
776611bad8ff drm/msm: klapse: Allow RGB to be same value as SCALE_VAL_MIN
d2afcc6a79c6 drm/msm: klapse: Change temporary sysfs value type to unsigned int
2ac930f52e33 drm/msm: klapse: Improve flexibility
4a208bf5ec83 drm/msm: Introduce KLapse RGB scaling module
2d8f769a1a07 defconfig: Enable R/W semaphore priority awareness
43052cad6aa7 locking/rwsem: for rwsem prio aware enhancement
9340a5c78342 defconfig: Disable scheduler info dump on sysrq trigger
987309cbc2ba sched/debug: Make sysrq prints of sched debug data optional
41b8b9b09f54 qcacld: disable qcom_rx_wakelock
2015a3df1634 Revert "qcacld-3.0: Reduce qcom_rx_wakelock timeouts to 7 seconds"
5bf89bca5884 init: Reduce input SchedTune boost values
b02ff8b2a612 defconfig: Adjust SchedTune boost values
5e62a50acff2 cpu_input_boost: Remove general boost level
klp
31ba38b0c8b6 drm/msm: klapse: Refactor code
3592630d9b54 ANDROID: arm64: vdso32: fix CC=clang build
7c750447b9c0 Revert "vdso32: make it play nice with clang"
2fd7b41cd769 rcu: Don't kick unless grace period or request
d4cf7e83e416 rcu: Make expedited grace periods recheck dyntick idle state
9a52b3d3dcc5 Revert "sched/walt: Reduce window size to 8 ms and load history to 64 ms"
fe485e6c7bd5 Revert "Merge branch 'sched-updates'"
745328af8f4a init: Enable iowait boost on the balanced profile
38cf22919178 Merge branch 'fix-stutter-and-freezes'
69df3753f84f Revert "FROMLIST: block: hook up writeback throttling"
8783ff7d83a8 Revert "defconfig: Enable single-queue writeback throttling"
aa3bbb0536c6 Revert "hrtimer: Bump default timer slack to 500 us"
4e15f0d63487 treewide: Remove redundant display state checks around max boosts
6396126ce15c devfreq_boost: Block max boosts while the screen is off
d56c89d8f022 cpu_input_boost: Block max boosts while the screen is off
11767a2bd2b6 init: Reduce balanced down rate limit
ad70d534186b cpufreq: schedutil: Reduce frequencies slower
61626f80aab9 scsi: ufs: fix wrong count of q_depth
cc32364f110f qseecom: improve blocked listener processing for smcinvoke
d93665227978 block: prevent merging of requests with different priorities
06cd67cf05a5 sched/cpufreq: Remove unused SUGOV_KTHREAD_PRIORITY macro
aad49e754061 cpufreq: schedutil: Use idle_calls counter of the remote CPU
4971669f9a8a sched/cpufreq: Don't pass flags to sugov_set_iowait_boost()
lede-backports
b7d68be71829 defconfig: enable conntrack route caching
395fd58573d3 uapi/if_ether.h: prevent redefinition of struct ethhdr
9ef0929e990a ipv6: Need to export ipv6_push_frag_opts for tunneling now.
b28a7ed6c17f ip6_tunnel: Fix missing tunnel encapsulation limit option
6b3ca5a2babe netfilter: nf_tables: fix mismatch in big-endian system
87f2ecb6ee3c drivers: net: generalize napi_complete_done()
b2f6b28c86b0 i2c: gpio: Enable working over slow can_sleep GPIOs
2cd45838134e regmap: make LZO cache optional
685a9b77ab89 mm: rename __page_frag functions to __page_frag_cache, drop order from drain
8a0c32ab14c2 mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free
f66138a917a5 mm: add support for releasing multiple instances of a page
225272f1750b tcp: allow drivers to tweak TSQ logic
ea588789e48f tcp: add a missing barrier in tcp_tasklet_func()
d9b547dff7c1 tcp: tsq: move tsq_flags close to sk_wmem_alloc
3a1fda51f9f7 net: reorganize struct sock for better data locality
fe9b2486b721 tcp: tcp_mtu_probe() is likely to exit early
5ec0555a44d7 tcp: tsq: add a shortcut in tcp_small_queue_check()
26aa1c7ba94b tcp: tsq: avoid one atomic in tcp_wfree()
7db87fd81e2c tcp: tsq: add shortcut in tcp_tasklet_func()
79725724d6d0 tcp: tsq: remove one locked operation in tcp_wfree()
lede-hacks
b352dc66660c defconfig: enable stripped procfs
495f64ccac0b debloat: dmabuf
a33dde96c362 debloat: procfs
12412a316b60 debloat: add some debloat patches, strip down procfs and make O_DIRECT support optional, saves ~15K after lzma on MIPS
d9542350ba01 bridge: only accept EAP locally
7dd7f810f844 kernel: prevent cryptomgr from pulling in useless extra dependencies for tests that are not run
5e13b80476b0 hack: net: remove bogus netfilter dependencies
56050606f9f8 add an optional config option for stripping all unnecessary symbol exports from the kernel image
de04aae38aac use -ffunction-sections, -fdata-sections and --gc-sections
2278570ed449 kernel: fix linux/spi/spidev.h portability issues with musl
2e22ee8c8d64 linux-3.6: fix portability of some includes files in tools/ used on the host
e01d108a6c37 kernel: fix linux 4.9 host tools portability issues
2c066b9fbcc2 Add an OSX specific patch to make the kernel be compiled
2c7f080428a9 kernel: do not build modules.order
816c7cbdbadd build: add a hack for removing non-essential module info
acefc8d2d1d6 kernel: strip unnecessary symbol table information from kernel modules
36bca0fb7464 Merge branch 'lede-backports'
b7d68be71829 defconfig: enable conntrack route caching
395fd58573d3 uapi/if_ether.h: prevent redefinition of struct ethhdr
9ef0929e990a ipv6: Need to export ipv6_push_frag_opts for tunneling now.
b28a7ed6c17f ip6_tunnel: Fix missing tunnel encapsulation limit option
6b3ca5a2babe netfilter: nf_tables: fix mismatch in big-endian system
87f2ecb6ee3c drivers: net: generalize napi_complete_done()
b2f6b28c86b0 i2c: gpio: Enable working over slow can_sleep GPIOs
2cd45838134e regmap: make LZO cache optional
685a9b77ab89 mm: rename __page_frag functions to __page_frag_cache, drop order from drain
8a0c32ab14c2 mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free
f66138a917a5 mm: add support for releasing multiple instances of a page
225272f1750b tcp: allow drivers to tweak TSQ logic
ea588789e48f tcp: add a missing barrier in tcp_tasklet_func()
d9b547dff7c1 tcp: tsq: move tsq_flags close to sk_wmem_alloc
3a1fda51f9f7 net: reorganize struct sock for better data locality
fe9b2486b721 tcp: tcp_mtu_probe() is likely to exit early
5ec0555a44d7 tcp: tsq: add a shortcut in tcp_small_queue_check()
26aa1c7ba94b tcp: tsq: avoid one atomic in tcp_wfree()
7db87fd81e2c tcp: tsq: add shortcut in tcp_tasklet_func()
79725724d6d0 tcp: tsq: remove one locked operation in tcp_wfree()
f682e57a258c tcp: tsq: add tsq_flags / tsq_enum
354538cc4c00 netfilter: conntrack: cache route for forwarded connections
689cd6d211c6 disable -Wattribute-alias warning for SYSCALL_DEFINEx()
051556bb83f3 kbuild: add macro for controlling warnings to linux/compiler.h
8d3f777d0560 Kbuild: don't hardcode path to awk in scripts/ld-version.sh
19989ff0dc96 defconfig: revert to pfifo_fast qdisc
6df3338476e0 Merge branch 'net-cake-2017'
97e15a1bbe84 defconfig: disable cake
0e7cb243683b net: allow selecting cake as default qdisc
89c0eafdcb72 FROMLIST: Add support for building the new cake qdisc
139ea1f37fd9 BACKPORT: Add Common Applications Kept Enhanced (cake) qdisc
26f96d4e2db2 FROMLIST: pkt_sched.h: add support for sch_cake API
44d830fa4724 lowmemorykiller: remove all boosting
lede-pending
13689d0fb0d2 defconfig: disable common PCI quirks, optimize inlining
3b30a1915e45 usb: Remove annoying warning about bogus URB
098aee3811fd debloat: disable common USB quirks
84aa795f0470 debloat: add kernel config option to disabling common PCI quirks
e77372028dbe net: replace GRO optimization patch with a new one that supports VLANs/bridges with different MAC addresses
2da662881f88 kernel: add a few patches for avoiding unnecessary skb reallocations - significantly improves ethernet<->wireless performance
4fcd3fd0a942 net: add an optimization for dealing with raw sockets
43fb27e109b3 net_sched/codel: do not defer queue length update
fcc8da599635 kernel: add a small xfrm related performance optimization
9e2312db5256 netfilter: optional tcp window check
9643dad8eecd netfilter: reduce match memory access
c0ceaf41de69 netfilter: match bypass default table
8b37ba082ce3 kernel: add a new version of my netfilter speedup patches for linux 2.6.39 and 3.0
f88d7f2954ea compiler-gcc: optimize inlining
f9c0bb5db040 spi: use gpio_set_value_cansleep for setting chipselect GPIO
ed94710e2be3 Merge branch 'lede-hacks'
b352dc66660c defconfig: enable stripped procfs
495f64ccac0b debloat: dmabuf
a33dde96c362 debloat: procfs
12412a316b60 debloat: add some debloat patches, strip down procfs and make O_DIRECT support optional, saves ~15K after lzma on MIPS
d9542350ba01 bridge: only accept EAP locally
7dd7f810f844 kernel: prevent cryptomgr from pulling in useless extra dependencies for tests that are not run
5e13b80476b0 hack: net: remove bogus netfilter dependencies
56050606f9f8 add an optional config option for stripping all unnecessary symbol exports from the kernel image
de04aae38aac use -ffunction-sections, -fdata-sections and --gc-sections
2278570ed449 kernel: fix linux/spi/spidev.h portability issues with musl
2e22ee8c8d64 linux-3.6: fix portability of some includes files in tools/ used on the host
e01d108a6c37 kernel: fix linux 4.9 host tools portability issues
2c066b9fbcc2 Add an OSX specific patch to make the kernel be compiled
2c7f080428a9 kernel: do not build modules.order
816c7cbdbadd build: add a hack for removing non-essential module info
acefc8d2d1d6 kernel: strip unnecessary symbol table information from kernel modules
36bca0fb7464 Merge branch 'lede-backports'
b7d68be71829 defconfig: enable conntrack route caching
395fd58573d3 uapi/if_ether.h: prevent redefinition of struct ethhdr
9ef0929e990a ipv6: Need to export ipv6_push_frag_opts for tunneling now.
b28a7ed6c17f ip6_tunnel: Fix missing tunnel encapsulation limit option
6b3ca5a2babe netfilter: nf_tables: fix mismatch in big-endian system
87f2ecb6ee3c drivers: net: generalize napi_complete_done()
b2f6b28c86b0 i2c: gpio: Enable working over slow can_sleep GPIOs
2cd45838134e regmap: make LZO cache optional
685a9b77ab89 mm: rename __page_frag functions to __page_frag_cache, drop order from drain
8a0c32ab14c2 mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free
f66138a917a5 mm: add support for releasing multiple instances of a page
225272f1750b tcp: allow drivers to tweak TSQ logic
ea588789e48f tcp: add a missing barrier in tcp_tasklet_func()
d9b547dff7c1 tcp: tsq: move tsq_flags close to sk_wmem_alloc
3a1fda51f9f7 net: reorganize struct sock for better data locality
fe9b2486b721 tcp: tcp_mtu_probe() is likely to exit early
5ec0555a44d7 tcp: tsq: add a shortcut in tcp_small_queue_check()
26aa1c7ba94b tcp: tsq: avoid one atomic in tcp_wfree()
7db87fd81e2c tcp: tsq: add shortcut in tcp_tasklet_func()
79725724d6d0 tcp: tsq: remove one locked operation in tcp_wfree()
f682e57a258c tcp: tsq: add tsq_flags / tsq_enum
354538cc4c00 netfilter: conntrack: cache route for forwarded connections
689cd6d211c6 disable -Wattribute-alias warning for SYSCALL_DEFINEx()
051556bb83f3 kbuild: add macro for controlling warnings to linux/compiler.h
8d3f777d0560 Kbuild: don't hardcode path to awk in scripts/ld-version.sh
19989ff0dc96 defconfig: revert to pfifo_fast qdisc
6df3338476e0 Merge branch 'net-cake-2017'
97e15a1bbe84 defconfig: disable cake
0e7cb243683b net: allow selecting cake as default qdisc
89c0eafdcb72 FROMLIST: Add support for building the new cake qdisc
139ea1f37fd9 BACKPORT: Add Common Applications Kept Enhanced (cake) qdisc
26f96d4e2db2 FROMLIST: pkt_sched.h: add support for sch_cake API
44d830fa4724 lowmemorykiller: remove all boosting
legacy-cleanup
5f8784f68fa0 defconfig: Disable useless legacy I/O schedulers
006d84c5e349 defconfig: Remove wakelock blocker option
6b0be023bd36 Revert "Added fsync on/off support."
8140e17a37f7 Revert "fs: sync: Avoid calling fdget without fdput"
57941b3caadd Revert "boeffla_wl_blocker: add generic wakelock blocker driver v1.0.0"
33a91355eb47 Revert "boeffla_wl_blocker: update to wakelock blocker driver v1.0.1"
2e90d9c69b50 Revert "boeffla_wl_blocker: update to wakelock blocker driver v1.1.0"
bfbc10d06286 Revert "boeffla_wl_blocker: Block default wakelocks we had before"
7d5b0df14fc4 Revert "boeffla_wl_blocker: Remove default blocked wakelock list"
72f4dc21881a Revert "drivers: base: boeffla_wl_blocker: Checkpatch cleanup"
c03245601e2e Revert "PM: revise Boeffla wakelock blocker config option"
e6dbf50ba848 flasher: Update to March 2019 stock DTBO
95b9fc43af35 Merge branch 'revert-stune-hold'
5479cd90dbc3 Revert "BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost"
43bf62634186 Revert "sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes"
0efa85baa8e1 Revert "sched: Update schedtune hold based on the android-4.14 version"
bb0e7a3d040e Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
759bdb0246a2 trace/trace_sched_wakeup: Fix compliation error when CONFIG_SCHED_TRACER=y
d672cbe7e03e clk: qcom: clk-cpu-osm: Remove boost frequency classification
97091c91b08e Revert "workqueue: change permissions to allow root control of wq_power_efficient toggle"
856d065ea3ff state_notifier: Expose suspend state as a read-only parameter
bf2ba9164f00 Revert "msm: kgsl: Report correct GPU frequency in sysfs"
c5c42d9a2169 FROMLIST: sched/fair: Don't move tasks to lower capacity cpus unless necessary
linaro-rt
23948e39358d dma-contiguous: log name, address, and size in case of alignment error
5e2ae256b4b3 arm64/dts: c1: send panel on command in high speed mode
8e74927b2696 arm64/dts: c1: don't sleep after turning off panel
ebb9ace3cb6c arm64/dts: c1: reduce display on sleep time to 10 ms
ff729be0a8bd arm64/dts: b1c1: update hardware names
ddabef6b53e8 helpers: record absolute path to kernel root
7b7e8e2f550e helpers: introduce croot helper
1c7942f1ff79 arm64/dts: b1c1: remove unused preproduction trees
36ef15307b9a arm64/dts: b1c1: only build DVT 1.1 dtb overlays
c9a2584c4448 Revert "arm64: dts: s6e3ha8: disable DSC compression"
ebf65eaf740e helpers: copy the dtbo image into flasher
4f84648da2d1 init: reduce swappiness to 60
2db111b97ff0 dcache: set default vfs_cache_pressure to 75
4fcdc0200781 defconfig: release version v7
81ac53eb31d9 defconfig: link the kernel with ld.gold
0b08017e8b75 Kbuild: add config option to force ld.gold linker
ecab9021cb80 Revert "Kbuild: link with gold if using LD_DEAD_CODE_DATA_ELIMINATION"
2e3c7c60d64e helpers: add tbuild helper
f68d53da5621 Kbuild: link with gold if using LD_DEAD_CODE_DATA_ELIMINATION
de175a6eda15 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
lld
9a430694cd15 vmlinux.lds: Prevent LLD from eliminating built-in module versions
f6d3d38c4f6f kbuild: Set --lto-O3 LLD linker flag when building with clang LTO
d7b510ff94af kbuild: Force -O2 LLD linker flag for vmlinux
ffc6aab197a2 kbuild: Fix inconsistent LLD flag indentation
361fff5e08ef kbuild: Fix linker config option for clang LTO
ae0cd5991674 kbuild: Use LLD for the final vmlinux link step
72fc00945f7e arm64: vdso: Fix compilation with LLD
c3f4db6fe813 FROMLIST: BACKPORT: Makefile: lld: set -O2 linker flag when linking with LLD
af27484dd24c FROMLIST: BACKPORT: Makefile: lld: tell clang to use lld
40772003e342 FROMLIST: BACKPORT: Makefile: clang: choose GCC_TOOLCHAIN_DIR not on LD
416d814bcc24 defconfig: Revert to default Simple LMK OOM timeout
38a43fb96a38 simple_lmk: React faster to kswapd reclaim events
d3a642ef2db6 HACK: sch_htb: Disable LTO
d6ef1ddc272a execprog: RCU barrier doesn't guarantee fd to be closed
efbf9ec43300 f2fs/rapid_gc: do not wait until all invalid blocks are discarded
69b0feee2e65 Merge branch 'caf-sdm710-sched'
58961a47612f sched/fair: fix compilation after commit 23c9d260f0b5
c6a747dbe2db sched: remove skip_sg
65c63203648f sched/fair: start_cpu() fix for rtg_target case
8096311922ac sched/fair: Improve the scheduler
ca8c4bd32599 sched/fair: Fix redundant load balancer reattempt due to LBF_ALL_PINNED
706d9154195f sched/fair: Allow idle local group to pull tasks from overloaded group
7eba3612016d sched/walt: improve the scheduler
6d0d37a3afe0 sched/walt: improve the scheduler
e6a80985f0b6 init: Bump performance profile boost frequencies
23c9d260f0b5 sched/fair: improve placement logic
a6ade5cc339f Revert "[iov_iter] new primitives - copy_from_iter_full() and friends"
bce23f25ac11 Revert "net: sch_generic: Remove unnecessary watchdog warning"
ffaf462e69d6 init: Update profiles for recent changes
lmkd-oom-reaper
c1f066ad532c signal: Activate OOM reaper when lmkd kills processes
d4ca2731832c defconfig: Revert to stock RCU CPU stall timeout
d0354a70bf3a defconfig: Bind offloaded RCU callback threads to the little cluster
8779aedc56fe rcu: Add support for binding offload threads to the little cluster
0c285828f903 kthread: Add API to create kthreads bound to low-power CPUs
f12e18a9ae1a cpu: Allow all little cluster CPUs to go offline
cbe90af27f38 defconfig: Enable single-queue writeback throttling
bd7e2193aaf6 FROMLIST: block: hook up writeback throttling
cc09b4db11bf defconfig: Enable forced IRQ threading
6a74fc726bfe genirq: Add Kconfig option to enforce threaded IRQs
8fdf9a18a2ec sched/walt: Reduce window size to 8 ms and load history to 64 ms
eaad3b084337 defconfig: Append git commit hash to kernel version
be62847978da signal: Accelerate lmkd task killing speed
d3b0280917e0 input: fpc: Kick boosts before notifying userspace on interrupt
a3766a0efdff hrtimer: Bump default timer slack to 500 us
11f6422adf3e Merge branch 'revert-simple-lmk'
c4ed245e2a48 Revert "simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android"
5387cbd177ff Revert "simple_lmk: Boost CPU and DDR bus when memory reclaim is invoked"
235e234aa689 Revert "simple_lmk: React faster to kswapd reclaim events"
cde37f1d86e7 Revert "simple_lmk: Only kick boost when the screen is on"
25c26f723d43 Revert "simple_lmk: Kill services before killing the launcher"
0fee6cccc1f4 Revert "simple_lmk: Improve victim selection and kill process"
0d28e5fd3a6f setlocalversion: don't check for uncommitted changes
db59981efd41 Revert "scripts: Don't append "+" to localversion"
574f3bd63f5b defconfig: Update to stable version v17
ebfef6d807a5 mm: allow __GFP_MOVABLE to use CMA memory
mainline-s6sy761
2a330c6a592d work
0376045355c9 driver core: add devm_device_add_group() and friends
708cd1ee726e Input: s6sy761 - update my e-mail
f0afdcd4f9b5 Input: s6sy671 - add SPDX identifier
69357acbd3a8 Input: add support for the Samsung S6SY761 touchscreen
4f5090620cf2 Merge branch 'tcp-tsq-shift'
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
ce1f3a498696 mm: ksm: Optimize defaults
*
master
1d6ae16858c0 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
ce006492a58a Revert "Revert "lib/int_sqrt: optimize initial value compute""
dcc06785fe9d Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
936b0132d503 Makefile: Use pipes rather than temporary files for intermediate steps
357d09d951ca Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
84cbbd078655 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
3a712d968a2a Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
b514921830f4 Merge tag '3c56365149a521eff6e1307c9e501489de990d4d'
b59585231782 Merge tag '5c6ab0f1664e50805167e0acd94a1f047bcd674a'
d1bfc2397fde msm: kgsl: Fix race condition while making page as dirty
fcc29003ba98 thermal: qpnp-adc: Update ADC_TM interrupt type
651eb9d68698 scsi: ufs: Only apply pm_qos to the CPU servicing UFS interrupts
f8b5cb2f34b3 iommu: msm: Fix race due to mapping and unmapping simultaneously
1ab82d43bbf2 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
7db739a8e71e Merge tag 'android-9.0.0_r0.93'
df333fb6a88a iommu: msm: Fix race when unmapping lazily
c147f982f4f1 fib_rules: Revert recent LTS changes
ccfe725f4839 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
3fa704fc4cd2 kbuild: remove redundant 'set -e' from cmd_* defines
4cf92c0ca1b4 kbuild: refactor if_changed
max-boost
3d3a0c6a7b05 defconfig: enable devfreq boost
53a024cda311 devfreq_boost: convert to simple max boost driver
a067c7d58e10 devfreq: Introduce devfreq boost driver
a451ca29291a defconfig: enable CPU input boost
f3d6082321c2 cpu_input_boost: convert to simple max boost driver
2908e8bb0777 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
705f3b6c4f34 cpu_input_boost: Simplify bitwise operations used to store boost state
dbf164cb2ba5 cpu_input_boost: Destroy workqueue on error path in init
2ec2f2fbfb9a cpu_input_boost: Fix and refactor max boost logic
343ef5094ab3 cpu_input_boost: Add API for boosting all CPUs to max frequency
4d44a25af7f2 cpu_input_boost: Introduce driver for event-based CPU boosting
aad5215574e0 init: add support for USB mass storage function
dd2c89e3ee1f helpers: add test-over-SSH helpers
a62e795fcd8f flasher: fix missing blank line
0e811a071b03 flasher: add tuned PowerHAL config
053257c77c47 Revert "qcacld: optimize configs"
74cedabb72c2 Merge branch 'slub-updates'
ef2b12eed329 Revert "slub: make ->inuse unsigned int"
a3322e442764 Revert "slub: make ->object_size unsigned int"
beb8e766e189 Revert "slub: make ->size unsigned int"
84f9ab3d902f defconfig: disable CONFIG_RANDOMIZE_BASE
614861bbe5f9 defconfig: disable SLUB debug checks
50baf9feb44e qcacld: optimize configs
eb5fc570882a slub: remove 'reserved' file from sysfs
7e5c406aa604 slub: remove kmem_cache->reserved
a2a4447e0a79 slab,slub: remove rcu_head size checks
476beb65d22e mm/slub: remove obsolete comment
ba0ae8b3fba6 slub: make size_from_object() return unsigned int
d0a378f838a8 slub: make slab_index() return unsigned int
96da3c57ac25 slub: make ->size unsigned int
48eb8f1777c5 slub: make ->object_size unsigned int
91cf721dbded slub: make ->inuse unsigned int
82ba084ad1b7 slub: make ->align unsigned int
e7ac3364a12c slub: make ->reserved unsigned int
678e89e50ffc slub: make ->remote_node_defrag_ratio unsigned int
mem-carveouts
91ddb8e0eb61 arm64: dts: sdm845: reduce reserved memory
400979cc188c dma-contiguous: log name, address, and size in case of alignment error
13c8787aada5 arm64: dts: s6e3ha8: disable DSC compression
c2b0f4361a8e Revert "locking: rwsem: spin faster"
33e109f1d3cc Revert "zram: allow zram to allocate CMA pages"
da8f66c43f05 Revert "Merge branch 'simple-lmk'"
f951df5e043b Revert "defconfig: disable memory compaction"
23f71f56f589 page_alloc: silence "PFNs busy" spam
ac08f773d385 Revert "random: strengthen input validation for RNDADDTOENTCNT"
2cc7f9c8c3f3 Revert "arm64: debug-monitors: disable self-hosted debug by default"
a84f8945ae59 defconfig: enable blu_schedutil cpufreq governor
d89ac8a3f0f4 Disable dm-verity and forward error correction
60cc6cb7a017 Revert "Merge branch 'revert-fsync-control'"
7e9630ece661 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
5470a3059196 defconfig: disable auditing support
8113dc1d9c21 Revert "defconfig: enable LD_DEAD_CODE_DATA_ELIMINATION"
4cd2a0568f3f Merge branch 'clear-linux-patches'
315ea290d3f2 locking: rwsem: spin faster
c8892fcfa66c ipv4/tcp: allow the memory tuning for tcp to go a little bigger than default
fe64b0f28e8f give rdrand some credit
d73b539ad98c Initialize ata before graphics
b8b5bc168796 pci pme wakeups
6b20da7f5f01 Increase the ext4 default commit age
fb75a329bc9b helpers: use sftp instead of scp for sktest
1a5d218f4c16 setup: clean up environment variables from clang script
3660673d0ff2 sec_ts: de-Samsungify
mitigate-mmap_sem
6d3c4640c924 mm: unmap VM_PFNMAP mappings with optimized path
e7594f3631b3 mm: unmap VM_HUGETLB mappings with optimized path
b615cc008309 mm: mmap: zap pages with read mmap_sem in munmap
e96f16d07a87 mm: call vm_munmap in munmap syscall instead of using open coded version
5ff004676b19 kernel: time: remove NO_HZ_FULL_SYSIDLE_SMALL dependency on NR_CPUS
1cd1f6940d0a defconfig: disable frontswap
fdac63144a64 defconfig: disable gcma stats accouting
f2ef40c6a4b1 gcma: make stats accounting configurable
ab5f6585051c gcma: make cleancache and frontswap completely optional
d6a40aedf6fc Revert "ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices"
48774e870254 Revert "EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4"
7d6fc4324a30 defconfig: enable per-UID stats and memory state stats
233af9e879f2 arm64/dts: sdm845: remove vbmeta
fc6c4880d763 Merge branch 'gcma'
7c01a9e7f01e defconfig: enable gcma and use as default over cma
95c259d270b2 cma: fix area initialization error path
b9ddca85d1e9 cma: use gcma for early reserved memory if default
bc119e4f6720 gcma: fix typos
b97cddff123a gcma: only force frontswap if swap is enabled
786991038e79 gcma: integrate gcma under cma interface
14bc081400d2 gcma: export statistical data on debugfs
b30bfc215024 gcma: adopt cleancache and frontswap as second-class clients
c4dc37a48422 gcma: utilize reserved memory as discardable memory
03bb6b72fe64 gcma: introduce contiguous memory allocator
deeaacbe8125 Revert "EXPERIMENTAL: defconfig: switch to 1000 Hz timer"
3a5b64eb1f7c Revert "helpers: reduce detail of build timestamp"
22a3e181ebf9 zen-iosched: fix misleading indentation warning
9d47fa792d08 selinux: avc: omit audit callbacks if disabled
fa0e367ba6e4 Merge branch 'debug-omits'
37d851b73a3e fs: ecryptfs: conditionally omit debugging
6f9c19b1be0b lib: conditionally omit debugging
dcf715c0fbfb staging: qcacld-3.0: conditionally omit debugging
bec9a2df5300 defconfig: increase vmstat interval to 20 seconds
mm-misc
807bf376ed01 mm: vmalloc: don't print lowmem information
32516a7f8f3f mm: cma: retry only on EBUSY
69273ec3b034 mm: Kconfig: Add support for config size of purging vmap_area
68209b6380a4 Merge branch 'spf'
ce9bf98b5140 defconfig: enable speculative page fault
6bfb66e67eaa mm: disable fault around on emulated access bit architecture
428a7279beb7 mm: make faultaround produce old ptes
7ee5cfef0147 Revert "mm: memory: reduce fault_around_bytes"
d644d89df68a arm64/mm: add speculative page fault
3063aeaeefa8 arm64/mm: define ARCH_SUPPORTS_SPECULATIVE_PAGE_FAULT
2c3ef0fc2b7d mm: add speculative page fault vmstats
944617a92364 mm: speculative page fault handler return VMA
9e01b88b3e32 mm: adding speculative page fault failure trace events
b87ad03df49e mm: provide speculative fault infrastructure
9a6b91130079 mm: protect mm_rb tree with a rwlock
bc8e541b8786 mm: introduce __page_add_new_anon_rmap()
6e608fa6ed57 mm: introduce __vm_normal_page()
7cd18d41dd15 mm: introduce __lru_cache_add_active_or_unevictable
f98a70f41c11 mm/migrate: Pass vm_fault pointer to migrate_misplaced_page()
ef820c3f46da mm: cache some VMA fields in the vm_fault structure
6e730d6f0f38 mm: protect SPF handler against anon_vma changes
e55cd279301b mm: protect mremap() against SPF handler
4cc259b725be mm: protect VMA modifications using VMA sequence count
6912b5b55198 mm: VMA sequence count
1bd7652db8c9 mm: introduce INIT_VMA()
ac75415d939b mm: make pte_unmap_same compatible with SPF
33ede21ab88d mm: introduce pte_spinlock for FAULT_FLAG_SPECULATIVE
6dea641dfc6e mm: prepare for FAULT_FLAG_SPECULATIVE
1d129972f370 mm: introduce CONFIG_SPECULATIVE_PAGE_FAULT
a81870d6ee32 helpers: reboot after flashing kernel in Android
f0f8ef60778c sched/walt: Fix the memory leak of idle task load pointers
fa42e5b43c9a overflow.h: Add allocation size calculation helpers
67e389097e91 Merge branch 'caf-ion'
9c3c6fc97849 ion: Ensure non-HLOS memory cannot be mapped by CPU
ce0d28cd14cd ion: Do not perform cache maintenance for secure buffer
da40c41b74b3 ion: Consider ion pool pages as indirectly reclaimable
bd8a4ea25269 Merge branch 'caf-kgsl'
c26eb0b01ad5 msm: kgsl: Increase the fenced write timeout
8cd28ac709ce msm: kgsl: Trigger preemption only if GMU is in ACTIVE state
37dd49aefd77 msm: kgsl: Add a property to find if secure context is supported
e5ad3bac709d msm: kgsl: Add a property to find alignment of secure buffers
6b9d35f66732 msm: kgsl: Limit log frequency in case of context count maxed out
a822bc5e3f40 msm: kgsl: Make sure gpu-speed-bin-vectors has the correct size
19737091ee8f msm: kgsl: Don't halt dispatcher if device is not in SUSPEND state
bf23deaa2791 msm: kgsl: Fix the missing IBs from the snapshot
106f81b2381a msm: kgsl: Keep a list of perfcounters per file descriptor
0cedc12d5b9f zram: allow zram to allocate CMA pages
c27fa7aeee45 msm: kgsl: Trigger GMU recovery on OOB set failures
90de7a02a922 cpufreq: Add CPUFREQ_STOP notification when cpu offline
6bc422e8a84c sched/rt.c: fix missing include for latest backport
7f4c48031d79 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
9aaa25270016 BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
fa63602453e0 ANDROID: Move schedtune en/dequeue before schedutil update triggers
84066a267d81 Merge branch 'overflow'
bf082dc705d0 overflow changes: fix some conflicts
e914212ed026 BACKPORT: treewide: Use array_size() in sock_kmalloc()
1374c07608bf BACKPORT: treewide: Use array_size() in vzalloc_node()
b16836bbdf83 BACKPORT: treewide: Use array_size() in vzalloc()
317db95bc657 BACKPORT: treewide: Use array_size() in vmalloc()
e21abae8044f BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
f1d3fc96c76e BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
c4afa56c426c BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
73b750af8e90 BACKPORT: treewide: kzalloc() -> kcalloc()
254d6fd87335 BACKPORT: treewide: kmalloc() -> kmalloc_array()
0de7be4b080f BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
d279f564fee5 BACKPORT: treewide: Use struct_size() for vmalloc()-family
e0aaccd27ec9 BACKPORT: treewide: Use struct_size() for kmalloc()-family
bd0f8edc3fb5 UPSTREAM: mm: Introduce kvcalloc()
b4881bf24d51 UPSTREAM: Convert v4l2 event to struct_size
3867fe0d7a1d UPSTREAM: Convert virtio_console to struct_size
e9acbf7db8d2 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
76265912b333 BACKPORT: mm: Use overflow helpers in kvmalloc()
d5e622d1e969 UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
ff2b61efa06b UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
1febfc7533cc UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
544a953f61ac UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
21058be9436f UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
6b9bd9bdad55 CHROMIUM: mm: Take kvmalloc_array() from upstream
4c9f7c2fb0b9 BACKPORT: mm: introduce kv[mz]alloc helpers
3d5617cb15ed f2fs: Remove duplicate k*alloc definitions
868010817629 diag: Featurize IPC logging
d5c1ef1bf3c0 defconfig: enable state notifier
a9b2d4b262d5 state_notifier: add a third case for boosting
ffa72dfd180f state_notifier: Check delayed work status before cancel
mm-spf
503fb6934f9a sched/rt.c: fix missing include for latest backport
c87b2a189ed4 sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes
bdab773807ee BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost
b555e2ab75b2 ANDROID: Move schedtune en/dequeue before schedutil update triggers
0116fa61c87a Merge branch 'overflow'
499c17a321b0 overflow changes: fix some conflicts
1516399848ab BACKPORT: treewide: Use array_size() in sock_kmalloc()
339ae11eaa33 BACKPORT: treewide: Use array_size() in vzalloc_node()
9c9a52b1a49e BACKPORT: treewide: Use array_size() in vzalloc()
969c355deb27 BACKPORT: treewide: Use array_size() in vmalloc()
f71890ffd000 BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
a4154311a159 BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
890e541b0852 BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
7f7af5555cf4 BACKPORT: treewide: kzalloc() -> kcalloc()
6052593ec9fd BACKPORT: treewide: kmalloc() -> kmalloc_array()
115fcf234a17 BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
0ccd15b2ae63 BACKPORT: treewide: Use struct_size() for vmalloc()-family
5fc7b60eb036 BACKPORT: treewide: Use struct_size() for kmalloc()-family
1d05ec3ff219 UPSTREAM: mm: Introduce kvcalloc()
c713ba5cdfc3 UPSTREAM: Convert v4l2 event to struct_size
0c6a73aaa96a UPSTREAM: Convert virtio_console to struct_size
51fadc5421a4 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
51737dea6daf BACKPORT: mm: Use overflow helpers in kvmalloc()
75d13b5f4c9a UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
a199de13c4df UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
86230c38a66a UPSTREAM: compiler.h: enable builtin overflow checkers and add fallback code
bf5cf91bf78b UPSTREAM: [media] v4l2-core: Use kvmalloc() for potentially big allocations
028c4a398964 UPSTREAM: [media] v4l2-async: Use kmalloc_array() in v4l2_async_notifier_unregister()
439ad57581d2 CHROMIUM: mm: Take kvmalloc_array() from upstream
807fb4a3dcd5 BACKPORT: mm: introduce kv[mz]alloc helpers
d9a9284b99a6 f2fs: Remove duplicate k*alloc definitions
0e6ff298f62d diag: Featurize IPC logging
8c58b707dbcf defconfig: enable state notifier
1025affbae13 state_notifier: add a third case for boosting
601fdbc41d09 state_notifier: Check delayed work status before cancel
d7ac66e1c8cf state_notifier: remove debug and enabled parameters
72d2993cac7b state_notifier: Remove internal enablement switch
90b31f92f238 state_notifier: Drop unneeded module_param_named entries
24eb5eabab9c msm: dsi: add direct HBM
a3d98c373002 wake_gestures: fixes and cleanup
a3cbfc5ae443 wcd934x: add sound control
0cdc838471f5 Merge branch 'stable-upstream'
8fe92a364b1c Merge tag 'v4.9.138' into stable-upstream
41ff7af506e0 defconfig: enable adreno idler
5484a1b73c59 adreno_idler: convert to state notifier
ec54e1677060 maple-iosched: convert to state notifier
e78c93181e8c Revert "maple-iosched: convert to use fb_notifier"
mm-updates
fde47f269bf6 mm: update mmu_gather range correctly
71d50a601e86 mm: improve struct page documentation
35fa9293292f mm: combine LRU and main union in struct page
2027f80920b8 mm: move lru union within struct page
b646d8d4c08f mm: combine first three unions in struct page
df421757e3af mm: move _refcount out of struct page union
a12a80a0f9c6 mm: move 'private' union within struct page
0d5ff77d4bbd mm: switch s_mem and slab_cache in struct page
a8ecdeddd8ac BACKPORT: mm: split page_type out from _mapcount
b56509e138e3 mm: introduce arg_lock to protect arg_start|end and env_start|end in mm_struct
791f5c392504 mm: document how to use struct page
2559ae52f23b mm: improve comment on page->mapping
324387cdf48d mm: update comments for struct page.mapping
6ad632cfe420 mm: fix MADV_[FREE|DONTNEED] TLB flush miss problem
cb50bf7ab0be mm: make tlb_flush_pending global
a18b33233c2d mm: refactor TLB gathering API
3e6315e04092 mm: migrate: fix barriers around tlb_flush_pending
dfd48b98c025 mm: migrate: prevent racy access to tlb_flush_pending
e22fe745c30b mm: clarify mm_struct.mm_{users,count} documentation
28392c58710e x86/mpx: Move bd_addr to mm_context_t
msm-thermal-simple
bef2b4e85e3e powerhint: Do not tamper with max CPU frequencies
c7dbfe7fbbcd cpufreq: Don't let userspace set max freq when using msm-thermal-simple
df6a9f1a6a18 defconfig: Switch to msm-thermal-simple for thermal throttling
943f7d7c8c41 ARM: dts: b1c1: Configure msm-thermal-simple
8cb0b8bd9db5 msm: thermal: simple: Introduce simple MSM thermal solution
096c4afdc60f cpu_input_boost: Fix negative frame boost timeout not applying
075872667cef Merge branch 'revert-wake-gestures'
a243ce64ee9a defconfig: Remove wake gestures option
248b0a1e5861 Revert "expose vibrator"
2108834564a6 Revert "cs40l2x: fix missing header for wake gestures"
0496c4f093f7 Revert "wake_gestures: sweep2wake, doubletap2wake & sweep2sleep for b1c1"
d5a46ed8ccdc Revert "wake_gestures: fixes and cleanup"
2181563cf0bb Revert "wake_gestures: use correct resolution for blueline"
55d43623118c Revert "wake_gestures: disable vibrate-on-wake by default"
354f0006f5b6 state_notifier: Clean up display state notifier
6e2e91bac77e defconfig: Switch to userspace lmkd
be5d2a14900c Merge branch 'arm64-lib-optimize'
99050d870a3c arm64: Use optimized memcmp
1d21446cae99 arm64: strcmp: align to 64B cache line
db6a9f725ba8 Revert "arm64: strcmp: Align to cache and preload"
58cfd4a16552 FROMGIT: arm64: export tishift functions to modules
1a5d923a6af6 Merge commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
bf28aef43692 Merge commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
net-cake
0f5b371d1b94 netns: fix extra endif
fb612c5769b9 netfilter: merge ctinfo into nfct pointer storage area
d1df04ce8568 netfilter: add and use nf_ct_set helper
91cfe32201c0 netfilter: reset netfilter state when duplicating packet
e7ed014bb3f3 netfilter: conntrack: no need to pass ctinfo to error handler
f0be379ba34c netfilter: merge udp and udplite conntrack helpers
7c6363bd4692 netfilter: conntrack: validate SCTP crc32c in PREROUTING
49725668bd1f netfilter: reduce direct skb->nfct usage
56218fd8f25f skbuff: add and use skb_nfct helper
4cdc2137d06b netfilter: nft_ct: add notrack support
1809b1517077 netfilter: guarantee 8 byte minalign for template addresses
eebd4bac3dd1 net: sched: make CAKE an option for default qdisc
31ca3c30a147 sch_cake: Fix TC filter flow override and expand it to hosts as well
2c3af50c91bf sch_cake: Remove unused including <linux/version.h>
45ec8805fa2d sch_cake: Make gso-splitting configurable from userspace
7c4924794751 sch_cake: Fix tin order when set through skb->priority
19032287eb3c sch_cake: Conditionally split GSO segments
9787470ff231 sch_cake: Add overhead compensation support to the rate shaper
ac168287d08c sch_cake: Add DiffServ handling
91d28c3a1ed8 sch_cake: Add NAT awareness to packet classifier
net-cake-2017
97e15a1bbe84 defconfig: disable cake
0e7cb243683b net: allow selecting cake as default qdisc
89c0eafdcb72 FROMLIST: Add support for building the new cake qdisc
139ea1f37fd9 BACKPORT: Add Common Applications Kept Enhanced (cake) qdisc
26f96d4e2db2 FROMLIST: pkt_sched.h: add support for sch_cake API
44d830fa4724 lowmemorykiller: remove all boosting
f983c017966e Merge branch 'general-boost'
8a7dd447f2e2 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into general-boost
20b0e13aee3b Revert "STOPSHIP: defconfig: enable CPU and devfreq boost debug"
c85f1144dbde lowmemorykiller: kick general CPU boost on scan
a679cde3c72a defconfig: enable and configure general CPU boost
f2f8d5c3d077 drm/msm: sde: use general boost for frame commits
20a592750069 cpu_input_boost: add API for general CPU boosting
fe23e9bbdc6a defconfig: reduce wake boost duration to 250 ms
8ed6dd7eb6c1 EXPERIMENTAL: defconfig: disable zRAM, swap, Zstd, LZ4
a32188e9a933 kernel: don't boost CPUs on app launch when suspended
2c90a8ce41aa devfreq_boost: Replace all instances of fb_notif with msm_drm_notif
009f5012147a devfreq_boost: Convert to msm_drm_notifier
26bfb7af4191 cpu_input_boost: Replace all instances of fb_notif with msm_drm_notif
9aaa61161eee cpu_input_boost: Convert to msm_drm_notifier
7cf0ba294b4a Revert "fpc1020: boost CPUs for wakeup if display is off"
9ea3aecaba02 Revert "lowmemorykiller: boost CPU when scanning and killing processes"
9b419668a97d Revert "mm: compaction: boost CPU and DDR bus during background compaction"
5beeb8cce45f STOPSHIP: defconfig: enable CPU and devfreq boost debug
501bc11b1fbe Add optional debugging for cpu_input_boost and devfreq_boost
7ca1f0eb5421 defconfig: use flat memory model
nohz-full-bench
7aacac0c1a1b Revert "defconfig: enable Yama security"
992c26671742 Revert "kernel: Fix cpufreq times memory leaks"
ebb986baeab9 msm: msm_bus: Fix boot-time logging
ceff25173bb0 Revert "sched: Avoid placing task on isolated prev_cpu"
c52decf5a9aa Revert "sched/fair: Force balancing on NOHZ balance if local group has capacity"
96dac77bcee7 Revert "Revert "sched: Remove sched_ktime_clock()""
00586a9deb15 Revert "sched: walt: Add BUG_ON() when wallclock goes backwards"
c757c8274dd1 Revert "sched: walt: use_cycle_counter check before rq lock held"
a4f5453737b4 Revert "sched: energy: rebuild sched_domains with actual capacities"
e9f1d725a19c Revert "sched/fair: dont run energy calculation unless necessary"
5a606cf58013 Revert "sched: Fix lockdep warning for rq locks"
c2198a677af8 Revert "sched: rt: Use RCU lock in rt task cpu select path"
e316b7358d3e Revert "sched/fair: Improve no-hz idle balance kicking in misfit task scenario"
360e9cfe77f4 arm64/dts: b1c1: Remove unnecessary reserved memory regions
5387b5070141 defconfig: Include all kernel symbols in the image
895d5516828d Revert "misc: cs40l2x: Promote vibration start work to SCHED_FIFO"
0df513e18d8a defconfig: Enable KASLR for security
2771e9ae2887 Revert "defconfig: use flat memory model"
dab7fc90fca4 Merge branch 'cleanup2'
5de5ef85cd96 Revert "Merge branch 'debug-omits'"
b542ab16c383 arm64: Remove I-cache invalidation from flush_cache_range()
8cd7428444e7 Revert "Merge branch '4.10-genirq'"
58974c174824 Revert "Merge branch '4.10-rcu'"
9c44a5c89204 Revert "Merge branch 'slub-updates'"
c4ab906ec0ba Revert "Merge branch '4.10-sched'"
ef35634c8185 Revert "binfmt_elf.c: use get_random_int() to fix entropy depleting"
b2c2473f6605 Revert "AIO: Don't plug the I/O queue in do_io_submit()"
4bbc0042df7e Revert "EXPERIMENTAL: defconfig: Disable seccomp filter"
old
981661c7dc3c f2fs: Simplify rapid GC worker control flow
9ba13c0fe13f f2fs: Simplify rapid GC display state notifier
06920f48a1dd defconfig: Bump little CPU cluster minimum frequency to 576 MHz
1cd6f5d3138d soc: qcom: watchdog_v2: Fix missing new lines after watchdog bite
dacaf75c4007 msm: ipa3: Fix memleak issue for IPv6 NAt and IPA CT device
cc4c673a0667 msm:ipa: Fix memleak issue
b1e143250bb7 msm:ipa: Fix memleak issue
974029c5b405 Revert "msm: ipa3: Fix memory leak in ipa3_nat_ipv6ct_init_devices"
22b28b8d9974 string: Use faster alternatives when constant arguments are used
14715401ba35 exec: Remove convoluted memcmp optimization in write block filter
02a3f70d8f21 exec: Do not use atomics for tracking zygote and lmkd
a722df2061da cgroup: Test for top-app with strcmp instead of memcmp
a3ba78bd01c1 touchscreen: sec_ts: Fix horrible strncat usage
8a4062f063c8 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
6b70e55aadc4 BACKPORT: init/main.c: extract early boot entropy from the passed cmdline
5955cc66dca0 clang-format: Update .clang-format with the latest for_each macro list
709fbbe854b1 clang-format: Set IndentWrappedFunctionNames false
d254f859d9ec clang-format: add configuration file
840954764200 devfreq_boost: Convert to global display state tracker
b5e3f9e54878 cpu_input_boost: Convert to global display state tracker
oom-reaper
afe34af9298e lowmemorykiller: enable oom reaper
6781c343a06a defconfig: enable input boost and devfreq boost
cead983d552a kernel: boost Lawnchair v2 when becoming top-app
7cad4b7a2d80 kernel: Increase Pixel launcher top-app boost duration to 1000 ms
f7a8c3c2f1c8 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
bb909336b72c cpu_input_boost: Simplify bitwise operations used to store boost state
cdff042e64c0 kernel: Boost CPU to the max when Pixel launcher becomes a top app
c53a1b37ce7d devfreq: Introduce devfreq boost driver
a367652187d8 msm: performance: prevent the driver from handling userspace boosts
405c0336b3d3 cpu_input_boost: expose input freqs and duration to userspace
5d127ebe0321 cpu_input_boost: Destroy workqueue on error path in init
9b6f659c4cf1 cpu_input_boost: Fix and refactor max boost logic
0306bf4cba7d kernel: Boost all CPUs to the max when userspace launches an app
3acda3225849 cpu_input_boost: Add API for boosting all CPUs to max frequency
e624c0ddd172 cpufreq: Kill userspace CPU boosting entirely
857f7159e499 drm: msm: sde: Boost CPU when a new frame is ready to be committed
ef30384aabea cpu_input_boost: Introduce driver for event-based CPU boosting
f4ba79080efd zram: revise default allocator config option
ca03925f40c4 ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices
7cd30a3a75e5 defconfig: enable zpool
op6-lmk
8e3ce6c1db45 staging: android: import OnePlus 6 adj_chain driver
09f7a4f3797d lowmemorykiller: reduce debug level
bcabf6b17ec1 lowmemorykiller: remove selftest mechanism
83e9679776ee lowmemorykiller: synchronize code for OnePlus 6T OxygenOS 9.0.4
3c131a6e6dee lowmemorykiller: synchronize code for OP6 OxygenOS 9.0
69899cb6d048 lowmemorykiller: add a knob to turn on/off the feature
da8f66c43f05 Revert "Merge branch 'simple-lmk'"
f951df5e043b Revert "defconfig: disable memory compaction"
23f71f56f589 page_alloc: silence "PFNs busy" spam
ac08f773d385 Revert "random: strengthen input validation for RNDADDTOENTCNT"
2cc7f9c8c3f3 Revert "arm64: debug-monitors: disable self-hosted debug by default"
a84f8945ae59 defconfig: enable blu_schedutil cpufreq governor
d89ac8a3f0f4 Disable dm-verity and forward error correction
60cc6cb7a017 Revert "Merge branch 'revert-fsync-control'"
7e9630ece661 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
5470a3059196 defconfig: disable auditing support
8113dc1d9c21 Revert "defconfig: enable LD_DEAD_CODE_DATA_ELIMINATION"
4cd2a0568f3f Merge branch 'clear-linux-patches'
315ea290d3f2 locking: rwsem: spin faster
c8892fcfa66c ipv4/tcp: allow the memory tuning for tcp to go a little bigger than default
fe64b0f28e8f give rdrand some credit
d73b539ad98c Initialize ata before graphics
b8b5bc168796 pci pme wakeups
6b20da7f5f01 Increase the ext4 default commit age
fb75a329bc9b helpers: use sftp instead of scp for sktest
1a5d218f4c16 setup: clean up environment variables from clang script
op6-rz-sched
4bb1fa9f6966 sched: Check out to RenderZenith OP6 kernel
dc5adc16bb56 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
35c4e2f5c254 defconfig: Update timer frequency options
f7c32eb41ac1 sched: walt: Update 300 Hz check for variable frequencies
fd5c6e45011c kernel: Allow arbitrary timer frequency values
5c3c7c28e048 kernel: Make timer frequency options conform to code style
823cda63cc19 kernel: Revert to 250 Hz as the default timer frequency
654e7d49d420 Revert "init: Disable panicking on oops"
bb83b7168eda defconfig: Switch to fq_codel qdisc
161d1e80bf78 defconfig: Switch to 400 Hz timer frequency
1664122ebea7 defconfig: Sync for cleanup
a66cf850dca4 kernel: Add 400 Hz timer frequency option
2c83d95577c5 ARM: dts: b1c1: Power off panel and PHY during suspend
490c6a84fdc1 Merge branch 'cleanup'
2d8067169cc9 Revert "uapi: Export sockaddr_storage for userspace"
fb8b1c50ac90 Revert "fs/sync: add blocking variant of sync() to be called within the kernel"
9b4fa98b091a Revert "mdss: rotator: Use FIFO kthread for rotator work"
3c7787514867 Revert "msm_serial_hs: actually check if msm_serial_hs_tx_work failed to init"
e710ebcbe25d Revert "qpnp-fg: adjust percentage calculation formula"
355cc8877223 Revert "sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q"
eb355408a110 Revert "cpufreq: stats: New sysfs attribute for clearing statistics"
a44619755fc5 Revert "mm, slab: faster active and free stats"
aff1b00afb1f Revert "EXPERIMENTAL: defconfig: enable IFB"
ed5ebfdf2689 Revert "Merge branch 'sysfs-devicetree-config'"
4a60ae0005c7 Revert "debloat: add some debloat patches, strip down procfs and make O_DIRECT support optional, saves ~15K after lzma on MIPS"
6b2cd04dd366 Revert "debloat: procfs"
0c6b14f35a19 Revert "debloat: dmabuf"
354d09a01d60 Revert "mm: keep zoneinfo when stripped procfs is enabled"
db3e4d5f2477 Revert "Add an OSX specific patch to make the kernel be compiled"
95e0bce223ce Revert "kernel: fix linux 4.9 host tools portability issues"
99344a3c3c2b Revert "linux-3.6: fix portability of some includes files in tools/ used on the host"
46c67ff5589e Revert "kernel: fix linux/spi/spidev.h portability issues with musl"
63337d515019 Revert "disable -Wattribute-alias warning for SYSCALL_DEFINEx()"
4737977eb130 Revert "Add optional debugging for cpu_input_boost and devfreq_boost"
7241daa8c404 Revert "Merge branch 'frandom'"
ba3c63defadb Revert "arm64: dts: sdm845: disable MSM compute FastRPC 10"
730ec5b5dfb5 Revert "Increase the ext4 default commit age"
2d4028f2bb8b Revert "pci pme wakeups"
f1b256b731e8 Revert "arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default"
d1328f700df1 Revert "ARM: enable vmalloc saving"
93da751af19f Revert "drivers: i2c: Fix direct reference to HZ"
f64c2e34ffed Revert "arm64: allow disabling hardware CPU debugging support"
87628e59bd02 Revert "power: reduce process freeze timeout"
47375b360050 Revert "net: add config options for busy_poll and busy_read"
3da5cb666084 Revert "arm64: determine stack entropy based on mmap entropy"
59fb3f06524e Revert "arm64: move ET_DYN base lower in the address space"
ea2a37ad4203 Revert "randomize lower bits of the argument block"
419aeb3267dd Revert "msm: Use interruptible wait to not affect load average"
a600a3e17138 Revert "disable crc check"
07874dab5a54 Revert "add specialized MAC randomization for qcacld-3.0"
abf571d867c6 Revert "qcacld-3.0: disable mac randomization by default"
c7747778941a Revert "tcp: introduce tcp_jiffies32"
64fec1fc956a Revert "tcp_westwood: use tcp_jiffies32 instead of tcp_time_stamp"
02c7c6641efd Revert "tcp_bbr: use tcp_jiffies32 instead of tcp_time_stamp"
1b4a0b704c82 Revert "Merge branch 'tcp-jiffies32'"
699a67760501 Revert "msm: mdss: Power on display asynchronously as early as possible"
f7c892bc5e4a Revert "msm: mdss: Mark display-wake kthread as performance critical"
7f596d5962b3 Revert "genetlink: no longer support using static family IDs"
c3c2e4904d02 Revert "genetlink: statically initialize families"
918fba0496d6 Revert "genetlink: mark families as __ro_after_init"
9f20c4a76e27 Revert "arm64: Use optimized memcmp"
df51e065439a Revert "arm64/dts: b1c1: reduce debug/dump reserved memory regions"
e315ec9f3fe4 Revert "mm: slub: Default slub_max_order to 0"
b65f864c7def ARM: dts: b1c1: Remove PHY power-off property from panels
956cb3e946c3 Revert "sched: add smurfutil flex pixelized variant"
744fa4a9632b Revert "cpufreq: smurfutil: clean and rename"
0b057a810ba4 Revert "HACK: sched: make smurfutil build"
7cb4e6df5291 ANDROID: sched/fair: Don't balance misfits if it would overload local group
10a27c519fbe ANDROID: sched/fair: Attempt to improve throughput for asym cap systems
a96003430a59 EXPERIMENTAL: defconfig: Disable seccomp filter
44e4a682f22c Merge tag '467d45e50f8f176427b97d1c91785a594a438a02'
493176cfafcf helpers: Don't touch flasher tree
4558b294f456 Revert "cpu_input_boost: Rework scheduling setup"
osm-dump
fd1532f357af clk-cpu-osm: log details of all entries
3867c395bc4f power: silence constant logging during charging
4610c7aaa83b Merge branch 'zram-z3fold'
3949cbc80fc0 defconfig: use z3fold for zram, disable zsmalloc
6da0e4fc71fb zram: use octal permissions
4522b6cc97e5 zram: Add compile-time support for choosing default allocator
958458beb507 zsmalloc: Add compaction callbacks
68f04cad810d zpool: add compaction api
e3580e631c8c zram: use common zpool interface
0492ebebb9bd z3fold: Don't fail on zRAM allocation requests
f891205d2825 FROMLIST: z3fold: fix wrong handling of headless pages
fcc045503da4 zram: set physical queue limits to avoid array out of bounds accesses
3bcbd74458f5 staging: zram: Rate limit memory allocation errors
2862e86c6a43 Merge branches 'upstream-stable' and 'caf-mem-leaks'
1faaa1e82892 ANDROID: sched/debug: Make Energy Model read-only
a6dab4811253 net: memset smsg to avoid the padding data
84f526a7b285 net: sockev: fix uninitialized data leak into userspace
69fa264d5f2c net: core: null pointer derefernce in sockev_client_cb
e20e9aff4430 cnss_prealloc: Remove excessive warnings in cnss_prealloc driver
ede6fd6e8fa7 f_qc_rndis: Call rndis_ipa_init() from rndis_qc_bind()
54f61cb32918 dwc3-msm: Add delay between consecutive register reads in while loop
bd2d40b5f1e5 soc: qcom: secure_buffer: Fix the parameter passing to dmac_flush_range
f3e34b846b76 drm/msm/dsi-staging: fix potential out of bounds memory accesses
6f91638a14f2 ASoC: Fix UBSAN warning at snd_soc_get/put_volsw_sx()
329953ae9e4c wcnss: Fix buffer overflow in wcnss_prealloc_get
b718c6946937 msm:ipa: Fix memleak issue
486860a8b744 msm: camera: Fix for Possible information leak issue
e0bc7198fc1d cnss_prealloc: Update prealloc memory table
de6ff938496f arm: mm: let CONFIG_VMALLOC_SAVING increase vmalloc by default
645dfa15b137 qseecom: Increase the scattered entry buffer size
0ee144fdee59 ARM: enable vmalloc saving
479f43d8de7c msm: vidc: do not set video state to DEINIT very early
f9492b0c74cd msm: vidc: ignore processing responses in invalid state
e4e871903232 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into upstream-stable
d3f53b32471c mm: swap: don't delay swap free for fast swap devices
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
152b1975be1b tick: Don't clear idle and iowait sums on CPU down
b480730bdf0b drivers: i2c: Fix direct reference to HZ
ddd30747bf49 selinux: don't require auditing
d13c2b34e989 defconfig: disable twofish and bluetooth debugfs
09b0680c9fc6 defconfig: enable debug monitors
d1ca4719a120 defconfig: disable vmstat event counters
7ec240501deb arm64: allow disabling hardware CPU debugging support
overflow
499c17a321b0 overflow changes: fix some conflicts
1516399848ab BACKPORT: treewide: Use array_size() in sock_kmalloc()
339ae11eaa33 BACKPORT: treewide: Use array_size() in vzalloc_node()
9c9a52b1a49e BACKPORT: treewide: Use array_size() in vzalloc()
969c355deb27 BACKPORT: treewide: Use array_size() in vmalloc()
f71890ffd000 BACKPORT: treewide: devm_kzalloc() -> devm_kcalloc()
a4154311a159 BACKPORT: treewide: devm_kmalloc() -> devm_kmalloc_array()
890e541b0852 BACKPORT: treewide: kzalloc_node() -> kcalloc_node()
7f7af5555cf4 BACKPORT: treewide: kzalloc() -> kcalloc()
6052593ec9fd BACKPORT: treewide: kmalloc() -> kmalloc_array()
115fcf234a17 BACKPORT: treewide: Use struct_size() for devm_kmalloc() and friends
0ccd15b2ae63 BACKPORT: treewide: Use struct_size() for vmalloc()-family
5fc7b60eb036 BACKPORT: treewide: Use struct_size() for kmalloc()-family
1d05ec3ff219 UPSTREAM: mm: Introduce kvcalloc()
c713ba5cdfc3 UPSTREAM: Convert v4l2 event to struct_size
0c6a73aaa96a UPSTREAM: Convert virtio_console to struct_size
51fadc5421a4 UPSTREAM: device: Use overflow helpers for devm_kmalloc()
51737dea6daf BACKPORT: mm: Use overflow helpers in kvmalloc()
75d13b5f4c9a UPSTREAM: mm: Use overflow helpers in kmalloc_array*()
a199de13c4df UPSTREAM: include/linux/slab.h: add kmalloc_array_node() and kcalloc_node()
pm-4.17
ffed36cda5f6 BACKPORT: Merge branches 'pm-cpuidle' and 'pm-qos'
6b1292a00bfe hrtimer: Factor out __hrtimer_next_event_base()
fceb09ebc04a defconfig: diable blu_schedutil cpufreq governor
039a6da0827f Revert "Merge branch 'revert-html5-sony-sched'"
7ad3a58095f8 Merge branch 'revert-adrenoboost'
9db40aa1506b Revert "gpu: devfreq: adrenoboost v2.2"
e04844bd5e5c Revert "adrenoboost: disable by default"
78fb9a503333 sched: features: disable gentle fair sleepers
e8d3c8b22639 cfq: Annotate fall-through in a switch statement
1ae9963d71d0 block/cfq: cache rightmost rb_node
eccdf4728cba block/cfq: replace cfq_rb_root leftmost caching
e1c7c85d0168 helpers: tweak date format for packed version
51ad07106cc9 flasher: customize output when running under Android
84c085ce386e flasher: add support for running flasher in Android
2894d2103287 flasher: use TMPDIR environment variable instead of hardcoded path
1ea2bc7fb64c helpers: fix release builds
59122e81780f Merge tag 'ae72f73787af9b83c2c20bd5790f352784c1119d'
2a706743556e Merge tag '6b28c94006fe6c4053fe43981b511961be52df19'
45bced568da0 helpers: update subtrees to tag provided as argument
0ed0c1643575 b1c1-stock_defconfig: remove comments and whitespace
d646dcf07da9 EXPERIMENTAL: dts: pmi8998: use fully analog display dimming
abcd0b99fae2 defconfig: don't autoselect V4L2 drivers
post-r10
5bc7a458296f mm: keep zoneinfo when stripped procfs is enabled
b9ededd127b3 EXPERIMENTAL: defconfig: use userspace lmkd
577ed6b055fe defconfig: release version 10
afe418429aef Revert "defconfig: fully disable dm-verity"
3e72b80e5cd4 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
dc66cb21c296 Revert "EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)"
b75582318297 EXPERIMENTAL: defconfig: use userspace lmkd
8d896f6050ba block: reduce default nr_requests to 32
b0c3bbac1b16 Merge branch 'freak07-caf'
20edb7e7876d BACKPORT, FROMGIT: dm verity: log the hash algorithm implementation
3f08c796c06b BACKPORT, FROMGIT: dm crypt: log the encryption algorithm implementation
a656017033c5 drm/msm/sde: Avoid same work queue to multiple workers
6bd3d2484fe3 drm/msm/dsi-staging: fix memory leak issue in get modes call
55403bc86b67 Revert "drm/msm: dsi-staging: avoid reinitializing display modes"
4d1b5d3c713d drm/msm/sde: Change log level from error to warn
1b178d6fceb4 drm/msm: avoid memory allocation when sg table is imported
5a01c404b9d6 drm/msm/dsi-staging: Free memory to prevent memleak
da9c403c6a5e drm/msm/dsi-staging: alter length to avoid stepping out of bounds
1c12a9656b98 drm/msm/sde: Fix race condition between enable/disable hist irq
4d5abe51821b drm/msm/dp: fix error checking for memory allocations
f0f19d5a9f3c drm/msm/dsi-staging: update DSI phy T_TA_GO duration
1bba3fcfbd1a drm/msm/dsi-staging: set correct flags for MAX_RETURN_PACKET command
74ca83f76e0a drm: msm: sde: fix decimation validation in plane atomic_check
28eb0700d674 drm/msm: suppress display platform drivers bind/unbind feature
a122c655290b drm/msm/dsi-staging: fix mem leak issue in ESD debugfs
f47c7ca09974 drm/msm/sde: avoid lock while dumping fence status
f018f88fe17e drm/msm/sde: Fix deadlock due to input handler
03cd4c426a4f drm/msm/dsi-staging: set correct state for status check command
6f3ff5bb3da1 drm/msm/sde: prevent clearing multirect flags during validate failure
85f0e57a479c drm/msm/dsi-staging: tie up dsi irq control to core clock
031959e092e3 msm:ipa: Fix memleak issue
947de6b9c100 Revert "dst: Use after free in __dst_destroy_metrics_generic"
49070595cb84 ion: Do not do allocation if the size exceeding heap remaining
273ee2c131cc ion: correct the behaviour when allocating non-contig regions failed
593e3c9fe337 ion: fix the return value of shrinkers
e0ec15cfd15a usb: dwc3-msm: Fix memory leak of dwc3 child device
a6018983a63b usb: pd: Fix memory leak in usbpd_create()
25ff62ae729f ARM: dts: msm: Remove Out-Of-Bound access
c4802222b7ce Revert "BACKPORT, FROMGIT: crypto: speck - add support for the Speck block cipher"
aa9ab1df7574 Revert "FROMGIT: crypto: speck - export common helpers"
504322ce3ce9 Revert "BACKPORT, FROMGIT: crypto: speck - add test vectors for Speck128-XTS"
dcddc6777a29 Revert "BACKPORT, FROMGIT: crypto: speck - add test vectors for Speck64-XTS"
d887b3623be6 UPSTREAM: dm crypt: don't decrease device limits
a3f0d4369f25 BACKPORT: dm crypt: allow unaligned bv_offset
3016b9bce9c5 BACKPORT: dm crypt: reject sector_size feature if device length is not aligned to it
2960f7684126 BACKPORT: dm crypt: use shifts instead of sector_div
98638b19eb5d BACKPORT: dm crypt: optionally support larger encryption sector size
b1a0ab4b4690 defconfig: release version v9
db9ee71db660 writeback: tune dirty ratios
2c8a627abc94 arm64: debug: disable self-hosted debug by default
2ce173c28a31 block: loop: set non-rotational queue flag
eed783a2c0e2 defconfig: reduce loop block devices
a781f5fb3651 zram: fix typo in comment
b70a18593fbb Revert "block: set rq_affinity for multithreaded I/O requests"
7eadf58ac579 defconfig: bump input boost duration to 80 ms
f03a8a3206e7 init: tune boost durations
9572dfe57207 mm, page_alloc: double zone's batchsize
2b7bdf5cbfe8 editorconfig: fix setup and helper script indentation
pre-rebase
bb61552f9030 arm64: dts: s6e3ha8/sw43408: enable ULPS during usage and suspend
ff0b275d9d91 arm64: dts: sw43408: allow PHY poweroff
f6267c053a00 arm64: dts: s6e3ha8: allow PHY poweroff
319d292433f9 helpers: add helper to update all subtrees
0ef9e9bdaa34 defconfig: enable NEON-accelerated ChaCha20 algorithm
7dd42c41f0bc random: always use non-blocking pool
dc64b1f27d09 lib/lz4: statically allocate constant tables
498b185c5cb7 selinux: just shut up
a7f47d96c850 crypto: arm64/chacha20 - implement NEON version based on SSE3 code
80d3c5ea4f4f defconfig: enable simple GPU algorithm
2921c9a5565c rbtree: cache leftmost node internally
458458a6acfc mm/page_alloc: don't reserve ZONE_HIGHMEM for ZONE_MOVABLE request
e0ad72554605 net: add config options for busy_poll and busy_read
c2efa8ac3007 mm: swap: swap pages one at a time
38d13da7f859 enable protected_{symlinks,hardlinks} by default
417741ddf8df randomize lower bits of the argument block
d61ba5c59f89 arm64: move ET_DYN base lower in the address space
db693cb260a7 arm64: determine stack entropy based on mmap entropy
e6c2034ccf56 mark most percpu globals as __ro_after_init
54b465b584e6 mark protection_map as __ro_after_init
procfs-backports
025aa6a277bd proc: Consolidate task->comm formatting into proc_task_name()
2f95dee0f1c9 proc: Don't allow empty /proc/PID/cmdline for user tasks
3ec4464374b1 proc: reject "." and ".." as filenames
8b032960d15c proc: do mmput ASAP for /proc/*/map_files
46f37307cb9c proc: faster /proc/cmdline
7450fb327e5c proc: register filesystem last
884e658297a4 proc: fix /proc/*/map_files lookup some more
5f666b6d073e fs/proc/proc_sysctl.c: remove redundant link check in proc_sys_link_fill_cache()
f7dcb1ff8a11 proc: use set_puts() at /proc/*/wchan
a220856ad48f proc: check permissions earlier for /proc/*/wchan
45050880c600 proc: replace seq_printf by seq_put_smth to speed up /proc/pid/status
1ef767e7a5ab proc: optimize single-symbol delimiters to spead up seq_put_decimal_ull
98fe45cff521 proc: replace seq_printf on seq_putc to speed up /proc/pid/smaps
1969c2b4610a proc: add seq_put_decimal_ull_width to speed up /proc/pid/smaps
90277016400c proc: show MADV_FREE pages info in smaps
6c184f21bcb3 fs/proc/task_mmu.c: do not show VmExe bigger than total executable virtual memory
ecf2e5b64dce mm: consolidate page table accounting
dc9cea6bc916 mm: introduce wrappers to access mm->nr_ptes
7de1a58afc4f mm: account pud page tables
b048336a3043 proc: account "struct pde_opener"
q-dp1
2992926c2f29 defconfig update
bb5f6bb218d2 more fix
1744c0a87249 fixes
392ef505a197 Merge remote-tracking branch 'als/android-msm-bluecross-4.9-q-preview'
981661c7dc3c f2fs: Simplify rapid GC worker control flow
9ba13c0fe13f f2fs: Simplify rapid GC display state notifier
06920f48a1dd defconfig: Bump little CPU cluster minimum frequency to 576 MHz
1cd6f5d3138d soc: qcom: watchdog_v2: Fix missing new lines after watchdog bite
dacaf75c4007 msm: ipa3: Fix memleak issue for IPv6 NAt and IPA CT device
cc4c673a0667 msm:ipa: Fix memleak issue
b1e143250bb7 msm:ipa: Fix memleak issue
974029c5b405 Revert "msm: ipa3: Fix memory leak in ipa3_nat_ipv6ct_init_devices"
22b28b8d9974 string: Use faster alternatives when constant arguments are used
14715401ba35 exec: Remove convoluted memcmp optimization in write block filter
02a3f70d8f21 exec: Do not use atomics for tracking zygote and lmkd
a722df2061da cgroup: Test for top-app with strcmp instead of memcmp
a3ba78bd01c1 touchscreen: sec_ts: Fix horrible strncat usage
8a4062f063c8 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
6b70e55aadc4 BACKPORT: init/main.c: extract early boot entropy from the passed cmdline
5955cc66dca0 clang-format: Update .clang-format with the latest for_each macro list
qc4
c4cff13268d3 Revert "power: supply: qcom: add support to control hvdcp3 detection dynamically"
d40452b66b76 Revert "power: qpnp-smb2: modify usb CURRENT_MAX to get the max current setting"
c78e38e130b7 Revert "power: smb-lib: don't disable PD to wait hvdcp detection timeout"
2f1328e1594c Revert "smb-lib: Put back the hvdcp_timeout"
51e8fec9f329 arm64: kconfig: Ensure spinlock fastpaths are inlined if !PREEMPT
2a647457e327 defconfig: enable qspinlocks
9da105679c9e Merge branch '4.19-arm64-qspinlock'
7568e27c729a arm64: barrier: Implement smp_cond_load_relaxed
63fc5da66064 locking/barriers: Introduce smp_cond_load_relaxed() and atomic_cond_read_relaxed()
094ef701beef locking/qspinlock: Elide back-to-back RELEASE operations with smp_wmb()
e655209c5b31 locking/qspinlock: Use smp_cond_load_relaxed() to wait for next node
b4bc5086e182 BACKPORT: arm64: locking: Replace ticket lock implementation with qspinlock
45ff2c431d77 locking/spinlocks/arm64: Remove smp_mb() from arch_spin_is_locked()
ebcc184903be locking/arch: Remove dummy arch_{read,spin,write}_lock_flags() implementations
d0e8e067f451 locking/arch: Remove dummy arch_{read,spin,write}_relax() implementations
fd2b8fb32dfe arch: Remove spin_unlock_wait() arch-specific definitions
4439d80bc470 tcp: fastopen: support TCP fast open on all listeners
8a538f19c307 tcp: fastopen: enable support for TCP fast open on listeners
1208d8e08fb4 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
3f181649e7d8 sch_cake: enable TCP ACK filter by default
699f6cc39503 cpu_input_boost: make wq unbound
455dd6990518 dmaengine: fix memleak
3ede99e65074 net: ipc_router_core: fix memleak with IPC_LOGGING disabled
e96864a3ea0d cpu_input_boost: avoid boosting big cluster when load is low
c3404d3a2f21 Revert "defconfig: enable stack protector, hardened usercopy, FORTIFY_SOURCE"
e75ae1378b91 Revert "fastchg: enable force fast charge by default"
75d546e05f4f Revert "fastchg: force enable by default"
34f754a1c178 Merge branch '4.19-misc'
a9655c0b8843 defconfig: trust the CPU's hwrng
6997c5a8df37 namei: enable protected_{fifos,regular} by default
1bda808e5345 random: allow arm64 to trust the CPU's hwrng
398abe30c9f4 random: add a config option to trust the CPU's hwrng
c703f4dfe16b defconfig: enable support for RTL815x USB Ethernet adapters
realtime
041f25411004 defconfig: enable low-latency desktop preemption
ff2e2447857e Merge remote-tracking branch 'rt/v4.9-rt-rebase' into realtime
563a53575a89 Merge branch 'revert-fp-quick-thaw'
fd8077c91869 Revert "PM: Port fingprintd quick thaw from OnePlus"
3e449b2ac3fd Revert "defconfig: enable fingerprint daemon quick thaw"
adc963d234eb defconfig: enable GCMA and cleancache
fee1bc74e974 defconfig: disable Wi-Fi spectrum & power scanning
b4bd03b012bd defconfig: filter access to /dev/mem
c9c7e161de11 defconfig: enable fingerprint daemon quick thaw
78a0c1a0c2a0 ext4: improve smp scalability for inode generation
a46b694e21c3 Revert "ext4: improve smp scalability for inode generation"
c570d92709ed Revert "ext4: optimize fsync for non-rotational drives"
8541063f80aa BACKPORT: block: use ktime_get_ns() instead of sched_clock() for cfq and bfq
79eed1b74f63 ANDROID: update_group_capacity for single cpu in cluster
2c1fe455f34c ANDROID: sched/fair: add idle state filter to prefer_idle case
5eea951f9f98 ANDROID: sched/fair: remove order from CPU selection
f26c3db141f1 ANDROID: sched/fair: unify spare capacity calculation
b94cc23a097c ANDROID: sched/fair: prefer energy efficient CPUs for !prefer_idle tasks
647b833c3a06 ANDROID: sched/fair: fix CPU selection for non latency sensitive tasks
f468d1e1beee Revert "sched/fair: use min capacity when evaluating idle backup cpus"
7b90df4dd7a6 Revert "sched/fair: use min capacity when evaluating active cpus"
8b766bba57e6 Revert "sdm845-gpu-dtsi: enable NAP power saving state for Adreno 630 GPU"
rebase
c5cc08892f96 scripts: Support a custom compiler name
f8e73bdc5d78 UPSTREAM: scripts/mkcompile_h: Remove trailing spaces from compiler version
e95a4c5616ba scripts: Remove gcc-wrapper.py
3b97f17a7186 arm64: vdso32: Fix compilation with updated Clang
59a34f372ca8 qcacld-3.0: Remove -Werror
c43c937ff22c b1c1_defconfig: Enable Wi-Fi driver
c01b3920e1ef init: Initialize module-intended b1c1 drivers when userspace insmods them
0c908f9b6f45 b1c1_defconfig: Disable loadable modules
3de775b2481b misc: mnh: Make firmware signing depend on SYSTEM_DATA_VERIFICATION
4bf43eed8802 qcacld-3.0: Fix build timestamp Kconfig option
d48e8a3031fd staging: Import qcacld-3.0 Wi-Fi driver
84f51e23f706 techpack: audio: Compile all modules built-in and debloat
8542c683eb2e b1c1_defconfig: Generate full config
419c2122a0d3 kernel: Use the stock b1c1 config for /proc/config.gz
fe546362c83f techpack: Do not ignore audio package
df88afc7f324 Import build and environment setup scripts
e58eee378dd6 Import kernel flasher
aaa7bcb44a31 Add 'techpack/audio/' from commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
d98927882f36 Add 'drivers/staging/qcacld-3.0/' from commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
ad0522c8ad8c Add 'drivers/staging/qca-wifi-host-cmn/' from commit '7bde892a7b4ba97650e7d2f17ace03d8baadfdbc'
rebase1
1d3751c01b98 security: pfe: Disable clocks for crypto engine
4b2169056abf security: pfe: Use non blocking scm call
502dd0147f81 ARM: dts: c1: Update ROI alignment values
529260e0ea7b ARM: dts: b1: Enable partial update
e6904143a7e4 defconfig: Remove negative boost values
02dee903f856 Revert "cpu_input_boost: introduce negative display state aware boosting"
d020d0f239c6 defconfig: Update to stable version v14
25516be9308a defconfig: Reduce general stune boost to 10
67bc9cca64d2 flasher: Use the actual stock January 2019 DTBO
1383e467b078 Revert "BACKPORT: mm: fix pageblock heuristic"
10ff7580e4cb mm: add priority threshold to __purge_vmap_area_lazy()
27da1559272a mm/vmalloc: fix kernel BUG at mm/vmalloc.c:512!
28a083706903 Revert "random: prevent add_input from doing anything"
d9e81d30aa2a bpf, arm64: implement jiting of BPF_XADD
ad14a8b734af Revert "HACK: input: touchscreen: sec_ts: Don't update FW on probe"
65678cede44c Revert "defconfig: Disable eBPF JIT"
e363b00a4ac0 Merge branch 'revert-drm-async-bridge'
56a8c1081dbf Revert "drm: Enable bridges asynchronously as early as possible"
61622e7fd10f Revert "drm: Boost to the max when powering on the display"
e7d85c10a30e Revert "drm: Mark the bridge-enable kthread as performance critical"
a6d575084765 init: Revert to s2idle suspend
8125113abd2b defconfig: Update for security reverts
dc6ee0f5a772 Revert "BACKPORT: init/main.c: extract early boot entropy from the passed cmdline"
rebase2
46165946bd80 ANDROID: sched/fair: Don't balance misfits if it would overload local group
a47750a32b8d ANDROID: sched/fair: Attempt to improve throughput for asym cap systems
068a7c229174 EXPERIMENTAL: defconfig: Disable seccomp filter
44e4a682f22c Merge tag '467d45e50f8f176427b97d1c91785a594a438a02'
493176cfafcf helpers: Don't touch flasher tree
4558b294f456 Revert "cpu_input_boost: Rework scheduling setup"
daf2e016073d Makefile: Remove -fwrapv GCC flag
18b53d6ef872 flasher: Update to February 2019 stock DTBO
9a895c07106f Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
dc79d5980540 setup: Switch to official Arm GCC toolchain
4c065162dbf4 misc: cs40l2x: Promote vibration start work to SCHED_FIFO
1d742e60e6df defconfig: Reduce vmstat update interval
1d3751c01b98 security: pfe: Disable clocks for crypto engine
4b2169056abf security: pfe: Use non blocking scm call
502dd0147f81 ARM: dts: c1: Update ROI alignment values
529260e0ea7b ARM: dts: b1: Enable partial update
e6904143a7e4 defconfig: Remove negative boost values
02dee903f856 Revert "cpu_input_boost: introduce negative display state aware boosting"
d020d0f239c6 defconfig: Update to stable version v14
25516be9308a defconfig: Reduce general stune boost to 10
remove-vla-usage
221807e8b8a2 Revert "input: touchscreen: sec_ts: Remove VLA usage"
6dbfe671b439 Revert "Makefile: prohibit VLA"
172c23c7e7a9 scsi: ufs: ufshcd: Remove VLA usage
a64899daeb7e dm: Remove VLA usage from hashes
8c10ef2c5ce7 input: touchscreen: sec_ts: Remove VLA usage
9c551d22802f cpufreq: times: Remove VLA usage
50fb5e9b6200 ntfs: mft: remove VLA usage
9ba0d6843233 ntfs: aops: remove VLA usage
43fe82c2bc05 compiler.h: give up __compiletime_assert_fallback()
221b2ef3529f Makefile: prohibit VLA
4065d3afe852 Makefile: Globally enable VLA warning
20f927cf7861 crypto: msm: update crypto APIs and avoid VLA
e11ba0552514 qcacld: avoid VLA
0235e37937cf techpack: avoid VLA
64481e23775c crypto: qce - Remove VLA usage of skcipher
0f0bbe67b0b7 msm: vidc: avoid VLA
0af02ea4b6b5 msm: camera: avoid VLA
5e58a1d1993b msm_smem: make temp_string_size a constant to avoid VLA
9dffe547d9d8 ion: nuke dbg_str to avoid VLA
45b17f7325a5 Fix subtle macro variable shadowing in min_not_zero()
revert-adreno-idler
1358a94c4180 defconfig: Disable Adreno Idler
f8caaff85927 Revert "Introduce Adreno idler for devfreq-based Adreno devices"
521f5507134b Revert "adreno_idler: switch to count based instead of time based"
76243e7b6a73 Revert "adreno_idler: remove frequency bump"
39b58543fa2d Revert "adreno_idler: fix-up type definitions"
2a24edacbe69 Revert "adreno_idler: fix-up some comments"
0a702f1fce1c Revert "adreno_idler: fix typos :)"
7f2e1f370969 Revert "adreno idler: Ramp down more agressively"
ca4f85bd141f Revert "adreno_idler: Add display state awareness"
684bc12b8e91 Revert "adreno_idler: Declare display_on correctly"
4f88f1ce84aa Revert "msm_adreno_tz: Add display state awareness"
2132d76cda84 Revert "adreno_idler: convert to state notifier"
755ea71da782 defconfig: Update to stable version v13
bf8dc7ebab5c defconfig: Decrease general and input stune boost values
3dc2b5fe34b5 kernel: Reduce app launch boost timeout to 75 ms
ef3dee1ebec8 defconfig: Bump general boost frequencies and stune level
6f17085ae2f7 drm/atomic: Use general boosting for frame boost
6588d52682d4 cpu_input_boost: Reduce frame boost timeout if vidc is active
1305d13ddf8a cpu_input_boost: Introduce should_kick_frame_boost function
bc8257d46975 powerhint: Revert to 710 MHz maximum GPU frequency
revert-adrenoboost
9db40aa1506b Revert "gpu: devfreq: adrenoboost v2.2"
e04844bd5e5c Revert "adrenoboost: disable by default"
78fb9a503333 sched: features: disable gentle fair sleepers
e8d3c8b22639 cfq: Annotate fall-through in a switch statement
1ae9963d71d0 block/cfq: cache rightmost rb_node
eccdf4728cba block/cfq: replace cfq_rb_root leftmost caching
e1c7c85d0168 helpers: tweak date format for packed version
51ad07106cc9 flasher: customize output when running under Android
84c085ce386e flasher: add support for running flasher in Android
2894d2103287 flasher: use TMPDIR environment variable instead of hardcoded path
1ea2bc7fb64c helpers: fix release builds
59122e81780f Merge tag 'ae72f73787af9b83c2c20bd5790f352784c1119d'
2a706743556e Merge tag '6b28c94006fe6c4053fe43981b511961be52df19'
45bced568da0 helpers: update subtrees to tag provided as argument
0ed0c1643575 b1c1-stock_defconfig: remove comments and whitespace
d646dcf07da9 EXPERIMENTAL: dts: pmi8998: use fully analog display dimming
abcd0b99fae2 defconfig: don't autoselect V4L2 drivers
338ac81112fd defconfig: massive debloat
3e9a2f5f7a76 Merge branch 'revert-verity-disable'
2ec9f7f90eea Revert "arm64: dts: disable AVB 2.0 verification"
086929b7fc12 Revert "dm-android-verity: permanently disable verification"
c9dc8b18de4e defconfig: disable SMACK
revert-blu-schedutil
0d83841f158d defconfig: Remove blu_schedutil options
1d3be661725a Revert "cpufreq: blu_schedutil: Introduce initial bringup"
869b0cc34e43 Revert "cpufreq: blu_schedutil: make iowait boost optional"
a00655d170c9 Revert "cpufreq: blu_schedutil: add a couple fixes"
a67685d8b0be Revert "cpufreq: blu_schedutil: add some bits from Pixel 3"
92fe79431bdd qseecom: Fix typo in app loading message
83458e3d9df8 Merge branch 'flickerfree'
be95e6136b12 defconfig: Enable display exposure adjustment driver
2e78459a120a drm/msm: Hook up configurable display exposure adjustment
78fd8de7ac36 drm: Introduce exposure adjustment driver
5e3d74c10fb0 Revert "block, ice, cfq: support back/front merges and update req->__dun"
2c78b11ff7c3 sched/walt: Reduce window size to 10 ms
fd117cedaf43 defconfig: Update to stable version v16
970271bd75fa kbuild: Disallow enabling CFI shadow if modules are disabled
b4f1111f7ffa defconfig: Disable /proc/kallsyms
dc3e2f9e735b kallsyms: Allow /proc/kallsyms to be disabled at compile time
788a389bbdcf Merge branch 'revert-lmk-rbtree'
83760ef17306 Revert "drivers:lmk: implement task's adj rbtree"
9fbe73b54ea3 Revert "lmk: add static keywords to locally used variables"
90f1e223cbc2 Revert "drivers:lmk: Fix double delete issue"
0b84f9dbe3d9 Revert "drivers:lmk: Fix null pointer issue"
2f7178880183 Revert "fs: support task's adj rbtree"
584143d1f2e6 Revert "defconfig: Enable Simple LMK"
629bb4e7567f Revert "fs: avoid adding non-thread-group task to LMK rbtree"
80198f0f5075 Revert "kernel: support task's adj rbtree"
9937933fd2b2 Revert "kernel: avoid adding non-thread-group task to LMK rbtree"
9d36a6ff7fa2 Revert "defconfig: enable LMK rbtree optimization"
0f06ad478eac defconfig: Enable hang detection
eb2d6b50785a defconfig: Re-enable most stock security features
aea3c9be8c9b simple_lmk: Kill services before killing the launcher
c889ea52f680 defconfig: Update to stable version v15
e475b1917bc0 cpu_input_boost: Suppress input boost if duration is 0
revert-clang-hacks
1c601be0ef40 Revert "ANDROID: HACK: arm64, LLVMLinux: replace prfm instruction in spin_lock_prefetch()"
a1c37a08cb95 Revert "LLVMLINUX: DO-NOT-UPSTREAM arm64, LLVMLinux: prfm"
2559104be002 Revert "ANDROID: HACK: futex, LLVMLinux: don't optimize futex_detect_cmpxchg() on ARM64"
b071e678491c Merge branch 'zram-zstd'
b3bd9a7edfc0 zram: use zstd over lz4 over lzo by default
36906ac32bc1 defconfig: enable zstd
d0fa2d8a27bc zram_drv.c: use pointer as per commit https://github.com/freak07/bluecross/commit/1cdb7f9c79812ecb70c698f7eb5574a47464585f
4d65fd2bb730 Revert "Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write""
76739d97bc8b Revert "Revert "mm/block: convert rw_page users to bio op use""
ec4413dc8ebd zram_drv.c: make zstd default compression algorithm, use lzo as a fallback
6b9c099d97c2 BACKPORT: crypto: zstd - Add zstd support
7b99ea0f72d5 UPSTREAM: drivers/block/zram/zram_drv.c: fix bug storing backing_dev
b3371525dd94 BACKPORT: zram: introduce zram memory tracking
bf3be17249c9 BACKPORT: zram: record accessed second
7bb47c49fdd2 BACKPORT: zram: mark incompressible page as ZRAM_HUGE
5a621e1607b9 UPSTREAM: zram: correct flag name of ZRAM_ACCESS
cafa93a8c470 UPSTREAM: zram: Delete gendisk before cleaning up the request queue
5a64fd5f1b6f UPSTREAM: drivers/block/zram/zram_drv.c: make zram_page_end_io() static
3a1b6ae3f5c4 BACKPORT: zram: set BDI_CAP_STABLE_WRITES once
82dcf0969021 UPSTREAM: zram: fix null dereference of handle
76ec4805f2cb UPSTREAM: zram: add config and doc file for writeback feature
44dcdb9ad4a0 BACKPORT: zram: read page from backing device
44141f625db4 BACKPORT: zram: write incompressible pages to backing device
f9487dd3d947 BACKPORT: zram: identify asynchronous IO's return value
5a2859ed3e3f BACKPORT: zram: add free space management in backing device
c96d6c4e3c72 UPSTREAM: zram: add interface to specif backing device
5286b4c41c7b UPSTREAM: zram: rename zram_decompress_page to __zram_bvec_read
7a4b0d0fefcd UPSTREAM: zram: inline zram_compress
e75026d980e7 UPSTREAM: zram: clean up duplicated codes in __zram_bvec_write
0264bc746786 UPSTREAM: zram: add zstd to the supported algorithms list
5749154c5812 UPSTREAM: lib: Add zstd modules
fb205881c979 UPSTREAM: lib: Add xxhash module
d09190ad1f06 UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()
9a2281755931 UPSTREAM: zram: constify attribute_group structures.
5c0818ff10d6 UPSTREAM: zram: count same page write as page_stored
462937d99516 UPSTREAM: zram: reduce load operation in page_same_filled
20bf041d4dd7 UPSTREAM: zram: use zram_free_page instead of open-coded
d3af2c9e919e UPSTREAM: zram: introduce zram data accessor
93d1060af4cd UPSTREAM: zram: remove zram_meta structure
7d234c66cc93 UPSTREAM: zram: use zram_slot_lock instead of raw bit_spin_lock op
a7191058ba68 BACKPORT: zram: partial IO refactoring
d80238fbc78c UPSTREAM: zram: use __GFP_MOVABLE for memory allocation
cb66adc663de BACKPORT: zram: handle multiple pages attached bio's bvec
86c9aadb5d03 UPSTREAM: zram: fix operator precedence to get offset
828a88674553 BACKPORT: zram: extend zero pages to same element pages
a4d51e3d8d67 BACKPORT: zram: remove waitqueue for IO done
fc42fd3f4a3e Revert "mm/block: convert rw_page users to bio op use"
b1d98cf1e689 Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write"
46f1c9baa318 Revert "staging: zram: Rate limit memory allocation errors"
e9e441cb71c5 Revert "UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()"
14455cf6f3a7 Revert "zram: use __GFP_MOVABLE for memory allocation"
75356bdb7fee Revert "power: Block all them crazy wakelocks"
937a8b66db21 gpu: adreno: only compile Adrneo 6xx driver
9c8af3d2fb7e defconfig: disable menu cpuidle governor
11d8939cbd4e cpuidle: allow disabling menu governor if lpm is available
adfffc6cdf90 defconfig: disable unused touchscreen drivers
8641ae90346a usb: correct function name
02b3f829115b Revert "defconfig: disable watchdog and memory dump support"
04f6ca47773b defconfig: sync
6513b6de83bc hwmon: qpnp-adc: Fix enum conversion warning
de86b792bf65 icnss: Fix enum-conversion warning from Clang
a43940657556 thermal: tsens: Fix enum-conversion warnings
4b9ca49350c0 soc: qcom: minidump: Fix third argument to strlcpy
ff73d63ad359 usb: f_gsi: Fix enum conversion warning
6feaf724257c sched/core: Properly fix constant logical operand Clang warning
d46925c558b8 msm: msm_bus: Remove unnecessary self assign statement
6ca8769cd77e soc: qcom: glink: Fix third argument to strlcpy
revert-clang5-hacks
7a2dac77d8e3 Revert "ANDROID: HACK: arm64, LLVMLinux: replace prfm instruction in spin_lock_prefetch()"
3edec3ee8472 Revert "LLVMLINUX: DO-NOT-UPSTREAM arm64, LLVMLinux: prfm"
a005a494168c Revert "ANDROID: HACK: futex, LLVMLinux: don't optimize futex_detect_cmpxchg() on ARM64"
750bb794210f hwmon: qpnp-adc: Fix enum conversion warning
a5482e6e6e77 icnss: Fix enum-conversion warning from Clang
5c0cf4b63229 thermal: tsens: Fix enum-conversion warnings
ad95d60b091e soc: qcom: minidump: Fix third argument to strlcpy
b17695a9e2ce usb: f_gsi: Fix enum conversion warning
f75c66d7f6d3 sched/core: Properly fix constant logical operand Clang warning
6d5a4b17cdca msm: msm_bus: Remove unnecessary self assign statement
2ef99e17ed11 soc: qcom: glink: Fix third argument to strlcpy
5be4798a3ab8 staging: ion: Fix enum conversion warnings
003bc495cee3 usb_bam: Fix enum conversion warning
b5470a40da9b msm: ipa: Fix enum conversion warning
cf9aca7d60a4 msm: camera: flash: Fix enum conversion warnings
fc64c67cb2eb UPSTREAM: leds: add LED_ON brightness as boolean value
16f9034cd7c1 msm: camera: ife: Fix enum conversion warning
673299eb0eb6 hwmon: qpnp-adc: Fix logical-not-parentheses warning
7eacabe8bbcf diag: Fix third argument to strlcpy
fd5b7b40fd8d qseecom: Fix ignored attributes warnings
revert-drm-async-bridge
56a8c1081dbf Revert "drm: Enable bridges asynchronously as early as possible"
61622e7fd10f Revert "drm: Boost to the max when powering on the display"
e7d85c10a30e Revert "drm: Mark the bridge-enable kthread as performance critical"
a6d575084765 init: Revert to s2idle suspend
8125113abd2b defconfig: Update for security reverts
dc6ee0f5a772 Revert "BACKPORT: init/main.c: extract early boot entropy from the passed cmdline"
43709a9aefaa Revert "gather extra early boot entropy"
fbb7357b7106 Revert "UPSTREAM: mm: add SLUB free list pointer obfuscation"
e589d8f8d9dd Revert "UPSTREAM: mm/slub.c: add a naive detection of double free or corruption"
c01f33dba5e7 Revert "BACKPORT: mm: allow slab_nomerge to be set at build time"
4d8795580f6b Revert "add a SLAB_HARDENED configuration option"
2486f040bd9d Revert "add missing cache_from_obj !PageSlab check"
b7a696b878be Revert "bug on kmem_cache_free with the wrong cache"
62b3ffbaa196 Revert "real slab_equal_or_root check for !MEMCG_KMEM"
83547fc13e7f Revert "always perform cache_from_obj consistency checks"
d7b094704077 Revert "bug on !PageSlab && !PageCompound in ksize"
a8ee9caa4699 Revert "randomize lower bits of the argument block"
59602631bccc Revert "restrict device timing side channels"
42da18312b21 Revert "add toggle for disabling newly added USB devices"
8c28be16005e Revert "add kmalloc/krealloc alloc_size attributes"
revert-fp-quick-thaw
fd8077c91869 Revert "PM: Port fingprintd quick thaw from OnePlus"
3e449b2ac3fd Revert "defconfig: enable fingerprint daemon quick thaw"
adc963d234eb defconfig: enable GCMA and cleancache
fee1bc74e974 defconfig: disable Wi-Fi spectrum & power scanning
b4bd03b012bd defconfig: filter access to /dev/mem
c9c7e161de11 defconfig: enable fingerprint daemon quick thaw
78a0c1a0c2a0 ext4: improve smp scalability for inode generation
a46b694e21c3 Revert "ext4: improve smp scalability for inode generation"
c570d92709ed Revert "ext4: optimize fsync for non-rotational drives"
8541063f80aa BACKPORT: block: use ktime_get_ns() instead of sched_clock() for cfq and bfq
79eed1b74f63 ANDROID: update_group_capacity for single cpu in cluster
2c1fe455f34c ANDROID: sched/fair: add idle state filter to prefer_idle case
5eea951f9f98 ANDROID: sched/fair: remove order from CPU selection
f26c3db141f1 ANDROID: sched/fair: unify spare capacity calculation
b94cc23a097c ANDROID: sched/fair: prefer energy efficient CPUs for !prefer_idle tasks
647b833c3a06 ANDROID: sched/fair: fix CPU selection for non latency sensitive tasks
f468d1e1beee Revert "sched/fair: use min capacity when evaluating idle backup cpus"
7b90df4dd7a6 Revert "sched/fair: use min capacity when evaluating active cpus"
8b766bba57e6 Revert "sdm845-gpu-dtsi: enable NAP power saving state for Adreno 630 GPU"
d6e75509da1f PM: revise Boeffla wakelock blocker config option
revert-fsync-control
6e4f002c2384 Revert "Added fsync on/off support."
30e7eb3e3025 Revert "fs: sync: Avoid calling fdget without fdput"
bf8b48028cf7 power: reduce process freeze timeout
74eaef129985 Merge branch 'zram-multibyte'
c71d2f525706 z3fold: fix reclaim lock-ups
be991afc3261 zram: convert to using memset_l
d9737e8961f0 lib/string.c: add multibyte memset functions
dcdfc005fbcf Merge branch 'z3fold-updates'
a093250126fa mm/z3fold.c: use gfpflags_allow_blocking
433248f3d03e z3fold: fix memory leak
b8aad5fbca7d z3fold: limit use of stale list for allocation
261f688c7c8e mm: docs: fix parameter names mismatch
5eccf890ec4b mm/z3fold.c: use kref to prevent page free/compact race
f452fee78453 z3fold: fix stale list handling
4a9c5cc03f87 z3fold: fix potential race in z3fold_reclaim_page
400977f34749 z3fold: use per-cpu unbuddied lists
3254540ecc08 z3fold: fix page locking in z3fold_alloc()
9179d025f021 z3fold: fix spinlock unlocking in page reclaim
273316cb6ea3 z3fold: add kref refcounting
67dd5b6880a2 z3fold: extend compaction function
c3ee1d71a95c z3fold: use per-page spinlock
20999175a705 z3fold: fix header size related issues
83a64f3737da z3fold: make pages_nr atomic
f6c603c4925e mm/z3fold.c: limit first_num to the actual range of possible buddy indexes
b6d40a896f49 Merge branch 'test'
2f7752a50ef2 Merge branch 'simple-lmk'
44ed88d557b4 random: strengthen input validation for RNDADDTOENTCNT
1b5ee904cb42 EXPERIMENTAL: defconfig: enable Simple LMK
e0442c6cad75 Merge branch 'max-boost' into simple-lmk
3d3a0c6a7b05 defconfig: enable devfreq boost
53a024cda311 devfreq_boost: convert to simple max boost driver
a067c7d58e10 devfreq: Introduce devfreq boost driver
a451ca29291a defconfig: enable CPU input boost
f3d6082321c2 cpu_input_boost: convert to simple max boost driver
2908e8bb0777 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
705f3b6c4f34 cpu_input_boost: Simplify bitwise operations used to store boost state
dbf164cb2ba5 cpu_input_boost: Destroy workqueue on error path in init
2ec2f2fbfb9a cpu_input_boost: Fix and refactor max boost logic
343ef5094ab3 cpu_input_boost: Add API for boosting all CPUs to max frequency
4d44a25af7f2 cpu_input_boost: Introduce driver for event-based CPU boosting
ecd66038bf8f simple_lmk: Limit mem reclaim invocation to once per OOM'd allocation
961ab263467a simple_lmk: Boost CPU and DDR bus when mem reclaim is invoked
acd626166fff simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
050c782e62db arm64: lib: memory utilities optimization
687c2bf591c9 mm: slub: Default slub_max_order to 0
aad5215574e0 init: add support for USB mass storage function
dd2c89e3ee1f helpers: add test-over-SSH helpers
a62e795fcd8f flasher: fix missing blank line
0e811a071b03 flasher: add tuned PowerHAL config
053257c77c47 Revert "qcacld: optimize configs"
74cedabb72c2 Merge branch 'slub-updates'
ef2b12eed329 Revert "slub: make ->inuse unsigned int"
a3322e442764 Revert "slub: make ->object_size unsigned int"
beb8e766e189 Revert "slub: make ->size unsigned int"
84f9ab3d902f defconfig: disable CONFIG_RANDOMIZE_BASE
614861bbe5f9 defconfig: disable SLUB debug checks
50baf9feb44e qcacld: optimize configs
b50adb39232d msm-poweroff: disable download mode by default
668aeb4b90ac qcacld: disable WLAN_LOGGING_SOCK_SVC_ENABLE
518917bd1084 Merge branch 'f2fs-patches'
d5cd7ee815d6 init: set optimal SQLite flags for f2fs
899debbcef8d f2fs: mark is_extension_exist() inline
adc365480fcf f2fs: fix minor typo on extensions reporting
c292a6c5b3d1 f2fs: set ioprio of GC kthread to idle
eb5fc570882a slub: remove 'reserved' file from sysfs
7e5c406aa604 slub: remove kmem_cache->reserved
a2a4447e0a79 slab,slub: remove rcu_head size checks
476beb65d22e mm/slub: remove obsolete comment
ba0ae8b3fba6 slub: make size_from_object() return unsigned int
d0a378f838a8 slub: make slab_index() return unsigned int
96da3c57ac25 slub: make ->size unsigned int
48eb8f1777c5 slub: make ->object_size unsigned int
91cf721dbded slub: make ->inuse unsigned int
82ba084ad1b7 slub: make ->align unsigned int
e7ac3364a12c slub: make ->reserved unsigned int
678e89e50ffc slub: make ->remote_node_defrag_ratio unsigned int
revert-gcma
89a364176720 defconfig: Remove GCMA option
24ad739e57c6 Revert "Merge branch 'gcma'"
068cb224d2b4 Revert "gcma: make cleancache and frontswap completely optional"
2c350cf64e72 Revert "gcma: make stats accounting configurable"
73afd0704026 treewide: Update usages of boost task check helper
8c77677f64aa exec: Fix potential race condition in boost task checker
cb5e31bea0ac msm: kgsl: Initialize wakeup pwrlevel to the initial pwrlevel
33ebdddf1fe8 drm/msm/dsi-staging: Clean up C1 PWM dimming control integration
9787905fd46d drm/msm: Notify userspace when the display state changes
5579ae3019b8 drm/msm: Expose display state as a sysfs attribute
58e5a41025ac Revert "arm64/dts: Prevent LDO 19 from leaving HPM"
dda0b932a209 max1720x_battery: Expose the maximum raw capacity value
c7f8e688b1a8 qpnp-fg-gen3: Expose maximum raw capacity value
1618cdc35676 power_supply: Add CAPACITY_RAW_MAX property
94f9b16b0fa1 drm/msm: klapse: Refactor code
de14152f6ee1 defconfig: Sync
fbfbc52f4fb0 init: Remove execprog2
7ba95fc63950 soc: qcom: access smp2p_smem structure with I/O function
316f0edea8a8 Revert "soc: qcom: smp2p: fix __iomem access in SMP2P_{GET,SET}_*"
03459f800572 flasher: Reformat Android version check output
revert-gcma-dmem
9e52c582a763 gcma: don't select frontswap or cleancache
521382f87ded Revert "gcma: utilize reserved memory as discardable memory"
ea4b442b06e8 Revert "gcma: adopt cleancache and frontswap as second-class clients"
8b52011eb1f1 Revert "gcma: export statistical data on debugfs"
6450cce47ba8 Revert "gcma: only force frontswap if swap is enabled"
4b3987c5e789 Revert "gcma: make cleancache and frontswap completely optional"
1cabea26de29 Revert "gcma: make stats accounting configurable"
7f17a11ed172 Revert "dmaengine: fix memleak"
b251372d99d5 powerhint: remove CPU minimum frequency boosts
0ffd9222958f powerhint: disable cpubw touch boost
1e8df89ad744 defconfig: enable eBPF JIT
00e7ebcdd4f3 bpf: remove dependency on module support
78940095ed5d sched/fair: Fix issue where frequency update not skipped
701ad41547ca sched/fair: Skip frequency updates if CPU about to idle
a1d9de02dc07 flasher: overlay: remove default profile settings
b9148e656400 init: set PowerHAL interaction boost duration to 64 ms
e8702b8330d8 cpu_input_boost: refactor last input boost event variable name
46f057f55f87 Merge branch '4.12-swap'
69b8317b8d66 swap: Remove obsolete sentence
982e6c8e3022 mm, swap: use kvzalloc to allocate some swap data structures
850c511128e4 mm, swap: remove unused function prototype
37cce266aeba mm, swap: avoid lock swap_avail_lock when held cluster lock
f7ee8d7e9653 mm, swap: improve readability via make spin_lock/unlock balanced
dcde2b8683c8 mm, swap: fix comment in __read_swap_cache_async
fe2d8bb207b7 mm, swap: Fix a race in free_swap_and_cache()
5dbfcb786412 mm, swap: Remove WARN_ON_ONCE() in free_swap_slot()
06e81ebec395 mm/swap: don't BUG_ON() due to uninitialized swap slot cache
48c5d352d5fc mm/swap: skip readahead only when swap slot cache is enabled
8642dce26005 mm/swap: enable swap slots cache usage
e3ab9391e3c5 mm/swap: add cache for swap slots allocation
a5ada5769b20 mm/swap: free swap slots in batch
d2fe55a16671 mm/swap: allocate swap slots in batches
7e73c0d8f8e6 mm/swap: skip readahead for unreferenced swap slots
f92b0873a009 mm/swap: split swap cache into 64MB trunks
e08ff5a8ceba mm/swap: add cluster lock
2675919a9a5e mm/swap: fix kernel message in swap_info_get()
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
revert-html5-sony-sched
15794ec2a4ad Revert "sched: check pinned tasks before balance"
c307511c3357 Revert "sched: set loop_max after rq lock is taken"
76efb43f2bc9 Revert "sched: set number of iterations to h_nr_running"
93d6ba5f05bf Revert "sched: ignore task_h_load for CPU_NEWLY_IDLE"
e757bdf1de10 Revert "sched/fair: Search a task from the tail of the queue"
997a6fdbb0db Revert "sched: boost: Don't try to kick idle CPU"
afe34af9298e lowmemorykiller: enable oom reaper
6781c343a06a defconfig: enable input boost and devfreq boost
cead983d552a kernel: boost Lawnchair v2 when becoming top-app
7cad4b7a2d80 kernel: Increase Pixel launcher top-app boost duration to 1000 ms
f7a8c3c2f1c8 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
bb909336b72c cpu_input_boost: Simplify bitwise operations used to store boost state
cdff042e64c0 kernel: Boost CPU to the max when Pixel launcher becomes a top app
c53a1b37ce7d devfreq: Introduce devfreq boost driver
a367652187d8 msm: performance: prevent the driver from handling userspace boosts
405c0336b3d3 cpu_input_boost: expose input freqs and duration to userspace
5d127ebe0321 cpu_input_boost: Destroy workqueue on error path in init
9b6f659c4cf1 cpu_input_boost: Fix and refactor max boost logic
0306bf4cba7d kernel: Boost all CPUs to the max when userspace launches an app
3acda3225849 cpu_input_boost: Add API for boosting all CPUs to max frequency
revert-lede-net
a03b76744ed1 Revert "netfilter: conntrack: cache route for forwarded connections"
acd8db927307 Revert "tcp: tsq: add tsq_flags / tsq_enum"
83fbab21185b Revert "tcp: tsq: remove one locked operation in tcp_wfree()"
1c713b620f77 Revert "tcp: tsq: add shortcut in tcp_tasklet_func()"
3ff1ce8a0c97 Revert "tcp: tsq: avoid one atomic in tcp_wfree()"
7f548e83460f Revert "tcp: tsq: add a shortcut in tcp_small_queue_check()"
af4cc392e462 Revert "tcp: tcp_mtu_probe() is likely to exit early"
dd45911f9466 Revert "tcp: tsq: move tsq_flags close to sk_wmem_alloc"
1264ea4050a6 Revert "tcp: add a missing barrier in tcp_tasklet_func()"
fedd1ad9bbf5 Revert "tcp: allow drivers to tweak TSQ logic"
7c7abaa20632 Revert "mm: add support for releasing multiple instances of a page"
aa82ff3a8c65 Revert "mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free"
ebaeb74af4dd Revert "mm: rename __page_frag functions to __page_frag_cache, drop order from drain"
154f92054250 Revert "i2c: gpio: Enable working over slow can_sleep GPIOs"
f96b1f517093 Revert "drivers: net: generalize napi_complete_done()"
32b35b832758 Revert "ip6_tunnel: Fix missing tunnel encapsulation limit option"
59366140e446 Revert "ipv6: Need to export ipv6_push_frag_opts for tunneling now."
1ff00466959c Revert "uapi/if_ether.h: prevent redefinition of struct ethhdr"
a5938cfd9c3b Revert "defconfig: enable conntrack route caching"
eba7d1fd9116 Revert "bridge: only accept EAP locally"
revert-lmk-rbtree
809027129101 Revert "drivers:lmk: implement task's adj rbtree"
1686c76c9263 Revert "lmk: add static keywords to locally used variables"
b587b7e514a6 Revert "drivers:lmk: Fix double delete issue"
7e302d7d8c62 Revert "drivers:lmk: Fix null pointer issue"
7ffb32bbf121 Revert "fs: support task's adj rbtree"
ee499bbc7195 Revert "fs: avoid adding non-thread-group task to LMK rbtree"
e07b656b2cca Revert "kernel: support task's adj rbtree"
28033f60c510 Revert "kernel: avoid adding non-thread-group task to LMK rbtree"
c6b677c5c6ce Revert "defconfig: enable LMK rbtree optimization"
71f6093ee366 Revert "defconfig: Enable Simple LMK"
d03b40d00c15 defconfig: Enable hang detection
a4d0b715a6b5 defconfig: Re-enable all stock security features
aea3c9be8c9b simple_lmk: Kill services before killing the launcher
c889ea52f680 defconfig: Update to stable version v15
e475b1917bc0 cpu_input_boost: Suppress input boost if duration is 0
a39be7b9d7be init: Tune schedutil ratelimits in profiles
ab868a067a61 kernel: Only boost for 32 ms on zygote fork
e2f9826826b9 kernel: Boost DDR bus on zygote fork
69f761865b33 kernel: Only boost on fork if the screen is on
b418357d64f5 kernel: Boost whenever a zygote-forked process becomes a top app
revert-max-input-boost
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
152b1975be1b tick: Don't clear idle and iowait sums on CPU down
b480730bdf0b drivers: i2c: Fix direct reference to HZ
ddd30747bf49 selinux: don't require auditing
d13c2b34e989 defconfig: disable twofish and bluetooth debugfs
09b0680c9fc6 defconfig: enable debug monitors
revert-nc-sched-backports
7e34a5f8d15f Revert "Revert "sched/fair: use min capacity when evaluating active cpus""
a16251804f5c Revert "Revert "sched/fair: use min capacity when evaluating idle backup cpus""
101dd69eb6f2 Revert "ANDROID: sched/fair: fix CPU selection for non latency sensitive tasks"
106fbe58ce43 Revert "ANDROID: sched/fair: prefer energy efficient CPUs for !prefer_idle tasks"
b001b2f847b6 Revert "ANDROID: sched/fair: unify spare capacity calculation"
dd912d25d1a7 Revert "ANDROID: sched/fair: remove order from CPU selection"
c97a97477540 Revert "ANDROID: sched/fair: add idle state filter to prefer_idle case"
7313d952ecb4 msm: pcie: Mark MSI cascade ISR as IRQF_NO_THREAD
75d915a23c2e Revert "sched: Turn on MIN_CAPACITY_CAPPING feature"
1b976bcd34f1 ARM: dts: sdm845: Enable SDE null packet insertion
d748142ac29c drivers: mailbox: rpmh: Suppress driver bind/unbind feature
a2489c4fdcbd drivers: mailbox: rpmh: Correct matching of tcs command sequence
acc0aa112c6b drivers: mailbox: rpmh: Enhance debug logs
30ca4e4a39da printk: Add sleep time offset to all timestamps
92f2192c1319 printk: Add sleep time to timestamps
81db6e15745c Revert "printk: allow setting offset to timestamps"
3b39f1deda03 Revert "timekeeping: offset printk time upon resuming from suspend"
c11c94144514 Revert "Revert "net: sch_generic: Remove unnecessary watchdog warning""
377d5e152e8b defconfig: Enable IRQ logging on resume
cd9082b24fa4 helpers: Don't copy System.map when creating zip
revert-old-sultan-debugfs
f73576371241 Revert "debugfs: Always compile core debugfs driver for Android kernels"
0b90fa97ad63 Revert "wakeup: Enable debugfs usage for Android even when debugfs is disabled"
d508760711bf Revert "qcacld-3.0: Enable debugfs usage for bluecross"
38241cd57b1d Revert "scsi: ufs: Enable debugfs usage for bluecross"
1e92c7ee9009 soc: qcom: service-locator: Fix memory leak in pd_locator_work
2945d88a962f Revert "soc: qcom: service-locator: Fix memory leak in pd_locator_work()"
80e80849b3c1 drm/msm: sde: reduce general boost post-input timeout to 2500 ms
d631cc311fe5 cpu_input_boost: consolidate stune boost parameters
b78274756f63 defconfig: configure minimum screen-on CPU frequencies
44955a3e6b3a cpu_input_boost: add separate return frequencies for screen-on states
df191761b761 defconfig: set screen-on stune boost to 1
06b61cc141c6 cpu_input_boost: introduce display-on stune boost floor
7a70e7b37965 msm: camera: boost CPU and DDR for 500 ms on camera init
1ec74281c676 dwc3-msm: boost CPU and DDR when usb is connected
9475d125254a drm/msm: sde: reduce general boost time to 80 ms
6e288546a54a drm/msm: dsi-staging: bump backlight dimmer min brightness
46825b3e536f kgsl/adreno: Properly set GPU timeout
498802e77969 EXPERIMENTAL: defconfig: tune CPU input boost frequencies
9070ea20c1d2 arm64/dts: b1c1: fix thermal zone 57 errors
f3dc6b011e3c defconfig: enable R/W NTFS support
revert-rtmutex-changes
c78288226364 Revert "futex,rt_mutex: Introduce rt_mutex_init_waiter()"
35a5169abb45 Revert "locking/rtmutex: Reduce top-waiter blocking on a lock"
a07978d2c30a sched: Turn on MIN_CAPACITY_CAPPING feature
7a3cb60f2314 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
09cb737bb779 flasher: Add Gaming Spectrum profile as turbo
aae039bcdc7d flasher: Use helper script for profiles and USB Mass Storage
efd25e442656 ARM: dts: msm: Add 180 MHz step for sdm845
c08c17dd25c6 ARM: dts: b1c1: Disable SMP2P Remote Debug pins and nodes
121b39d34e17 Makefile: Re-add Graphite optimization flags for GCC
9ca24268a2fa Revert "mm: cma: retry only on EBUSY"
b375e9a201ab compiler.h: enable builtin overflow checkers and add fallback code
ca6708d5cc3a Revert "arm64/dts: b1c1: fix thermal zone 57 errors"
41d09ada4500 Revert "Merge branch 'overflow'"
5225d41e9e77 Revert "mm, swap: use kvzalloc to allocate some swap data structures"
6e22f089d9d9 Revert "v4l2-core: use kvfree in event subscribe error path"
280101e3a18c Revert "overflow.h: Add allocation size calculation helpers"
18c51f2132b6 defconfig: Sync for cleanup
93e191263020 Revert "net: ipc_router_core: fix memleak with IPC_LOGGING disabled"
a9660fb3e04f Revert "defconfig: Bump boost settings"
bc91ec4a7894 Revert "dwc3-msm: boost CPU and DDR when usb is connected"
revert-simple-lmk
c4ed245e2a48 Revert "simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android"
5387cbd177ff Revert "simple_lmk: Boost CPU and DDR bus when memory reclaim is invoked"
235e234aa689 Revert "simple_lmk: React faster to kswapd reclaim events"
cde37f1d86e7 Revert "simple_lmk: Only kick boost when the screen is on"
25c26f723d43 Revert "simple_lmk: Kill services before killing the launcher"
0fee6cccc1f4 Revert "simple_lmk: Improve victim selection and kill process"
0d28e5fd3a6f setlocalversion: don't check for uncommitted changes
db59981efd41 Revert "scripts: Don't append "+" to localversion"
574f3bd63f5b defconfig: Update to stable version v17
ebfef6d807a5 mm: allow __GFP_MOVABLE to use CMA memory
513155d14f70 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
51985f95fb6f ion: Check out to Android Q DP1 base
080d72451881 mm: readahead back to 128KB
e71481d9df67 arm64: crc32: always assume ARM64_HAS_CRC32
8af07049ea90 lib/crc32.c: mark crc32_le_base/__crc32c_le_base aliases as __pure
87bb812d37bd lib/crc32: make core crc32() routines weak so they can be overridden
f57bf821db09 arm64/lib: improve CRC32 performance for deep pipelines
56885dab61e1 arm64/lib: add accelerated crc32 routines
24a0d45c1d7a arm64: avoid instrumenting atomic_ll_sc.o
837c24cdbc1d arm64: lse: Pass -fomit-frame-pointer to out-of-line ll/sc atomics
revert-speck-removal
32cf914bd757 defconfig: Disable unused Speck cipher
7182f65ecfad Revert "Revert "BACKPORT, FROMGIT: crypto: speck - add test vectors for Speck64-XTS""
cc60ddd9a733 Revert "Revert "BACKPORT, FROMGIT: crypto: speck - add test vectors for Speck128-XTS""
bb0801b7433f Revert "Revert "FROMGIT: crypto: speck - export common helpers""
86ba8e990ecf Revert "Revert "BACKPORT, FROMGIT: crypto: speck - add support for the Speck block cipher""
588b94710f4d init: Set big cluster max frequency to 2323.2 MHz in balanced profile
6b0d95a44f51 defconfig: Enable watchdog
1f6e68e65c01 ANDROID: dm-crypt: run in a WQ_HIGHPRI workqueue
6a383a692d86 Merge branch 'lld'
088e2a26d123 vmlinux.lds: Prevent LLD from eliminating built-in module versions
a03f24a03296 kbuild: Set --lto-O3 LLD linker flag when building with clang LTO
cb18fd61a393 kbuild: Force -O2 LLD linker flag for vmlinux
ffc6aab197a2 kbuild: Fix inconsistent LLD flag indentation
361fff5e08ef kbuild: Fix linker config option for clang LTO
ae0cd5991674 kbuild: Use LLD for the final vmlinux link step
72fc00945f7e arm64: vdso: Fix compilation with LLD
c3f4db6fe813 FROMLIST: BACKPORT: Makefile: lld: set -O2 linker flag when linking with LLD
af27484dd24c FROMLIST: BACKPORT: Makefile: lld: tell clang to use lld
40772003e342 FROMLIST: BACKPORT: Makefile: clang: choose GCC_TOOLCHAIN_DIR not on LD
416d814bcc24 defconfig: Revert to default Simple LMK OOM timeout
38a43fb96a38 simple_lmk: React faster to kswapd reclaim events
d3a642ef2db6 HACK: sch_htb: Disable LTO
d6ef1ddc272a execprog: RCU barrier doesn't guarantee fd to be closed
efbf9ec43300 f2fs/rapid_gc: do not wait until all invalid blocks are discarded
69b0feee2e65 Merge branch 'caf-sdm710-sched'
58961a47612f sched/fair: fix compilation after commit 23c9d260f0b5
c6a747dbe2db sched: remove skip_sg
65c63203648f sched/fair: start_cpu() fix for rtg_target case
8096311922ac sched/fair: Improve the scheduler
ca8c4bd32599 sched/fair: Fix redundant load balancer reattempt due to LBF_ALL_PINNED
706d9154195f sched/fair: Allow idle local group to pull tasks from overloaded group
7eba3612016d sched/walt: improve the scheduler
6d0d37a3afe0 sched/walt: improve the scheduler
e6a80985f0b6 init: Bump performance profile boost frequencies
23c9d260f0b5 sched/fair: improve placement logic
a6ade5cc339f Revert "[iov_iter] new primitives - copy_from_iter_full() and friends"
bce23f25ac11 Revert "net: sch_generic: Remove unnecessary watchdog warning"
ffaf462e69d6 init: Update profiles for recent changes
89ebb17b7d19 defconfig: Use default frame boost timeout
revert-stune-hold
5479cd90dbc3 Revert "BACKPORT: ANDROID: Add hold functionality to schedtune CPU boost"
43bf62634186 Revert "sched: features: enable SCHEDTUNE_BOOST_HOLD_ALL for all tasks classes"
0efa85baa8e1 Revert "sched: Update schedtune hold based on the android-4.14 version"
bb0e7a3d040e Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
759bdb0246a2 trace/trace_sched_wakeup: Fix compliation error when CONFIG_SCHED_TRACER=y
d672cbe7e03e clk: qcom: clk-cpu-osm: Remove boost frequency classification
97091c91b08e Revert "workqueue: change permissions to allow root control of wq_power_efficient toggle"
856d065ea3ff state_notifier: Expose suspend state as a read-only parameter
bf2ba9164f00 Revert "msm: kgsl: Report correct GPU frequency in sysfs"
c5c42d9a2169 FROMLIST: sched/fair: Don't move tasks to lower capacity cpus unless necessary
3f581dbb7566 mm: flush TLB once pages are copied when SPF is on
000ce171c93c fs/pstore: fs/squashfs: change usage of LZ4 to work with new LZ4 version
2ca9c3f57e5a ARM: dts: sdm845: Disable half of the gold cluster
d7dd98712bb3 ARM: dts: sdm845: Disable expedited RCU grace periods after init
27b855c1c68b Merge tag 'android-9.0.0_r0.66'
bd9b75477ffc drm/msm/dsi-staging: Bump smart ELVSS disabling threshold
d0ab748456a7 helpers: Add GitHub commit link generator
d66775ffc06d ARM: dts: sdm845: Suppress verbose output during boot
32498f3b4a39 defconfig: Remove custom extended cmdline
a8a049eaef53 simple_lmk: Improve victim selection and kill process
revert-ts-changes
28c911f9ba6c Revert "sec_ts: mark IRQ as performance critical"
c57c6c044206 Revert "touchscreen: stm: mark IRQ as performance critical"
3302f2b04267 Revert "Revert "input: touchscreen: sec_ts: enable pressure reporting""
1481f256a3a3 Revert "Revert "input: touchscreen: sec_ts: reset the touch controller during resume""
edfba96d5509 Revert "Revert "input: touchscreen: sec_ts: print OK/NG result in factory cal tests""
65b86cbbbbae sec_ts: fix compiler warnings
c7135e5a02fe Revert "input: touchscreen: sec_ts: print OK/NG result in factory cal tests"
225742cb8a99 Revert "input: touchscreen: sec_ts: reset the touch controller during resume"
21014292ecb7 Revert "input: touchscreen: sec_ts: enable pressure reporting"
af48483bfb7d touchscreen: stm: mark IRQ as performance critical
559f973ac5bc sec_ts: mark IRQ as performance critical
dc18915cbbe1 block: clean up iosched configs
e56c14e2a01e defconfig: enable anxiety I/O scheduler
8edf4da85c28 Merge branch 'anxiety-iosched'
07143b94e55a block: anxiety-iosched: make max_writes_starved sysfs tunable
9b5390f1fa88 block: anxiety-iosched: reduce maximum writes starved
ef042f73042d block: anxiety-iosched: don't use size_t type for starvation
d88df4d59a57 block: anxiety-iosched: improve variable & argument naming
5db658780ba0 block: anxiety-iosched: improve Kconfig description
eaba62d50b1d block: anxiety-iosched: further improve code style
c9be1021ef08 block: anxiety-iosched: remove async request discrimination
ccbe59e22e92 block: anxiety-iosched: improve code style
9af9a707f57b block: anxiety-iosched: fix header wording
29eb8ae767c7 block: introduce Anxiety I/O scheduler
b95111a7dc6a ANDROID: modpost: add an exception for CFI stubs
e52295892a8f FROMGIT: modpost: validate symbol names also in find_elf_symbol
71421265eefa UPSTREAM: tcp: Do not reload skb pointer after skb_gro_receive().
b9d42687e410 UPSTREAM: tcp: ack immediately when a cwr packet arrives
dca11c6cf621 tcp_westwood: fix tcp_westwood_info() style mistakes
7504d935f661 tcp: make undo_cwnd mandatory for congestion modules
revert-verity-disable
2ec9f7f90eea Revert "arm64: dts: disable AVB 2.0 verification"
086929b7fc12 Revert "dm-android-verity: permanently disable verification"
c9dc8b18de4e defconfig: disable SMACK
45bfcafac35e Use GCC as the primary compiler (setup scripts)
63ab23871c73 Merge branch 'revert-html5-sony-sched'
cef9fa2dfe60 cs40l2x: fix missing header for wake gestures
7334492fc135 arm64: crypto: build for ARMv8.2, fix GCC flags
906181edffef Revert "Merge branch 'revert-html5-sony-sched'"
cb1872e3f33e Revert "Merge branch 'sultan-boost'"
9746f96c3f41 Revert "defconfig: disable menu cpuidle governor"
0288118e0e51 defconfig: disable more unnecessary drivers
503c90652f05 irqchip: don't force SHOW_RESUME_IRQ
d714956bdb10 flasher: include pigz executable in tools
8c5566a0c74a defconfig: disable hang detection and watchdog
e296df08f801 defconfig: disable IPC logging
c1710ae6b9ba Revert "EXPERIMENTAL: dts: pmi8998: use fully analog display dimming"
4de7b7c177f2 defconfig: disable XZ decompression support
f8f90246ca40 defconfig: disable ram devices and memroy dump
9a3b4a3f7d91 defconfig: disable a lot of stuff
365cea635ac2 Revert "EXPERIMENTAL: sdm845: overclock GPU to 810 MHz"
revert-wake-gestures
a243ce64ee9a defconfig: Remove wake gestures option
248b0a1e5861 Revert "expose vibrator"
2108834564a6 Revert "cs40l2x: fix missing header for wake gestures"
0496c4f093f7 Revert "wake_gestures: sweep2wake, doubletap2wake & sweep2sleep for b1c1"
d5a46ed8ccdc Revert "wake_gestures: fixes and cleanup"
2181563cf0bb Revert "wake_gestures: use correct resolution for blueline"
55d43623118c Revert "wake_gestures: disable vibrate-on-wake by default"
354f0006f5b6 state_notifier: Clean up display state notifier
6e2e91bac77e defconfig: Switch to userspace lmkd
be5d2a14900c Merge branch 'arm64-lib-optimize'
99050d870a3c arm64: Use optimized memcmp
1d21446cae99 arm64: strcmp: align to 64B cache line
db6a9f725ba8 Revert "arm64: strcmp: Align to cache and preload"
58cfd4a16552 FROMGIT: arm64: export tishift functions to modules
1a5d923a6af6 Merge commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
bf28aef43692 Merge commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
revert-westwood-tune
2d9c30dc3353 Revert "tcp_westwood: Bump minimum RTT and lower initial RTT duration"
ab9211fd6ab8 Revert "tcp_westwood: correct minimum RTT and initial RTT duration"
83f0a4d30ba0 Revert "tcp_westwood: bump initial RTT duration"
c3b7b5bcccf1 Merge branch 'revert-lede-net'
a03b76744ed1 Revert "netfilter: conntrack: cache route for forwarded connections"
acd8db927307 Revert "tcp: tsq: add tsq_flags / tsq_enum"
83fbab21185b Revert "tcp: tsq: remove one locked operation in tcp_wfree()"
1c713b620f77 Revert "tcp: tsq: add shortcut in tcp_tasklet_func()"
3ff1ce8a0c97 Revert "tcp: tsq: avoid one atomic in tcp_wfree()"
7f548e83460f Revert "tcp: tsq: add a shortcut in tcp_small_queue_check()"
af4cc392e462 Revert "tcp: tcp_mtu_probe() is likely to exit early"
dd45911f9466 Revert "tcp: tsq: move tsq_flags close to sk_wmem_alloc"
1264ea4050a6 Revert "tcp: add a missing barrier in tcp_tasklet_func()"
fedd1ad9bbf5 Revert "tcp: allow drivers to tweak TSQ logic"
7c7abaa20632 Revert "mm: add support for releasing multiple instances of a page"
aa82ff3a8c65 Revert "mm: rename __alloc_page_frag to page_frag_alloc and __free_page_frag to page_frag_free"
ebaeb74af4dd Revert "mm: rename __page_frag functions to __page_frag_cache, drop order from drain"
154f92054250 Revert "i2c: gpio: Enable working over slow can_sleep GPIOs"
f96b1f517093 Revert "drivers: net: generalize napi_complete_done()"
32b35b832758 Revert "ip6_tunnel: Fix missing tunnel encapsulation limit option"
59366140e446 Revert "ipv6: Need to export ipv6_push_frag_opts for tunneling now."
1ff00466959c Revert "uapi/if_ether.h: prevent redefinition of struct ethhdr"
a5938cfd9c3b Revert "defconfig: enable conntrack route caching"
eba7d1fd9116 Revert "bridge: only accept EAP locally"
9d3be08e29de Revert "spi: use gpio_set_value_cansleep for setting chipselect GPIO"
68fdeef0ce5d Revert "kernel: add a new version of my netfilter speedup patches for linux 2.6.39 and 3.0"
7452b63d7fe3 Revert "netfilter: reduce match memory access"
6864b846cdf1 Revert "netfilter: optional tcp window check"
fc952245bfe8 Revert "kernel: add a small xfrm related performance optimization"
8978a880de39 Revert "net_sched/codel: do not defer queue length update"
69312c46e3df Revert "net: replace GRO optimization patch with a new one that supports VLANs/bridges with different MAC addresses"
e4b680f432ac Merge branch 'sysfs-devicetree-config'
ed89bc4f846a defconfig: enable sysfs devicetree exposure
d9bd05fb18af of: Make CONFIG_OF_KOBJ configurable
d9e2915bb040 of: make kobject and bin_attribute support configurable
56f8f5c92325 mm: Silence vmap() allocation failures based on caller gfp_flags
d02d9b55786f defconfig: disable obscure HID drivers
474e5cc49258 Use the kernel mm data in case the address is more than PAGE_OFFSET
925d89112012 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
c4113cac4525 defconfig: enable verity at most once by default
6fa1e61df24c ANDROID: Add kconfig to make dm-verity check_at_most_once default enabled
e2a106c05c30 defconfig: sync for qrwlock
49a068ce4809 sched/walt: improve the scheduler
551fb409fb9a locking/qrwlock: Prevent slowpath writers getting held up by fastpath
e4dd454fe5e4 locking/qrwlock, arm64: Move rwlock implementation over to qrwlocks
d5d914e242b3 locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
65663f5fdc4d locking/atomic: Add atomic_cond_read_acquire()
42b43939b70e locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'
f7703f21b951 sched/walt: Fix stale max_capacity issue during CPU hotplug
46a7cc7bbdab drivers: cpu_cooling: vote thermal limit on CPUFREQ_INCOMPATIBLE event
rqbalance
ebf3209954b3 rqbalance: Tune delays for performance
623205767f08 rqbalance: Use isolation instead of hotplugging
14837287c488 rqbalance: Reduce balance penalty
27a60e50b18e sched/core: Initialize CPU isolated mask at core init time
e7ccebbc760c kernel: cpu: Mark the boot processor as not isolated
f53d640a26cb cpumask: Simplify num_online_uniso_cpus macro
afcd8c363463 cpumask: Add cpumask for not-isolated CPUs
12ec5b806b87 rqbalance: Introduce a balance penalty configurable parameter
05c2a39c7a01 rqbalance: Be informative of the performance management mode
3d5bf11b5852 cpuquiet: Make the hotplug/isolation switch more robust
4098c115022b cpuquiet: Simplify and make more robust cpuquiet_find_governor
1c579c00e1a3 rqbalance: Use the available CPUs mask for CPU_UPCORE compat
094893430c07 rqbalance: Properly remove cpuhp notification callbacks on stop
e05d99dd6fc6 cpuquiet: sysfs: Protect real-time governor switching with mutex
ae17c646f212 rqbalance: Declare isolation/hotplug runtime switch supported
c05db3d40dca cpuquiet: Switch from/to isolation only if governor is compatible
f00450d5e726 cpuquiet: Restart the governor if runtime-switching isol/hotplug
bc05ba09aa10 cpuquiet: Switch from/to isolation at governor switch time
5045d2934c7c rqbalance: Provide compatibility with CPU isolation
bb30d4c37020 cpuquiet: Add facility to switch from hotplugging to isolation
rt
1a5d923a6af6 Merge commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
bf28aef43692 Merge commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4039e17d68da drm/msm/dsi-staging: Prevent flickerfree from being enabled on b1
ae41b9284a75 arm64: Add functions to get the current device being used
0e347db60a90 cpu_input_boost: Clean up SchedTune boost handling
265cf4de2ffa defconfig: Update SchedTune boost configuration
c2f190c9b557 cpu_input_boost: Revise SchedTune boost configuration
6d68dda951d9 defconfig: Disable bootloader log driver
4c21a9a08785 drm/msm/dsi-staging: Update brightness upon backlight dimmer toggle
9007d0a4be1d Merge branch 'revert-blu-schedutil'
acbbcaf73cb6 defconfig: Remove blu_schedutil options
dd5dd1a0dd45 Revert "cpufreq: blu_schedutil: Introduce initial bringup"
458cf5c426d9 qseecom: Fix typo in app loading message
4ff54ee05378 Revert "cpufreq: blu_schedutil: make iowait boost optional"
511090227fdd Revert "cpufreq: blu_schedutil: add a couple fixes"
0c0a76a4c302 Revert "cpufreq: blu_schedutil: add some bits from Pixel 3"
791b549db61f defconfig: Enable display exposure adjustment driver
b29ed57b56c6 drm/msm/dsi-staging: Hook up configurable display exposure adjustment
rt2
1a5d923a6af6 Merge commit '1ca5c248ecabec2a7cec615fab69c13e61cda68d'
bf28aef43692 Merge commit 'edb07dab40431186d135244b32744d8b8a64f7b0'
a6567f63f092 defconfig: Re-enable legacy CPU frequency governors
13f09d510f13 defconfig: Enable Simple LMK
e327d6f30b79 HID: uhid: Remove the redundant reference counting for open/close
421d0c696d65 defconfig: Disable ChaCha20 through crypto API
0771469f02d5 Revert "cpuidle: don't disable cpuidle when entering suspend"
26822f676027 ion: msm_ion: fix incorrect ion_buffer member assignment
80f98feabf22 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
4039e17d68da drm/msm/dsi-staging: Prevent flickerfree from being enabled on b1
ae41b9284a75 arm64: Add functions to get the current device being used
0e347db60a90 cpu_input_boost: Clean up SchedTune boost handling
265cf4de2ffa defconfig: Update SchedTune boost configuration
c2f190c9b557 cpu_input_boost: Revise SchedTune boost configuration
6d68dda951d9 defconfig: Disable bootloader log driver
4c21a9a08785 drm/msm/dsi-staging: Update brightness upon backlight dimmer toggle
9007d0a4be1d Merge branch 'revert-blu-schedutil'
acbbcaf73cb6 defconfig: Remove blu_schedutil options
dd5dd1a0dd45 Revert "cpufreq: blu_schedutil: Introduce initial bringup"
458cf5c426d9 qseecom: Fix typo in app loading message
4ff54ee05378 Revert "cpufreq: blu_schedutil: make iowait boost optional"
511090227fdd Revert "cpufreq: blu_schedutil: add a couple fixes"
0c0a76a4c302 Revert "cpufreq: blu_schedutil: add some bits from Pixel 3"
791b549db61f defconfig: Enable display exposure adjustment driver
b29ed57b56c6 drm/msm/dsi-staging: Hook up configurable display exposure adjustment
sbench
33ce4966810a Revert "arm64: lib: memory utilities optimization"
1c1b6b59524f arm64: lib: memory utilities optimization
dd76673cfc90 nRevert "arm64: lib: memory utilities optimization"
599d0c3f4727 arm64: lib: memory utilities optimization
0889d2e886c7 Revert "sultan_bench: Use memcmp"
dc08de85f29d sultan_bench: Memset the buf
30670141bf6f Revert "sultan_bench: Use strcmp"
ef3cf4b2e5f1 sultan_bench: Remove power usage and add big freq
b4a517ef8fcb Revert "arm64: lib: memory utilities optimization"
de074249ce27 sultan_bench: Use strcmp
b551a010c667 sultan_bench: Use memcmp
5f27eb42ba5c sultan_bench: Use memmove
f6ab93cec766 sultan bench
a941d4f75d44 Merge tag 'android-9.0.0_r0.73'
9c69bc8e4ccd touchscreen: fts: Fix race conditions in fts diag test interface.
eb1d1aca0543 touchscreen: sec_ts: Fix potential race in sec_ts command execution code path.
8f666f30a7bf touchscreen: sec_ts: Fix array OOB issues in the sec_ts touch driver.
9a45fc1d09a3 overheat: replug to resume charging
e2a9e002cb9a input: touchscreen: sec_ts: use self workqueue for suspend and resume
c13b41261a3d reset/msm-poweroff: Fix to set reboot message
sbench5
e0253caf7853 sultan_bench: bench big cluster
09e15b9fc4e9 sultan_bench: Read power from maxfg power supply
0db4612d9141 sultan_bench: Remove unavailable frequencies
b8228579e7fe bench all freqs
7eed1b30e79b revert osm
a4e5ec67cc86 Revert "Merge branch 'msm-thermal-simple'"
58f17b0c5ae3 sultan_bench: Use sdm845 freqs
7b677b5ad083 sultan-bench-v5
cfac6f552499 Revert "init: 748800"
6a93a23c3404 Revert "sched: Check out to latest Android common kernel state"
3986ee321cfc sched: Allow migrating kthreads into online but inactive CPUs
306189a023d3 sched: Check out to latest Android common kernel state
564d36af1de4 Revert "ARM: dts: sdm845: Enable SDE null packet insertion"
084d6473c0b1 init: 748800
4791f36af3b1 Revert "block: immediately dispatch big size request"
e76e88c4ff0f Revert "Revert "mm: workingset: tell cache transitions from workingset thrashing""
a50228d789c3 Revert "BACKPORT: mm: vmscan: fix IO/refault regression in cache workingset transition"
bab9af21828b Revert "net: mii: add generic function to support ksetting support"
099359ac6a3a Revert "net: mii: report 0 for unknown lp_advertising"
f20d54e39b3d Revert "net/{mii, smsc}: Make mii_ethtool_get_link_ksettings and smc_netdev_get_ecmd return void"
sched-steal
883bdffe72ba HACK: sched/walt: correct negative cpu cycle time
b69ab0fa2185 BACKPORT: sched/fair: Steal work from an overloaded CPU when CPU goes idle
8861c2568b31 FROMLIST: sched/fair: Provide can_migrate_task_llc
0faf647dbdef BACKPORT: sched/fair: Generalize the detach_task interface
d3551b2d9712 BACKPORT: sched/fair: Hoist idle_stamp up from idle_balance
04f3988a39d8 BACKPORT: sched/fair: Dynamically update cfs_overload_cpus
465230411a73 BACKPORT: sched/core: Provide cfs_overload_cpus bitmap
7e341927f9c9 BACKPORT: sched/core: Provide hooks to allocate data shared per LLC
be1bbff09eb5 FROMLIST: sched: Provide sparsemask, a reduced contention bitmap
8d7a15455cf8 sched/fair: remove unused related thread group tracking
99be8eefebf8 Revert "netfilter: match bypass default table"
fc217bb81297 Revert "netfilter: nf_tables: fix mismatch in big-endian system"
7aa6e02029d0 Revert "net: add an optimization for dealing with raw sockets"
03fa5bf35fb6 Revert "kernel: add a few patches for avoiding unnecessary skb reallocations - significantly improves ethernet<->wireless performance"
e37b5f6fc6c7 EXPERIMENTAL: defconfig: enable and use CAKE qdisc as default
8824964b05e8 sch_cake: remove kvzalloc compatibility backport
97bf21340ac4 sch_cake: don't force building as module
9529302008d6 net: allow selecting cake as default qdisc
fdce5356528d net: sched: import sch_cake
f00a3821187b Add 'net/sched/sch_cake/' from commit '581967cba2f465d615b6dc1595e14ae881a56413'
sched-updates
436f0a80967f ANDROID: sched/fair: Make the EAS path aware of prefer-idle
ad5dd318b923 BACKPORT: sched/fair: Select an energy-efficient CPU on task wake-up
9b6dbf281144 BACKPORT: sched/fair: Introduce an energy estimation helper function
c29d6a530679 BACKPORT: sched/topology: Add lowest CPU asymmetry sched_domain level pointer
bd40adbea76f BACKPORT: sched/topology: Reference the Energy Model of CPUs when available
8b5a05628fdc DEBUG: PM_EM: Printk the EM upon registration
c6d66f8b9320 ANDROID: arm64: b1c1_defconfig: Register simplified EM
c8243422580c ANDROID: legacy_em_driver: Add support for freq-power EMs
6881d084e31a ANDROID: drivers: Introduce a legacy Energy Model loading driver
7178c33eba0e BACKPORT: PM: Introduce an Energy Model management framework
e780d567a16b BACKPORT: sched/topology: Relocate arch_scale_cpu_capacity()
7ba62e0439bd sched/fair: Make tick path active migration more robust
be0591e5ce95 sched: Improve the scheduler
39315c9eff47 sched: Don't fail isolation request for an already isolated CPU
cd65dcd59282 sched/walt: don't account CPU idle exit time to task demand
faf3bde4815f sched: Improve the scheduler
556ad3689562 sched: Improve the scheduler
9ec1c9951533 Revert "lib/int_sqrt: optimize initial value compute"
53bb35e5a8c5 helpers: Reboot Android cleanly after kernel flashes
10070be63c04 signal: Refactor lmkd kill acceleration code
sdfat
36ad1a89802f defconfig: enable sdfat filesystem
5127a0e998cb fs: sdfat: Update to version 2.1.8
25315a7d23f8 fs: sdfat: Update to version 2.0.8
b0ac55b04449 sdfat: push rcu_barrier() from deactivate_locked_super() to filesystems
dda0e9dbc62e fs: sdfat: Use clean_bdev_bh_alias instead of unmap_underlying_metadata for >=4.10
4d1850982bd5 fs: sdfat: Stop using CURRENT_TIME_SEC for Linux >= 4.9
30d4234a5bb8 fs: sdfat: 4.14 replaced bi_bdev with a gendisk pointer and partitions index
720836c07af9 fs: sdfat: bio->bi_error got renamed to bio->bi_status on >= 4.13 (Partial)
f85c91ba4f60 fs: sdfat: Add -lineage extraversion to SDFAT_VERSION
2b68162ebcce fs: sdfat: Fix compilation for 32-bit targets
0b4a94faa624 fs: sdfat: Add MODULE_ALIAS_FS for supported filesystems
59d9c2452c1c fs: sdfat: Add config option to register sdFAT for VFAT
ccadace6015b fs: sdfat: Add config option to register sdFAT for exFAT
cb2e01c98283 fs: sdfat: Update to driver version 2.0.6
92c3fcf4fe3c fs: sdfat: Fix compilation without debugging
4704f3d0d934 fs: Import sdFAT driver
b33a749c3866 boeffla_wl_blocker: Block default wakelocks we had before
4b258fee182c usb: f_qc_rndis: Remove unused static variables
d9d3806faba5 msm: ipa: Fix enum-conversion warning
b3dcc9a31d2a soc: qcom: rpm_master_stat: Fix third argument of strlcpy
simple-lmk
0a8f1acf53ed defconfig: Enable Simple LMK
568445d2cd40 simple_lmk: Boost CPU and DDR bus when memory reclaim is invoked
f2c1e5c31444 simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
27ab13084ab4 b1c1_defconfig: Disable debugfs
040c4b00bf3e msm: camera: Always enable bubble recovery for b1c1
42d3815c9b7e b1c1_defconfig: Disable core_ctl driver
5acd58c78726 Merge branch 'fast-display-on'
25d070100472 drm: Boost to the max when powering on the display
30e7d9b0941c drm: Mark the bridge-enable kthread as performance critical
b6defa128744 drm: Enable bridges asynchronously as early as possible
59b075fc5140 defconfig: Use default ld.bfd linker
4bd89a7bdf47 kbuild: Remove experimental tag from LTO and CFI
5a81247826d9 kbuild: Fix typo in LTO config
309dcbd3cdef kbuild: Add support for linking the kernel with LLD
296f23f024a3 Revert "arm64: kernel: force ET_DYN ELF type for CONFIG_RELOCATABLE=y"
606ec6c7087d random: fix inconsistent spinlock usage
4134bb05a3c1 ANDROID: cfi: fix shadow rebasing
e2b002446270 defconfig: Disable Clang Polly optimizations
919e0613b8f7 kbuild: Add support for Clang Polly optimizations
659f0a9c8024 Makefile: Don't assume Clang and GCC are the only compilers
3f80eda067fc ANDROID: arm64: kbuild: only specify code model with LTO for modules
01e05a51d4be ANDROID: kbuild: disable LTO_CLANG with KASAN
3f2a64be76fc cpufreq: schedutil: Enable iowait boost by default
slmk-adj-rbtree
adde88fcb4b8 defconfig: Enable LMK oom_score_adj rbtree optimization
fbb183bd3f22 simple_lmk: Add support for the oom_score_adj rbtree optimization
4ea0f7c6db1e execprog: RCU barrier doesn't guarantee fd to be closed
6ee04ee6e299 f2fs/rapid_gc: do not wait until all invalid blocks are discarded
4dfec8acbe24 Merge branch 'caf-sdm710-sched'
6e52193f94f2 sched/fair: fix compilation after commit d1aff798c840
c6a747dbe2db sched: remove skip_sg
65c63203648f sched/fair: start_cpu() fix for rtg_target case
8096311922ac sched/fair: Improve the scheduler
ca8c4bd32599 sched/fair: Fix redundant load balancer reattempt due to LBF_ALL_PINNED
706d9154195f sched/fair: Allow idle local group to pull tasks from overloaded group
7eba3612016d sched/walt: improve the scheduler
6d0d37a3afe0 sched/walt: improve the scheduler
e6a80985f0b6 init: Bump performance profile boost frequencies
23c9d260f0b5 sched/fair: improve placement logic
a6ade5cc339f Revert "[iov_iter] new primitives - copy_from_iter_full() and friends"
bce23f25ac11 Revert "net: sch_generic: Remove unnecessary watchdog warning"
ffaf462e69d6 init: Update profiles for recent changes
89ebb17b7d19 defconfig: Use default frame boost timeout
90fad1321b33 cpu_input_boost: Include types.h in header
0e8982e08277 cpu_input_boost: Make frame boost timeout configurable
e690b2aef609 drm/atomic: Use input boost instead of general boost
4eac56e10faa defconfig: Remove general boost options
a1150124d7bf cpu_input_boost: Fix indentation and header ordering
5d477b33f407 Revert "cpu_input_boost: add API for general CPU boosting"
dcb9a50691d5 b1c1_defconfig: Update performance settings
7dcd32712506 defconfig: Enable Simple LMK
60967fd20903 simple_lmk: Boost CPU and DDR bus when memory reclaim is invoked
a50142ad8716 simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
slub-updates
ef2b12eed329 Revert "slub: make ->inuse unsigned int"
a3322e442764 Revert "slub: make ->object_size unsigned int"
beb8e766e189 Revert "slub: make ->size unsigned int"
eb5fc570882a slub: remove 'reserved' file from sysfs
7e5c406aa604 slub: remove kmem_cache->reserved
a2a4447e0a79 slab,slub: remove rcu_head size checks
476beb65d22e mm/slub: remove obsolete comment
ba0ae8b3fba6 slub: make size_from_object() return unsigned int
d0a378f838a8 slub: make slab_index() return unsigned int
96da3c57ac25 slub: make ->size unsigned int
48eb8f1777c5 slub: make ->object_size unsigned int
91cf721dbded slub: make ->inuse unsigned int
82ba084ad1b7 slub: make ->align unsigned int
e7ac3364a12c slub: make ->reserved unsigned int
678e89e50ffc slub: make ->remote_node_defrag_ratio unsigned int
bc403f896da5 EXPERIMENTAL: sdm845: overclock GPU to 810 MHz
18b7efdbfe54 Merge branch 'caf-mm-misc'
807bf376ed01 mm: vmalloc: don't print lowmem information
32516a7f8f3f mm: cma: retry only on EBUSY
69273ec3b034 mm: Kconfig: Add support for config size of purging vmap_area
68209b6380a4 Merge branch 'spf'
ce9bf98b5140 defconfig: enable speculative page fault
6bfb66e67eaa mm: disable fault around on emulated access bit architecture
428a7279beb7 mm: make faultaround produce old ptes
7ee5cfef0147 Revert "mm: memory: reduce fault_around_bytes"
d644d89df68a arm64/mm: add speculative page fault
3063aeaeefa8 arm64/mm: define ARCH_SUPPORTS_SPECULATIVE_PAGE_FAULT
2c3ef0fc2b7d mm: add speculative page fault vmstats
944617a92364 mm: speculative page fault handler return VMA
9e01b88b3e32 mm: adding speculative page fault failure trace events
b87ad03df49e mm: provide speculative fault infrastructure
9a6b91130079 mm: protect mm_rb tree with a rwlock
bc8e541b8786 mm: introduce __page_add_new_anon_rmap()
6e608fa6ed57 mm: introduce __vm_normal_page()
7cd18d41dd15 mm: introduce __lru_cache_add_active_or_unevictable
f98a70f41c11 mm/migrate: Pass vm_fault pointer to migrate_misplaced_page()
ef820c3f46da mm: cache some VMA fields in the vm_fault structure
6e730d6f0f38 mm: protect SPF handler against anon_vma changes
e55cd279301b mm: protect mremap() against SPF handler
4cc259b725be mm: protect VMA modifications using VMA sequence count
6912b5b55198 mm: VMA sequence count
1bd7652db8c9 mm: introduce INIT_VMA()
ac75415d939b mm: make pte_unmap_same compatible with SPF
33ede21ab88d mm: introduce pte_spinlock for FAULT_FLAG_SPECULATIVE
6dea641dfc6e mm: prepare for FAULT_FLAG_SPECULATIVE
1d129972f370 mm: introduce CONFIG_SPECULATIVE_PAGE_FAULT
a81870d6ee32 helpers: reboot after flashing kernel in Android
f0f8ef60778c sched/walt: Fix the memory leak of idle task load pointers
spf
ce9bf98b5140 defconfig: enable speculative page fault
6bfb66e67eaa mm: disable fault around on emulated access bit architecture
428a7279beb7 mm: make faultaround produce old ptes
7ee5cfef0147 Revert "mm: memory: reduce fault_around_bytes"
d644d89df68a arm64/mm: add speculative page fault
3063aeaeefa8 arm64/mm: define ARCH_SUPPORTS_SPECULATIVE_PAGE_FAULT
2c3ef0fc2b7d mm: add speculative page fault vmstats
944617a92364 mm: speculative page fault handler return VMA
9e01b88b3e32 mm: adding speculative page fault failure trace events
b87ad03df49e mm: provide speculative fault infrastructure
9a6b91130079 mm: protect mm_rb tree with a rwlock
bc8e541b8786 mm: introduce __page_add_new_anon_rmap()
6e608fa6ed57 mm: introduce __vm_normal_page()
7cd18d41dd15 mm: introduce __lru_cache_add_active_or_unevictable
f98a70f41c11 mm/migrate: Pass vm_fault pointer to migrate_misplaced_page()
ef820c3f46da mm: cache some VMA fields in the vm_fault structure
6e730d6f0f38 mm: protect SPF handler against anon_vma changes
e55cd279301b mm: protect mremap() against SPF handler
4cc259b725be mm: protect VMA modifications using VMA sequence count
6912b5b55198 mm: VMA sequence count
stable-upstream
8fe92a364b1c Merge tag 'v4.9.138' into stable-upstream
41ff7af506e0 defconfig: enable adreno idler
5484a1b73c59 adreno_idler: convert to state notifier
ec54e1677060 maple-iosched: convert to state notifier
e78c93181e8c Revert "maple-iosched: convert to use fb_notifier"
92bf7d2367eb drm/msm: dsi-staging: hook up state notifier
99e807187372 drivers: add state notifier
1f0948cbaf4a msm_adreno_tz: Add display state awareness
bfb66618b06c adreno_idler: Declare display_on correctly
5537b3942ccd adreno_idler: Add display state awareness
85893fbec7ec adreno idler: Ramp down more agressively
75a1959289e1 adreno_idler: fix typos :)
01aa0a2c98d4 adreno_idler: fix-up some comments
010d3ab9ae26 adreno_idler: fix-up type definitions
142063ca12d1 adreno_idler: remove frequency bump
ec8d8a839feb adreno_idler: switch to count based instead of time based
ea65e117e8c1 Introduce Adreno idler for devfreq-based Adreno devices
426883b431e5 random: increase read and write wakeup thresholds
f87712a380e2 Revert "defconfig: massive debloat"
bf2d9d5e8724 Revert "sched: features: disable gentle fair sleepers"
stune-boost
a4940e26992c sched/tune: improve code style of Dynamic SchedTune Boost
e8ac7fc2ba80 Revert "HACK: sched/tune: clamp boosts with a value of 10"
53307c8f1ee1 powerhint: disable schedtune boost
ec3b063a2d50 sched/tune: block userspace boosting when in-kernel boost is enabled
b710bbe7be00 defconfig: enable Dynamic Schedtune Boost
5072f1eb5155 cpu_input_boost: implement multi-level Dynamic SchedTune Boost
08fc59aedd48 sched/tune: use dummy functions when Dynamic Schedtune Boost is disabled
4db259beabb9 sched/tune: Switch Dynamic Schedtune Boost to a slot-based tracking system
6793ee8b7918 sched/stune: Rename stune_boost() to do_stune_sched_boost()
1db22d5c1419 sched/tune: Rename dynamic_boost parameter to sched_boost
bbdbfcf0ba72 sched/tune: Track active boosts on a per-Schedtune basis
73c50fc492c8 sched/tune: Reset Dynamic Schedtune Boost only if no more boosts running
f357311d9684 sched/tune: Introduce stune_boost() function
a6f3778ee6ed sched/tune: Refactor do_stune_boost()
26381d17d37e sched/tune: Create dynamic_boost SchedTune parameter
e75b53202d56 sched/tune: Rename dynamic_boost_write() to dynamic_boost()
66059f0f232f sched/tune: Add initial support for Dynamic SchedTune Boost
84048b9a68ea Revert "ipv4: enable rp filter by default on all interfaces"
9466e12aee96 Revert "defconfig: enable GCMA and cleancache"
edce5e2d775a ipv4: enable rp filter by default on all interfaces
stune-boost-noslot
c374b534bd89 powerhint: disable schedtune boost
01a16cdc746c sched/tune: block userspace boosting when in-kernel boost is enabled
b32e62a67c75 defconfig: enable Dynamic Schedtune Boost
ea563f0ebc49 cpu_input_boost: implement multi-level Dynamic SchedTune Boost
461cf8f007be sched/tune: use dummy functions when Dynamic Schedtune Boost is disabled
f397e564e94b sched/tune: introduce modify_stune_boost() function
6793ee8b7918 sched/stune: Rename stune_boost() to do_stune_sched_boost()
1db22d5c1419 sched/tune: Rename dynamic_boost parameter to sched_boost
bbdbfcf0ba72 sched/tune: Track active boosts on a per-Schedtune basis
73c50fc492c8 sched/tune: Reset Dynamic Schedtune Boost only if no more boosts running
f357311d9684 sched/tune: Introduce stune_boost() function
a6f3778ee6ed sched/tune: Refactor do_stune_boost()
26381d17d37e sched/tune: Create dynamic_boost SchedTune parameter
e75b53202d56 sched/tune: Rename dynamic_boost_write() to dynamic_boost()
66059f0f232f sched/tune: Add initial support for Dynamic SchedTune Boost
84048b9a68ea Revert "ipv4: enable rp filter by default on all interfaces"
9466e12aee96 Revert "defconfig: enable GCMA and cleancache"
edce5e2d775a ipv4: enable rp filter by default on all interfaces
b62271b2173b Revert "defconfig: disable EDAC"
40df3dfc3478 defconfig: bump RCU CPU stall timeout
sultan-b1c1
015a660569e1 Revert "module: always return success"
6f790a7d5c7c Revert "Revert "Revert "staging: qcacld-3.0: Load driver on late initcall when not built as a module"""
81332f8648b1 Revert "Revert "Revert "staging: qcacld-3.0: Load driver at device_initcall"""
825008d90edf drm/atomic: Fix compilation with kernel boosting disabled
e6d610e116f4 ufdt: Fix compilation of libufdt
4eb0982a35a2 char: mem: Link /dev/random to /dev/urandom
734dc00f93ff Revert "random: always use non-blocking pool"
82f23c78b0c0 defconfig: Embed full DTBs in kernel image
79a4965b261c boot: Embed fully integrated DTBs instead of using dtbo partition
950db834cdc7 drm/atomic: Only boost if last input was within 2500 ms
a09ba625f259 drm/atomic: Boost CPU and DDR bus when committing a new frame
18301ee8951c Revert "drm: msm: sde: Boost CPU when a new frame is ready to be committed"
67dbc92f6bb8 Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app"
7fa8b28727aa defconfig: Clean up and optimize
d156f80117b3 Revert "cpu_input_boost: expose API for boosting CPUs on wake"
bea6e98b4c7e mkdtimg: Bundle upstream python rewrite as submodule
ea6a255bd7f0 dtc: Bundle AOSP's fork of dtc
6a2c7eb4e82d drm: Mark the bridge-enable kthread as performance critical
14d9d25dcfe0 drm: Boost to the max when powering on the display
3017b87d5525 drm: Enable bridges asynchronously as early as possible
sultan-boost
cb875b61aa20 defconfig: enable input boost and devfreq boost
a539ef31f60e kernel: boost Lawnchair v2 when becoming top-app
9e0e90092bee kernel: Increase Pixel launcher top-app boost duration to 1000 ms
e7d3202697f9 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
1721fed88285 cpu_input_boost: Simplify bitwise operations used to store boost state
8b1798e3c741 kernel: Boost CPU to the max when Pixel launcher becomes a top app
2d502aac113d devfreq: Introduce devfreq boost driver
5b5d2ecaf56b msm: performance: prevent the driver from handling userspace boosts
5d64f8a5eafc cpu_input_boost: expose input freqs and duration to userspace
c94a9b620ba6 cpu_input_boost: Destroy workqueue on error path in init
648b65d8f622 cpu_input_boost: Fix and refactor max boost logic
577d84346871 kernel: Boost all CPUs to the max when userspace launches an app
f432329e1827 cpu_input_boost: Add API for boosting all CPUs to max frequency
782bee91c897 cpufreq: Kill userspace CPU boosting entirely
90c383c28abd drm: msm: sde: Boost CPU when a new frame is ready to be committed
26443aa35f81 cpu_input_boost: Introduce driver for event-based CPU boosting
e87cea3e5dec zram: revise default allocator config option
ca03925f40c4 ARM: dts: sdm845: Remove redundant CPU bandwidth devfreq devices
7cd30a3a75e5 defconfig: enable zpool
62f65141fb52 zram: update zram to use zpool
sultan-patches
ec34daaf94f8 Revert "sched/walt: Fix memory leaks in init_new_task_load"
40039ac94eaf soc: qcom: smp2p: Fix compile error when debugfs is disabled
7b2a948537b0 b1c1_defconfig: Disable debugfs
b95f542ab764 misc: mnh: Enable debugfs usage
549271d4d269 wakeup: Enable debugfs usage
fb12e19f5900 debugfs: Always compile core debugfs driver for Android kernels
f9971f66ddbe soc: qcom: glink: Fix compile errors when debugfs is disabled
572914e21076 msm: sps: Fix compile errors when debugfs is disabled
769269e34e5a power: qpnp-fg-gen3: Don't bail out when debugfs creation fails
d6cf9472b0ed Revert "qpnp-fg-gen3: Don't bail out when debugfs creation fails"
04c076ff4c5b msm: ipa3: Fix compile errors when debugfs is disabled
72bef46a4ccf Revert "cpu-clk-osm: use CLK_GET_RATE_NOCACHE for pwrcl and perfcl clk"
4ea2d9ac1fd2 msm: sde: Fix compile errors when debugfs is disabled
42baaefdf34c Revert "Fix compile errors when debugfs and other debugging is disabled"
b4840a2381f9 drm/msm: Don't bail out when debugfs creation fails
c12102d22338 drm/msm/dsi-staging: Don't bail out when debugfs creation fails
2502014caf06 drm/msm/sde: Fix compile errors when debugfs is disabled
1627852e0781 debugfs: Define debugfs_create_file_unsafe when debugfs is disabled
0527e9a36df0 firmware: qcom: Remove debugfs dependency from tz-log driver
7127c25ff37d crypto: msm: Don't bail out when debugfs creation fails
swap2
ad98312482c9 mm, swap: fix false error message in __swp_swapcount()
8daef858dfea mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
9915e7d55e0d mm, swap: skip swapcache for swapin of synchronous device
387bfd0c12ff swap: add block io poll in swapin path
df8c42ca7509 mm, swap: introduce SWP_SYNCHRONOUS_IO
b9148e656400 init: set PowerHAL interaction boost duration to 64 ms
e8702b8330d8 cpu_input_boost: refactor last input boost event variable name
46f057f55f87 Merge branch '4.12-swap'
69b8317b8d66 swap: Remove obsolete sentence
982e6c8e3022 mm, swap: use kvzalloc to allocate some swap data structures
850c511128e4 mm, swap: remove unused function prototype
37cce266aeba mm, swap: avoid lock swap_avail_lock when held cluster lock
f7ee8d7e9653 mm, swap: improve readability via make spin_lock/unlock balanced
dcde2b8683c8 mm, swap: fix comment in __read_swap_cache_async
fe2d8bb207b7 mm, swap: Fix a race in free_swap_and_cache()
5dbfcb786412 mm, swap: Remove WARN_ON_ONCE() in free_swap_slot()
06e81ebec395 mm/swap: don't BUG_ON() due to uninitialized swap slot cache
48c5d352d5fc mm/swap: skip readahead only when swap slot cache is enabled
8642dce26005 mm/swap: enable swap slots cache usage
e3ab9391e3c5 mm/swap: add cache for swap slots allocation
a5ada5769b20 mm/swap: free swap slots in batch
d2fe55a16671 mm/swap: allocate swap slots in batches
7e73c0d8f8e6 mm/swap: skip readahead for unreferenced swap slots
f92b0873a009 mm/swap: split swap cache into 64MB trunks
e08ff5a8ceba mm/swap: add cluster lock
2675919a9a5e mm/swap: fix kernel message in swap_info_get()
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
6a9f7f219309 Revert "defconfig: bump input boost duration to 80 ms"
946e74073de3 EXPERIMENTAL: defconfig: disable devfreq boost
5ec4c7fc6978 cpu_input_boost: only kick general boost when the screen is on
a81c4ddf8f54 Revert "Merge branch 'zram-skip-swapcache'"
fd315d111ffe Revert "Revert "scsi: ufs: disable clock scaling""
322a7c119a5b Merge branch 'zram-skip-swapcache'
1d3e0e36ba29 bdi: introduce BDI_CAP_SYNCHRONOUS_IO
3f624bdfd133 mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
98b7cba2e8b4 mm, swap: skip swapcache for swapin of synchronous device
f22e34c09b33 mm/page_io.c: fix oops during block io poll in swapin path
47796050ab86 swap: add block io poll in swapin path
ce25f65db6ba mm, swap: introduce SWP_SYNCHRONOUS_IO
2a6176cea3d2 scripts/wireguard: Limit connection time to 30 seconds
efbf9b6f46f5 Revert "state_notifier: add a third case for boosting"
d24c9362eb06 qpnp-fg: adjust percentage calculation formula
decce9a2511f Revert "scsi: ufs: disable clock scaling"
sysfs-devicetree-config
ed89bc4f846a defconfig: enable sysfs devicetree exposure
d9bd05fb18af of: Make CONFIG_OF_KOBJ configurable
d9e2915bb040 of: make kobject and bin_attribute support configurable
56f8f5c92325 mm: Silence vmap() allocation failures based on caller gfp_flags
d02d9b55786f defconfig: disable obscure HID drivers
474e5cc49258 Use the kernel mm data in case the address is more than PAGE_OFFSET
925d89112012 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
c4113cac4525 defconfig: enable verity at most once by default
6fa1e61df24c ANDROID: Add kconfig to make dm-verity check_at_most_once default enabled
e2a106c05c30 defconfig: sync for qrwlock
49a068ce4809 sched/walt: improve the scheduler
551fb409fb9a locking/qrwlock: Prevent slowpath writers getting held up by fastpath
e4dd454fe5e4 locking/qrwlock, arm64: Move rwlock implementation over to qrwlocks
d5d914e242b3 locking/qrwlock: Use atomic_cond_read_acquire() when spinning in qrwlock
65663f5fdc4d locking/atomic: Add atomic_cond_read_acquire()
42b43939b70e locking/qrwlock: Use 'struct qrwlock' instead of 'struct __qrwlock'
f7703f21b951 sched/walt: Fix stale max_capacity issue during CPU hotplug
46a7cc7bbdab drivers: cpu_cooling: vote thermal limit on CPUFREQ_INCOMPATIBLE event
47d5c6b29ec6 cpufreq: add CPUFREQ_INCOMPATIBLE event in policy notifiers
cabc5746dd64 Revert "defconfig: debloat"
tap-boost
d649d84913ab cpu_input_boost: Introduce tap boost
5b386cf16bef helpers: Ensure the System.map archive is created in mkzip
f96584328479 Revert "Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app""
91b580936147 ARM: dts: b1: Apply recent C1 display changes
b77997dc796e cpu_input_boost: Rework scheduling setup
3a87cb22f75a ARM: dts: b1: Revert partial update
f257a1af79da msm: camera: Improve camera power consumption
59826c6ed467 sched/fair: Add bias schedtune boosted tasks sched feature
4cd54e9d9694 init: Make DYNAMIC_STUNE_BOOST depend on CGROUP_SCHEDTUNE
fb26795f602d ARM: dts: b1c1: Enable display partial update
eb704b5fa635 drm/msm/sde: sanitize debugfs inputs when reading mdp memory
4b3af8789790 drm/msm/sde: make LUTDMA kickoff as blocking for video mode
46f5866c21b4 msm/sde: prevent double register of input handler
40839475c651 drm/msm/dp: return number of displays as 0 if dp node is disabled
395aa98c6a4e drm/msm/sde: fix the sui in-progress check
b10c2306f69d drm/msm/sde: increase ahb bus vote on first frame
a055d0cf0a2d drm/msm/dp: clear CP_IRQ bit during hdcp2p2 authentication
26828ff03078 drm/msm/sde: update CWB detection logic
78cf33811923 drm/msm/sde: fix arguments of usleep_range function
6373de8da4c4 drm: msm: sde: control idle-pc through crtc property
tbuild
fd117cedaf43 defconfig: Update to stable version v16
970271bd75fa kbuild: Disallow enabling CFI shadow if modules are disabled
b4f1111f7ffa defconfig: Disable /proc/kallsyms
dc3e2f9e735b kallsyms: Allow /proc/kallsyms to be disabled at compile time
788a389bbdcf Merge branch 'revert-lmk-rbtree'
83760ef17306 Revert "drivers:lmk: implement task's adj rbtree"
9fbe73b54ea3 Revert "lmk: add static keywords to locally used variables"
90f1e223cbc2 Revert "drivers:lmk: Fix double delete issue"
0b84f9dbe3d9 Revert "drivers:lmk: Fix null pointer issue"
2f7178880183 Revert "fs: support task's adj rbtree"
584143d1f2e6 Revert "defconfig: Enable Simple LMK"
629bb4e7567f Revert "fs: avoid adding non-thread-group task to LMK rbtree"
80198f0f5075 Revert "kernel: support task's adj rbtree"
9937933fd2b2 Revert "kernel: avoid adding non-thread-group task to LMK rbtree"
9d36a6ff7fa2 Revert "defconfig: enable LMK rbtree optimization"
0f06ad478eac defconfig: Enable hang detection
eb2d6b50785a defconfig: Re-enable most stock security features
aea3c9be8c9b simple_lmk: Kill services before killing the launcher
c889ea52f680 defconfig: Update to stable version v15
e475b1917bc0 cpu_input_boost: Suppress input boost if duration is 0
a39be7b9d7be init: Tune schedutil ratelimits in profiles
ab868a067a61 kernel: Only boost for 32 ms on zygote fork
e2f9826826b9 kernel: Boost DDR bus on zygote fork
69f761865b33 kernel: Only boost on fork if the screen is on
b418357d64f5 kernel: Boost whenever a zygote-forked process becomes a top app
fe469b64a032 Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app"
7cccbf8f3047 init: Reduce frame boost timeout on battery profile
5ccba1c5371a cpu_input_boost: Cancel general unboost work alongside other boosts
8c350816eb4a defconfig: Sync
tcp-internal-pacing
a76986381387 tcp: internal implementation for pacing
84df36ea29de sock: add sk_dst_pending_confirm flag
4f5090620cf2 Merge branch 'tcp-tsq-shift'
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
ce1f3a498696 mm: ksm: Optimize defaults
95c1830f673a mark qcedev data const
fbb3c3b99576 UPSTREAM: arm64/mmap: properly account for stack randomization in mmap_base
45d9c125ef37 ANDROID: uid_sys_stats: Copy task_struct comm field to bigger buffer
tcp-jiffies32
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
tcp-misc-1
84e67d61e1dc defconfig: switch to BBR as default TCP congestion control algorithm
1fa80dbb96d5 tcp_bbr: apply PROBE_RTT cwnd cap even if acked==0
96a6956a83ce tcp_bbr: in restart from idle, see if we should exit PROBE_RTT
0a6fe26edb75 tcp_bbr: add bbr_check_probe_rtt_done() helper
88bf5820e8ad tcp_bbr: fix bbr pacing rate for internal pacing
5717034994f6 net-tcp_bbr: set tp->snd_ssthresh to BDP upon STARTUP exit
f075471170bc tcp_bbr: remove bbr->tso_segs_goal
bf3667ec084d tcp_bbr: better deal with suboptimal GSO (II)
03692aadc06c tcp: avoid min RTT bloat by skipping RTT from delayed-ACK in BBR
d73f7d46a65b tcp: internal implementation for pacing
4f5090620cf2 Merge branch 'tcp-tsq-shift'
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
tcp-pacing
69007ccf6daf tcp: internal implementation for pacing
ec041dec798f Revert "EXPERIMENTAL: defconfig: enable Simple LMK"
9303c51cbd13 devfreq: simple_gpu_algorithm: sync memory before sending the commands.
929d642df878 devfreq: tune Simple GPU algorithm
fe07d99f6086 devfreq: add Simple GPU Algorithm.
39f008582553 HACK: sched/tune: clamp boosts with a value of 10
9b53c1788a9c Merge branch 'simple-lmk'
0471b1eb291b EXPERIMENTAL: defconfig: enable Simple LMK
2191be1f9493 simple_lmk: Limit mem reclaim invocation to once per OOM'd allocation
04ce3bfebff5 simple_lmk: Boost CPU and DDR bus when mem reclaim is invoked
5727a13802d1 simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
d11017cdcbda helpers: fix inc helper not passing arguments
2802009258ca Merge branch 'caf-sched'
4b5a9c6ff47c sched/fair: Improve no-hz idle balance kicking in misfit task scenario
9c3fde84e7e6 sched: rt: Use RCU lock in rt task cpu select path
7a3e65cadc15 sched: Fix lockdep warning for rq locks
4ba6fb4482fb sched/fair: dont run energy calculation unless necessary
4c47923619a0 sched: improve trace prints
788561e00487 sched: energy: rebuild sched_domains with actual capacities
7eb072a145a3 sched: walt: use_cycle_counter check before rq lock held
2734e6985281 sched: walt: Add BUG_ON() when wallclock goes backwards
6ce4cb6ea7fa Revert "sched: Remove sched_ktime_clock()"
deb0504f47af sched/fair: Force balancing on NOHZ balance if local group has capacity
264433dc5d79 sched: Avoid placing task on isolated prev_cpu
c6e096e57c2f disable crc check
553619416645 ANDROID: sched/tune: fix boost_group spin_lock re-initialization
0bda369ab05a ANDROID: sched/tune: cleanup schedtune_boostgroup_{init,release}
4dbc35825652 ANDROID: sched/tune: remove unused variable
fdbe09d22841 ANDROID: sched/fair: cosmetics
f5f9384a52e2 core_ctl: Isolate not_preferred CPUs first during max_cpus limiting
fc134a5b35e3 sched/cpupri: Exclude isolated CPUs from the lowest_mask
224991c461af UPSTREAM: sched/fair: Consider RT/IRQ pressure in capacity_spare_wake
1512e40cb05e sched: ceil idle index to prevent from out of bound accessing
de507c4f8001 sched: prevent out of bound access in sched_group_energy()
e2f32fcf902b Merge branch 'revert-html5-sony-sched'
15794ec2a4ad Revert "sched: check pinned tasks before balance"
c307511c3357 Revert "sched: set loop_max after rq lock is taken"
76efb43f2bc9 Revert "sched: set number of iterations to h_nr_running"
93d6ba5f05bf Revert "sched: ignore task_h_load for CPU_NEWLY_IDLE"
e757bdf1de10 Revert "sched/fair: Search a task from the tail of the queue"
997a6fdbb0db Revert "sched: boost: Don't try to kick idle CPU"
afe34af9298e lowmemorykiller: enable oom reaper
6781c343a06a defconfig: enable input boost and devfreq boost
cead983d552a kernel: boost Lawnchair v2 when becoming top-app
7cad4b7a2d80 kernel: Increase Pixel launcher top-app boost duration to 1000 ms
f7a8c3c2f1c8 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
bb909336b72c cpu_input_boost: Simplify bitwise operations used to store boost state
cdff042e64c0 kernel: Boost CPU to the max when Pixel launcher becomes a top app
c53a1b37ce7d devfreq: Introduce devfreq boost driver
a367652187d8 msm: performance: prevent the driver from handling userspace boosts
405c0336b3d3 cpu_input_boost: expose input freqs and duration to userspace
tcp-tsq-shift
e2f79aab864b net: rmnet_data: Set pacing shift
a268d5e83e7a net: sk_pacing_shift_update() helper
0f7d1ee83107 tcp: allow drivers to tweak TSQ logic
7e670a104b32 tcp: avoid min-RTT overestimation from delayed ACKs
f88e58121135 tcp: tsq: remove one locked operation in tcp_wfree()
b526a72778a6 tcp: tsq: add tsq_flags / tsq_enum
5e0985ad52a8 EXPERIMENTAL: defconfig: disable Wi-Fi TCP Segmentation Offload (TSO)
53fcd6696bfe Merge branch 'tcp-jiffies32'
97228d006621 dccp: do not use tcp_time_stamp
8acaec8f2615 tcp: replace misc tcp_time_stamp to tcp_jiffies32
029ca7a4ff23 tcp_lp: cache tcp_time_stamp
e961d4c68aca tcp: use tcp_jiffies32 in __tcp_oow_rate_limited()
6919aac77af5 tcp: use tcp_jiffies32 to feed probe_timestamp
9dc1f82bcaca tcp: use tcp_jiffies32 for rcv_tstamp and lrcvtime
cdd2aaa9cd6f tcp: bic, cubic: use tcp_jiffies32 instead of tcp_time_stamp
d4b86e3c440d tcp: use tcp_jiffies32 to feed tp->snd_cwnd_stamp
1a9fbf098204 tcp: use tcp_jiffies32 to feed tp->lsndtime
2f140e6cdde0 Merge branch '4.10-kernel-misc'
6ddf3b5e79b7 Revert "nohz: Fix collision between tick and other hrtimers"
cfcfa5767137 tick/broadcast: Prevent deadlock on tick_broadcast_lock
8798ff424c9c tick/nohz: Fix possible missing clock reprog after tick soft restart
29a43fe34d70 tracing/kprobes: Fix __init annotation
e214a6ff3614 capability: export has_capability
5f05546c8e3a nohz: Fix collision between tick and other hrtimers
7596fabb96b6 bpf: do not use KMALLOC_SHIFT_MAX
6e4b4ebfabc1 audit: Fix sleep in atomic
a60fd1886556 ktime: Get rid of ktime_equal()
d87caaf396c0 ktime: Cleanup ktime_set() usage
cc6c6f8a18c5 ktime: Get rid of the union
52c7af76f88d clocksource: Use a plain u64 instead of cycle_t
f366000dcf55 fsnotify: Remove fsnotify_duplicate_mark()
e116f254364a move aio compat to fs/aio.c
dd83d9772d35 uprobes: Fix uprobes on MIPS, allow for a cache flush after ixol breakpoint creation
27de82b0bea4 printk: Remove no longer used second struct cont
655d6cba6949 cpu/hotplug: Clarify description of __cpuhp_setup_state() return value
a3aaf9f3e0e1 printk: remove games with previous record flags
efa392b14b04 posix-timers: give lazy compilers some help optimizing code away
a89279bf2c5d sysctl: add KERN_CONT to deprecated_sysctl_warning()
b4ac38110264 kexec: add cond_resched into kimage_alloc_crash_control_pages
ef12b00456d7 coredump: clarify "unsafe core_pattern" warning
48e6a1bf6451 audit: use proper refcount locking on audit_sock
dbfb606359b2 audit: don't ever sleep on a command record/message
6797e41751ca audit: handle a clean auditd shutdown with grace
426dabd816fa audit: wake up kauditd_thread after auditd registers
12eae387bce6 audit: rework audit_log_start()
769a499e9b68 audit: rework the audit queue handling
2ba0d846ff6d audit: rename the queues and kauditd related functions
22c6b2c31143 audit: queue netlink multicast sends just like we do for unicast sends
0bb4f703b8b2 audit: fixup audit_init()
84b7799fa7a1 audit: move kaudit thread start from auditd registration to kaudit init (#2)
af55fcafa14c Remove last traces of ikconfig.h
bf556aa355bc hung_task: decrement sysctl_hung_task_warnings only if it is positive
3736d10dd0fd kernel/fork: use vfree_atomic() to free thread stack
2d5b3c58b985 prctl: remove one-shot limitation for changing exe link
bcef9c963d9c kthread: add __printf attributes
b43013711623 kprobes/trace: Fix kprobe selftest for newer gcc
f7cc5c18ddf7 tracing/kprobes: Add a helper method to return number of probe hits
82fd205d247c tracing: Allow benchmark to be enabled at early_initcall()
e707ed9a67bc tracing: Have system enable return error if one of the events fail
c2748bfd6515 tracing: Do not start benchmark on boot up
9d5ab394cfbb tracing: Have the reg function allow to fail
613f67f54e63 timekeeping: Use mul_u64_u32_shr() instead of open coding it
307cde23c30a timekeeping: Get rid of pointless typecasts
0ad918742785 timekeeping: Make the conversion call chain consistently unsigned
0e623cdf253f kthread: Don't abuse kthread_create_on_cpu() in __kthread_create_worker()
b078c77add1c kthread: Don't use to_live_kthread() in kthread_[un]park()
3bcfbaac9d55 kthread: Don't use to_live_kthread() in kthread_stop()
29d225215670 Revert "kthread: Pin the stack via try_get_task_stack()/put_task_stack() in to_live_kthread() function"
3cf592bf1f2d kthread: Make struct kthread kmalloc'ed
bba4fd5cf543 bpf: fix loading of BPF_MAXINSNS sized programs
8776d025083e clocksource: export the clocks_calc_mult_shift to use by timestamp code
aaa547b21d23 tracing/rb: Init the CPU mask on allocation
40e030d9a9b7 audit_log_{name,link_denied}: constify struct path
556660bea136 fsnotify: constify 'data' passed to ->handle_event()
d2f2532980ef [iov_iter] new primitives - copy_from_iter_full() and friends
2f00193a7e0e tracing/rb: Convert to hotplug state machine
dd486aad35b8 audit: remove useless synchronize_net()
754e6902ca17 alarmtimer: Add tracepoints for alarm timers
b47cde43d813 kexec_file: Factor out kexec_locate_mem_hole from kexec_add_buffer.
f16aaeaa1530 kexec_file: Change kexec_add_buffer to take kexec_buf as argument.
f234b162510a kexec_file: Allow arch-specific memory walking for kexec_add_buffer
223ef106152b ring-buffer: Force rb_end_commit() and rb_set_commit_to_write() inline
a9b7215bf623 ring-buffer: Froce rb_update_write_stamp() to be inlined
f9b372987769 ring-buffer: Force inline of hotpath helper functions
14a10e46988c tracing: Make __buffer_unlock_commit() always_inline
40e466014b51 tracing: Make tracepoint_printk a static_key
8c56c19ba513 ring-buffer: Always inline rb_event_data()
e97348634b48 ring-buffer: Make rb_reserve_next_event() always inlined
1c6573e357f9 tracing: Add error checks to creation of event files
f4cf6e7a000f tracing: Add hook to function tracing for other subsystems to use
c089c0c4f920 sched/nohz: Convert to hotplug state machine
a451100f3ecf audit: fix formatting of AUDIT_CONFIG_CHANGE events
c80d22eb12ec audit: skip sessionid sentinel value when auto-incrementing
87117ed2f560 netns: make struct pernet_operations::id unsigned int
6cf319c57d27 kernel/printk: Block cpuhotplug callback when tasks are frozen
6d236fe50f81 posix_cpu_timers: Move the add_device_randomness() call to a proper place
731f46674cac timer: Move sys_alarm from timer.c to itimer.c
dc285b7f4e25 ftrace: Provide API to use global filtering for ftrace ops
b0993cd68d7e bpf: Refactor codes handling percpu map
aa21a93a254d bpf: Add percpu LRU list
0432def8ffd0 bpf: LRU List
10f837774be9 tracing: Allow wakeup_dl tracer to be used by instances
1b3367357bf6 tracing/filter: Define op as the enum that it is
cee4a9e5b368 tracing: Optimise comparison filters and fix binary and for 64 bit
b459ef981668 ftrace: Support full glob matching
2d38e237035d audit: tame initialization warning len_abuf in audit_log_execve_info
c147adfcfd8e kernel/printk: Convert to hotplug state machine
063774b20ddb seccomp: Fix documentation
797f199e3c55 bpf, inode: add support for symlinks and fix mtime/ctime
e6e34aab6989 genetlink: mark families as __ro_after_init
d79254823985 genetlink: statically initialize families
ec8c53e36b15 genetlink: no longer support using static family IDs
3c3fe01c369f timers: Fix documentation for schedule_timeout() and similar
2baf55a3a7d6 timers: Fix usleep_range() in the context of wake_up_process()
1ada940f56ec kernel/smp: Tell the user we're bringing up secondary CPUs
b70cb7526ed5 kernel/smp: Make the SMP boot message common on all arches
cc54591cc4ee kernel/smp: Define pr_fmt() for smp.c
74edce6e4cbf padata: Remove unused but set variables
daf18f2131fe workqueue: move wq_numa_init() to workqueue_init()
eb8270d0dd4d workqueue: remove keventd_up()
893d6ec4da4f power, workqueue: remove keventd_up() usage
cdda045baa55 workqueue: make workqueue available early during boot
6e6458c76091 workqueue: dump workqueue state on sanity check failures in destroy_workqueue()
45333055c46f selinux: fix unused function warnings when audit is disabled
e5c7306f0c11 Merge branch '4.10-arm64'
40829b155df5 defconfig: disable warning on W^X pages
fe9f3a9add1f arm64: hugetlb: fix the wrong return value for huge_ptep_set_access_flags
6ae098abb2be arm64: entry: improve data abort handling of tagged pointers
0e70913973d8 arm64: don't pull uaccess.h into *.S
cb2a7dc86c12 Revert "arm64: entry: improve data abort handling of tagged pointers"
e13efee3dd15 Replace <asm/uaccess.h> with <linux/uaccess.h> globally
2812a4e6a2c2 cpu/hotplug: Cleanup state names
d13294fb532e ACPI / osl: Remove deprecated acpi_get_table_with_size()/early_acpi_os_unmap_memory()
eb201b599066 ACPI / osl: Remove acpi_get_table_with_size()/early_acpi_os_unmap_memory() users
44d9eec5de06 swiotlb: Export swiotlb_max_segment to users
70d93c212d8c swiotlb: Add swiotlb=noforce debug option
1af83ec2b028 swiotlb: Minor fix-ups for DMA_ATTR_SKIP_CPU_SYNC support
b6ca8e8ee4ed swiotlb: Add support for DMA_ATTR_SKIP_CPU_SYNC
312d077c3318 Revert "swiotlb: Add swiotlb=noforce debug option"
10f42ab79a02 swiotlb: Drop unused functions swiotlb_map_sg and swiotlb_unmap_sg
a401e2a499ed swiotlb: Rate-limit printing when running out of SW-IOMMU space
16f5482f77ca ACPI/NUMA: Do not map pxm to node when NUMA is turned off
77f2c8af9842 treewide: Fix printk() message errors
9e5e8c1e167d PCI/ACPI: Extend pci_mcfg_lookup() to return ECAM config accessors
eadb5d755dd8 arm64: PCI: Exclude ACPI "consumer" resources from host bridge windows
bdc89ed173d8 arm64: PCI: Search ACPI namespace to ensure ECAM space is reserved
b007a0da569c arm64: Work around broken .inst when defective gas is detected
192e4055e460 arm64: Add detection code for broken .inst support in binutils
8dd55fefa7c3 arm64: Remove reference to asm/opcodes.h
3deed503b385 arm/arm64: xen: Move shared architecture headers to include/xen/arm
9efebc9dfd34 arm64: Get rid of asm/opcodes.h
b0082a83291b arm64/cpuinfo: Convert to hotplug state machine
01b8a32b1581 arm64/cpuinfo: Make hotplug notifier symmetric
b5f54a7003b1 ACPI / APEI / ARM64: APEI initial support for ARM64
d09a700c3906 arm64: head.S: Fix CNTHCTL_EL2 access on VHE system
e8eeeabc917c irqchip/gic-v3-its: Specialise readq and writeq accesses
1dea63aa889a irqchip/gic-v3-its: Specialise flush_dcache operation
fe41c46ac921 irqchip/gic-v3: Use nops macro for Cavium ThunderX erratum 23154
6f0fd405344d irqchip/gic-v3: Convert arm64 GIC accessors to {read,write}_sysreg_s
507e6c1cd4f7 arm64: Remove I-cache invalidation from flush_cache_range()
39b2878e6e35 locking/core: Provide common cpu_relax_yield() definition
d3be6c285561 arm64: Support systems without FP/ASIMD
b8a118fb57c1 locking/core, arch: Remove cpu_relax_lowlatency()
8056ef7116e9 locking/core: Introduce cpu_relax_yield()
bed1dec7ee42 efi: Allow bitness-agnostic protocol calls
d900afb67716 arm64: percpu: kill off final ACCESS_ONCE() uses
8ea0a49389cb arm64: hugetlb: fix the wrong address for several functions
60f78f851c86 arm64: Fix typo in add_default_hugepagesz() for 64K pages
a30a1d85e899 arm64: fix error: conflicting types for 'kprobe_fault_handler'
e257016756a2 arm64: Add uprobe support
114074ba3fbd arm64: introduce mm context flag to keep 32 bit task information
cb6a3f8f43dd arm64: Handle TRAP_BRKPT for user mode as well
868afb807783 arm64: Handle TRAP_TRACE for user mode as well
40eade10f1c0 arm64: kgdb_step_brk_fn: ignore other's exception
ee72902e27c7 arm64: kprobe: protect/rename few definitions to be reused by uprobe
fce4e079129c arm64: dump: Add checking for writable and exectuable pages
159a81c3044d arm64: dump: Remove max_addr
dc9a647d9ead arm64: dump: Make the page table dumping seq_file optional
98dbb3753a86 arm64: dump: Make ptdump debugfs a separate option
cb17f4eab21a arm64: mm: set the contiguous bit for kernel mappings where appropriate
3573c47f60ca arm64: mm: replace 'block_mappings_allowed' with 'page_mappings_only'
323215d47b58 arm64: mm: BUG on unsupported manipulations of live kernel mappings
6b029f3e5ff3 arm64: Remove pointless WARN_ON in DMA teardown
155887f5d5cb arm64/kprobes: Tidy up sign-extension usage
989ef20140e9 arm, arm64: don't include blk_types.h in <asm/io.h>
b4cae2bae266 locking/mutex: Kill arch specific code
5e7203fd2226 Merge branch 'disable-qcacld-debug'
7dd3c7413c24 qcacld-3.0: Disable BUILD_DEBUG_VERSION
f028529a17e1 qcacld-3.0: Fix building with BUILD_DEBUG_VERSION disabled
56082a275c4d Revert "mutex: Add a delay into the SPIN_ON_OWNER wait loop."
c291d92a740f defconfig: enable kernel samepage merging (KSM)
7104080e3aeb cpuidle: governors: Remove remaining old module code
58c037c8562d Merge branch '4.10-sched'
f639dff5cb93 sched/dl: Fix comment in pick_next_task_dl()
ebc5d92a6434 cpuidle: Allow enforcing deepest idle state selection
1a64fafa3034 sched/cputime: Simplify task_cputime()
c936c0ba90a3 sched/cputime, powerpc, s390: Make scaled cputime arch specific
d6a212961b28 sched/cputime, powerpc: Remove cputime_to_scaled()
dc523ff18a68 sched/deadline: Fix typo in a comment
e20329b91790 sched/core: Explain sleep/wakeup in a better way
664a5ff4aec0 sched/fair: Kill the unused 'sched_shares_window_ns' tunable
5f55a441f19a Merge branch '4.10-genirq'
3041f8b91b71 genirq/msi: Drop artificial PCI dependency
0ad1090245f5 genirq/affinity: Use default affinity mask for reserved vectors
f3571441ff89 genirq/affinity: Take reserved vectors into account when spreading irqs
de7b1f5b27e3 genirq/affinity: Handle pre/post vectors in irq_create_affinity_masks()
9c6c7b7fed0e genirq/affinity: Handle pre/post vectors in irq_calc_affinity_vectors()
6216f2ba3a1f Merge branch '4.10-locking'
b0aa3f262b9c genirq/affinity: Introduce struct irq_affinity
dade16450782 don't open-code file_inode()
df9d1b1e5b5f locking/rtmutex: Explain locking rules for rt_mutex_proxy_unlock()/init_proxy_locked()
87c088d470ce locking/rtmutex: Get rid of RT_MUTEX_OWNER_MASKALL
abd4ea443db4 locking/lockdep: Provide a type check for lock_is_held
3dfb4a381359 sched/wake_q: Rename WAKE_Q to DEFINE_WAKE_Q
01519b435b4b locking/core: Remove cpu_relax_lowlatency() users
02e89cf06fc9 locking/lockdep: Remove unused parameter from the add_lock_to_list() function
c2cf99466e44 locking/mutex: Enable optimistic spinning of woken waiter
fef71369d974 locking/mutex: Simplify some ww_mutex code in __mutex_lock_common()
cd05a0be136f locking/mutex: Restructure wait loop
34daee92ac01 locking/mutex: Add lock handoff to avoid starvation
7bce3a754bc5 locking/mutex: Rework mutex::owner
d825c1441fe9 Merge branch '4.10-rcu'
014033c53ab8 rcu: Don't kick unless grace period or request
8ae8becfc77b rcu: Make expedited grace periods recheck dyntick idle state
26a55eec5233 torture: Trace long read-side delays
f1fc36e33dc3 rcu: Remove obsolete comment from __call_rcu()
c32659b2d1cf rcu: Remove obsolete rcu_check_callbacks() header comment
5f571d08350f rcu: Tighten up __call_rcu() rcu_head alignment check
ce1f3a498696 mm: ksm: Optimize defaults
test
a295316a501d msm: ipa4: Fix dangling pointer dereferencing after NAT del cmd
438ee86894ce msm: camera: Fix unbalanced cam_mem_mgr_init
604c8cb1a6a4 touchscreen: sec_ts: Fix incorrect memset usage
0286dcf5d720 msm: ipa: Fix erroneous memory free
8600352a105a google_charger: Fix info leak caused by printing uninitialized variable
d5f7acae0acc kernel: Fix cpufreq times memory leaks
00fb6efd7696 usb: pd_engine: Fix memory leaks in probe and destroy
5a1369852515 Revert "usb: pd_engine: Fix memory leaks in probe and destroy"
f2679b3cdadd usb: dwc3: Fix OF memory leak in probe
89cb7bb7476c usb: dwc3: Fix erroneous error handling in probe
5082be753151 msm: sps: Fix memory leaks in sps_register_bam_device
0c5079a65361 msm: vidc: Fix bus_vote memory leaks
8a681432c790 net: ipc_router: Fix remote port memory leak
175625e70cc2 msm: ipa3: Fix memory leak in ipa3_nat_ipv6ct_init_devices
d46e5afc5ee2 modemsmem: Add termination to OF match
8a113774b112 msm: msm_bus: Add a new line after each error message
22febf6ee381 ion: add movability support for page pools
dad70b3342d6 mm/swap: fix unused variable warning
84048b9a68ea Revert "ipv4: enable rp filter by default on all interfaces"
9466e12aee96 Revert "defconfig: enable GCMA and cleancache"
u
d43373ee169a defconfig: disable download mode support
ac937ed75c3e kernel: fake system calls on seccomp to succeed
7dc932239b2b drivers: pinctrl: mask non-wakeup interrupts in suspend path
094aa5b81f36 mm: separate out the invocation of lowmemorykiller shrinker
1fde5363d609 crypto: arm64/crc32 - merge CRC32 and PMULL instruction based drivers
0e6dd1bc8b3d BACKPORT: mm: fix pageblock heuristic
be29888a0354 qcacld: don't warn about unused declarations
7dd34a64557e Revert "b1c1_defconfig: Disable debugfs"
9fb43512ae56 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
2d195054bad3 fscrypt: make fscrypt_operations.max_namelen an integer
c6727c6f8046 mm, page_alloc: wakeup kcompactd even if kswapd cannot free more memory
ff01248883b0 setlocalversion: avoid calling git describe
84f7daf4da6a defconfig: Disable Sharp Zaurus USB network support
febb1effa9e9 kernel: time: reduce ntp wakeups
195cc18e784d qcacld: reduce log spam
88fad6c74f52 msm-poweroff: move panic detection out from CONFIG_QCOM_DLOAD_MODE
2b73c080de27 defconfig: Disable execprog
92f329002fd3 init: add execprog
d4b2e0aa32db r8152: switch to realtek.com.tw release v2.11.0
3a6a99b95182 f2fs: switch FB notifier API to MSM DRM notifier
ufs-1lane
453076d835d5 ARM: dts: msm: Restrict sdm845 to 1 UFS lane per direction
1ac43b76a2ba Revert "scsi: ufs: Add compile-time config to limit number of TX lines used"
4bf59fd63048 Revert "defconfig: Restrict UFS TX lanes"
1d84cc7e39b7 defconfig: Update to stable version v15
627f01b8a905 cpu_input_boost: Suppress input boost if duration is 0
93217173476d init: Tune schedutil ratelimits in profiles
17e32ebddac1 kernel: Only boost for 32 ms on zygote fork
683e69d072fd kernel: Boost DDR bus on zygote fork
e202d81cfe68 kernel: Only boost on fork if the screen is on
dc36c33d9f27 kernel: Boost whenever a zygote-forked process becomes a top app
ba1b174f8197 Revert "kernel: Boost CPU to the max when Pixel launcher becomes a top app"
3a060f5c23ae init: Reduce frame boost timeout on battery profile
6871c377fdc2 cpu_input_boost: Cancel general unboost work alongside other boosts
5e177a4dac35 defconfig: Sync
1e7c9ada03f2 state_notifier: Move to miscellaneous driver location
4452038b7c4b state_notifier: Clean up unused and unnecessary cruft
67b67a116981 sched/tune: Block boost requests from libperfmgr and init
d3a71e0c35ea Revert "sched/tune: block userspace boosting when in-kernel boost is enabled"
65ace18f8385 cpu_input_boost: Allow full general boost control via timeout
dc073886f0b9 cpu_input_boost: Fix incorrect SchedTune boost location
upstream-stable
e4e871903232 Merge remote-tracking branch 'als/android-msm-bluecross-4.9' into upstream-stable
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
152b1975be1b tick: Don't clear idle and iowait sums on CPU down
b480730bdf0b drivers: i2c: Fix direct reference to HZ
ddd30747bf49 selinux: don't require auditing
d13c2b34e989 defconfig: disable twofish and bluetooth debugfs
09b0680c9fc6 defconfig: enable debug monitors
d1ca4719a120 defconfig: disable vmstat event counters
7ec240501deb arm64: allow disabling hardware CPU debugging support
b17107fb6b26 arm64: debug-monitors: disable self-hosted debug by default
21d0b3c3856d defconfig: disable memory compaction
a17a5a4b5239 Merge branch 'revert-fsync-control'
6e4f002c2384 Revert "Added fsync on/off support."
30e7eb3e3025 Revert "fs: sync: Avoid calling fdget without fdput"
vma-swap-ra
bcb0208eb9ef mm, swap: add swap readahead hit statistics
c5b5afae5937 mm/vmalloc.c: don't reinvent the wheel but use existing llist API
bf40a0344f4d mm/vmstat.c: fix wrong comment
42ffe9ce4ff3 Merge remote-tracking branch 'als/android-msm-bluecross-4.9'
d05bf0862f38 Revert "EXPERIMENTAL: defconfig: use userspace lmkd"
6a9f7f219309 Revert "defconfig: bump input boost duration to 80 ms"
946e74073de3 EXPERIMENTAL: defconfig: disable devfreq boost
5ec4c7fc6978 cpu_input_boost: only kick general boost when the screen is on
a81c4ddf8f54 Revert "Merge branch 'zram-skip-swapcache'"
fd315d111ffe Revert "Revert "scsi: ufs: disable clock scaling""
322a7c119a5b Merge branch 'zram-skip-swapcache'
1d3e0e36ba29 bdi: introduce BDI_CAP_SYNCHRONOUS_IO
3f624bdfd133 mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
98b7cba2e8b4 mm, swap: skip swapcache for swapin of synchronous device
f22e34c09b33 mm/page_io.c: fix oops during block io poll in swapin path
47796050ab86 swap: add block io poll in swapin path
ce25f65db6ba mm, swap: introduce SWP_SYNCHRONOUS_IO
2a6176cea3d2 scripts/wireguard: Limit connection time to 30 seconds
efbf9b6f46f5 Revert "state_notifier: add a third case for boosting"
d24c9362eb06 qpnp-fg: adjust percentage calculation formula
decce9a2511f Revert "scsi: ufs: disable clock scaling"
c4be6b3394a6 Revert "ANDROID: dm-crypt: run in a WQ_HIGHPRI workqueue"
d439564fa1cf sched_clock: shut. up.
7f8cf34e2f66 qpnp-fg-gen3: limit fg data queries to once per 8 seconds
7b148db64fc0 tcp_westwood: tune RTT values, mark as __read_mostly
315ad518cdc2 qcacld-3.0: disable some debugging features
vmalloc-opt
b618bc44a7d7 mm/vmalloc.c: use rb_entry_safe
ff85a2aaa180 mm/vmalloc.c: simplify /proc/vmallocinfo implementation
84fb20a2c219 mm/vmap: keep track of free blocks for vmap allocation
49b609c43ffb list: introduce list_for_each_entry_from_reverse helper
de272ed4e80c mm/vmalloc.c: halve the number of comparisons performed in pcpu_get_vm_areas()
070b2270a220 Revert "mm: Update is_vmalloc_addr to account for vmalloc savings"
45dad4d4c3b8 cpufreq: schedutil: update warn_on with bug_on
00b8bae2223b Revert "defconfig: Remove zRAM"
c81ad39e89ac Revert "defconfig: slmk 128m"
ffae6d15aac9 Revert "scsi: ufs: Remove CPU latency voting to save power"
f9095faee286 defconfig: slmk 128m
93769e4b4049 Revert "defconfig: Disable /proc/kallsyms"
4d8568914b50 Revert "cpufreq: FREQ GOV HAX"
2f049a7544af Revert "defconfig: BOOST FREQ HAX"
f1bfbe587ac8 Revert "cpu_input_boost: Make all params read-only"
324a07ba1faa Revert "Merge branch 'revert-nc-sched-backports'"
3b89a3ce6f47 cpu_input_boost: Make all params read-only
dd90fd589937 defconfig: BOOST FREQ HAX
15dee3381f85 cpufreq: FREQ GOV HAX
987d8d8ad194 defconfig: Bump default SchedTune boost level
wlan
4a106c56cf10 qcacld-3.0: disable mac randomization by default
dbd8054d2588 add specialized MAC randomization for qcacld-3.0
899206f328b7 qcacld-3.0: Reduce qcom_rx_wakelock timeouts to 7 seconds
ff5b036bb1b7 Merge branch 'revert-clang-hacks'
1c601be0ef40 Revert "ANDROID: HACK: arm64, LLVMLinux: replace prfm instruction in spin_lock_prefetch()"
a1c37a08cb95 Revert "LLVMLINUX: DO-NOT-UPSTREAM arm64, LLVMLinux: prfm"
2559104be002 Revert "ANDROID: HACK: futex, LLVMLinux: don't optimize futex_detect_cmpxchg() on ARM64"
b071e678491c Merge branch 'zram-zstd'
b3bd9a7edfc0 zram: use zstd over lz4 over lzo by default
36906ac32bc1 defconfig: enable zstd
d0fa2d8a27bc zram_drv.c: use pointer as per commit https://github.com/freak07/bluecross/commit/1cdb7f9c79812ecb70c698f7eb5574a47464585f
4d65fd2bb730 Revert "Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write""
76739d97bc8b Revert "Revert "mm/block: convert rw_page users to bio op use""
ec4413dc8ebd zram_drv.c: make zstd default compression algorithm, use lzo as a fallback
6b9c099d97c2 BACKPORT: crypto: zstd - Add zstd support
7b99ea0f72d5 UPSTREAM: drivers/block/zram/zram_drv.c: fix bug storing backing_dev
b3371525dd94 BACKPORT: zram: introduce zram memory tracking
bf3be17249c9 BACKPORT: zram: record accessed second
7bb47c49fdd2 BACKPORT: zram: mark incompressible page as ZRAM_HUGE
5a621e1607b9 UPSTREAM: zram: correct flag name of ZRAM_ACCESS
cafa93a8c470 UPSTREAM: zram: Delete gendisk before cleaning up the request queue
5a64fd5f1b6f UPSTREAM: drivers/block/zram/zram_drv.c: make zram_page_end_io() static
3a1b6ae3f5c4 BACKPORT: zram: set BDI_CAP_STABLE_WRITES once
82dcf0969021 UPSTREAM: zram: fix null dereference of handle
76ec4805f2cb UPSTREAM: zram: add config and doc file for writeback feature
44dcdb9ad4a0 BACKPORT: zram: read page from backing device
44141f625db4 BACKPORT: zram: write incompressible pages to backing device
f9487dd3d947 BACKPORT: zram: identify asynchronous IO's return value
5a2859ed3e3f BACKPORT: zram: add free space management in backing device
c96d6c4e3c72 UPSTREAM: zram: add interface to specif backing device
5286b4c41c7b UPSTREAM: zram: rename zram_decompress_page to __zram_bvec_read
7a4b0d0fefcd UPSTREAM: zram: inline zram_compress
e75026d980e7 UPSTREAM: zram: clean up duplicated codes in __zram_bvec_write
0264bc746786 UPSTREAM: zram: add zstd to the supported algorithms list
5749154c5812 UPSTREAM: lib: Add zstd modules
fb205881c979 UPSTREAM: lib: Add xxhash module
d09190ad1f06 UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()
9a2281755931 UPSTREAM: zram: constify attribute_group structures.
5c0818ff10d6 UPSTREAM: zram: count same page write as page_stored
462937d99516 UPSTREAM: zram: reduce load operation in page_same_filled
20bf041d4dd7 UPSTREAM: zram: use zram_free_page instead of open-coded
d3af2c9e919e UPSTREAM: zram: introduce zram data accessor
93d1060af4cd UPSTREAM: zram: remove zram_meta structure
7d234c66cc93 UPSTREAM: zram: use zram_slot_lock instead of raw bit_spin_lock op
a7191058ba68 BACKPORT: zram: partial IO refactoring
d80238fbc78c UPSTREAM: zram: use __GFP_MOVABLE for memory allocation
cb66adc663de BACKPORT: zram: handle multiple pages attached bio's bvec
86c9aadb5d03 UPSTREAM: zram: fix operator precedence to get offset
828a88674553 BACKPORT: zram: extend zero pages to same element pages
a4d51e3d8d67 BACKPORT: zram: remove waitqueue for IO done
fc42fd3f4a3e Revert "mm/block: convert rw_page users to bio op use"
b1d98cf1e689 Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write"
46f1c9baa318 Revert "staging: zram: Rate limit memory allocation errors"
e9e441cb71c5 Revert "UPSTREAM: zram: rework copy of compressor name in comp_algorithm_store()"
14455cf6f3a7 Revert "zram: use __GFP_MOVABLE for memory allocation"
75356bdb7fee Revert "power: Block all them crazy wakelocks"
937a8b66db21 gpu: adreno: only compile Adrneo 6xx driver
9c8af3d2fb7e defconfig: disable menu cpuidle governor
11d8939cbd4e cpuidle: allow disabling menu governor if lpm is available
adfffc6cdf90 defconfig: disable unused touchscreen drivers
8641ae90346a usb: correct function name
02b3f829115b Revert "defconfig: disable watchdog and memory dump support"
04f6ca47773b defconfig: sync
6513b6de83bc hwmon: qpnp-adc: Fix enum conversion warning
de86b792bf65 icnss: Fix enum-conversion warning from Clang
a43940657556 thermal: tsens: Fix enum-conversion warnings
4b9ca49350c0 soc: qcom: minidump: Fix third argument to strlcpy
ff73d63ad359 usb: f_gsi: Fix enum conversion warning
6feaf724257c sched/core: Properly fix constant logical operand Clang warning
d46925c558b8 msm: msm_bus: Remove unnecessary self assign statement
wq-backports
0b22a0b9c665 workqueue: Show the latest workqueue name in /proc/PID/{comm,stat,status}
8656b9d5f26b workqueue: Set worker->desc to workqueue name by default
7f0ed34b37c6 workqueue: Make worker_attach/detach_pool() update worker->pool
8b3e3f828ae9 workqueue: Replace pool->attach_mutex with global wq_pool_attach_mutex
47c8c0f99ff8 Merge branch 'procfs-mm-backports'
025aa6a277bd proc: Consolidate task->comm formatting into proc_task_name()
2f95dee0f1c9 proc: Don't allow empty /proc/PID/cmdline for user tasks
3ec4464374b1 proc: reject "." and ".." as filenames
8b032960d15c proc: do mmput ASAP for /proc/*/map_files
46f37307cb9c proc: faster /proc/cmdline
7450fb327e5c proc: register filesystem last
884e658297a4 proc: fix /proc/*/map_files lookup some more
5f666b6d073e fs/proc/proc_sysctl.c: remove redundant link check in proc_sys_link_fill_cache()
f7dcb1ff8a11 proc: use set_puts() at /proc/*/wchan
a220856ad48f proc: check permissions earlier for /proc/*/wchan
45050880c600 proc: replace seq_printf by seq_put_smth to speed up /proc/pid/status
1ef767e7a5ab proc: optimize single-symbol delimiters to spead up seq_put_decimal_ull
98fe45cff521 proc: replace seq_printf on seq_putc to speed up /proc/pid/smaps
1969c2b4610a proc: add seq_put_decimal_ull_width to speed up /proc/pid/smaps
90277016400c proc: show MADV_FREE pages info in smaps
6c184f21bcb3 fs/proc/task_mmu.c: do not show VmExe bigger than total executable virtual memory
ecf2e5b64dce mm: consolidate page table accounting
dc9cea6bc916 mm: introduce wrappers to access mm->nr_ptes
7de1a58afc4f mm: account pud page tables
b048336a3043 proc: account "struct pde_opener"
3bb9423ab7a6 proc: move "struct pde_opener" to kmem cache
f508e22a47ac fs/proc: use __ro_after_init
21a33e02c96a proc: faster open/close of files without ->release hook
e29ba7d03df3 proc: kmalloc struct pde_opener
ca8906c804e5 proc: move /proc/sysvipc creation to where it belongs
3e3c6b23f175 proc: do less stuff under ->pde_unload_lock
a7cf422509fa proc: get rid of task lock/unlock pair to read umask for the "status" file
e02df0fcc926 procfs: optimize seq_pad() to speed up /proc/pid/maps
4d3c6f13910f procfs: add seq_put_hex_ll to speed up /proc/pid/maps
c9c7adf9db85 mm: Avoid page waitqueue race leaving possible page locker waiting
d2470b62fe20 mm: workingset: tell cache transitions from workingset thrashing
006cba305ad1 arm64: dma-mapping: alloc page order based on domain pgsize
393487ba2995 msm: ipa3: Initialize parameters for registering client
984f4ebee393 drm/msm/dp: update sink voltage and pre-emphasis
655b88c4ac70 tick/nohz: Fix softlockup on scheduler stalls in kvm guest
e053e5a4a27f Revert "block: defer timeouts to a workqueue"
0c408463923d defconfig: Re-enable sysrq triggers
a276a1fe57b4 mm: alloc_contig: re-allow CMA to compact FS pages
3d192ae02871 Revert "f2fs: Convert rapid GC to use global display state tracker"
bb9541b6e3c2 Revert "f2fs: Simplify rapid GC display state notifier"
49d36c8deccd Revert "f2fs: Simplify rapid GC worker control flow"
df80f9dfa241 Revert "devfreq_boost: Convert to global display state tracker"
9e4f1b333e7d Merge branch 'revert-gcma'
89a364176720 defconfig: Remove GCMA option
24ad739e57c6 Revert "Merge branch 'gcma'"
068cb224d2b4 Revert "gcma: make cleancache and frontswap completely optional"
2c350cf64e72 Revert "gcma: make stats accounting configurable"
73afd0704026 treewide: Update usages of boost task check helper
xarray
9b2fe2a8367b pid: replace pid bitmap implementation with IDR API
0adbe1e9ab59 fscache: use appropriate radix tree accessors
24e95e504c5c export __set_page_dirty
70a9ed23fe1b arm64: turn flush_dcache_mmap_lock into a no-op
84111a98e55f mm: remove reference to PG_buddy
8dc2c6884c3d mm: introduce _slub_counter_t
187d5be0be9d mm: remove misleading alignment claims
346ed8ffc3ca mm: de-indent struct page
240290d64357 mm: align struct page more aesthetically
2d337b35165e mm: store compound_dtor / compound_order as bytes
58752c152f86 mm: get 7% more pages in a pagevec
3b762f75ce14 z3fold: fix possible reclaim races
b2837c405781 Revert "FROMLIST: z3fold: fix wrong handling of headless pages"
0e330919b176 Revert "Revert "HACK: sched/tune: clamp boosts with a value of 10""
9aba799b4217 Merge branch 'io-mmap_sem-drop'
6b7f24d21e22 FROMLIST: filemap: drop the mmap_sem for all blocking operations
1e87d90fbb05 FROMLIST: filemap: pass vm_fault to the mmap ra helpers
6099c4ef5ae9 FROMLIST: filemap: kill page_cache_read usage in filemap_fault
b0f91a5f0d71 f2fs: add proper cleancache support
70db1e26d490 powerhint: bump interaction top-app schedtune boost to 20
c0fb2ce68c45 ASoC: wcd934x: fix unused variable warning
502f7e9bf383 defconfig: disable drv2624 haptics driver
fed9f63662a3 wcd934x: add speaker gain control
z3fold-updates
a093250126fa mm/z3fold.c: use gfpflags_allow_blocking
433248f3d03e z3fold: fix memory leak
b8aad5fbca7d z3fold: limit use of stale list for allocation
261f688c7c8e mm: docs: fix parameter names mismatch
5eccf890ec4b mm/z3fold.c: use kref to prevent page free/compact race
f452fee78453 z3fold: fix stale list handling
4a9c5cc03f87 z3fold: fix potential race in z3fold_reclaim_page
400977f34749 z3fold: use per-cpu unbuddied lists
3254540ecc08 z3fold: fix page locking in z3fold_alloc()
9179d025f021 z3fold: fix spinlock unlocking in page reclaim
273316cb6ea3 z3fold: add kref refcounting
67dd5b6880a2 z3fold: extend compaction function
c3ee1d71a95c z3fold: use per-page spinlock
20999175a705 z3fold: fix header size related issues
83a64f3737da z3fold: make pages_nr atomic
f6c603c4925e mm/z3fold.c: limit first_num to the actual range of possible buddy indexes
b6d40a896f49 Merge branch 'test'
2f7752a50ef2 Merge branch 'simple-lmk'
44ed88d557b4 random: strengthen input validation for RNDADDTOENTCNT
1b5ee904cb42 EXPERIMENTAL: defconfig: enable Simple LMK
e0442c6cad75 Merge branch 'max-boost' into simple-lmk
3d3a0c6a7b05 defconfig: enable devfreq boost
53a024cda311 devfreq_boost: convert to simple max boost driver
a067c7d58e10 devfreq: Introduce devfreq boost driver
a451ca29291a defconfig: enable CPU input boost
f3d6082321c2 cpu_input_boost: convert to simple max boost driver
2908e8bb0777 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
705f3b6c4f34 cpu_input_boost: Simplify bitwise operations used to store boost state
dbf164cb2ba5 cpu_input_boost: Destroy workqueue on error path in init
2ec2f2fbfb9a cpu_input_boost: Fix and refactor max boost logic
343ef5094ab3 cpu_input_boost: Add API for boosting all CPUs to max frequency
4d44a25af7f2 cpu_input_boost: Introduce driver for event-based CPU boosting
ecd66038bf8f simple_lmk: Limit mem reclaim invocation to once per OOM'd allocation
961ab263467a simple_lmk: Boost CPU and DDR bus when mem reclaim is invoked
acd626166fff simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
050c782e62db arm64: lib: memory utilities optimization
687c2bf591c9 mm: slub: Default slub_max_order to 0
aad5215574e0 init: add support for USB mass storage function
dd2c89e3ee1f helpers: add test-over-SSH helpers
zram-multibyte
be991afc3261 zram: convert to using memset_l
d9737e8961f0 lib/string.c: add multibyte memset functions
dcdfc005fbcf Merge branch 'z3fold-updates'
a093250126fa mm/z3fold.c: use gfpflags_allow_blocking
433248f3d03e z3fold: fix memory leak
b8aad5fbca7d z3fold: limit use of stale list for allocation
261f688c7c8e mm: docs: fix parameter names mismatch
5eccf890ec4b mm/z3fold.c: use kref to prevent page free/compact race
f452fee78453 z3fold: fix stale list handling
4a9c5cc03f87 z3fold: fix potential race in z3fold_reclaim_page
400977f34749 z3fold: use per-cpu unbuddied lists
3254540ecc08 z3fold: fix page locking in z3fold_alloc()
9179d025f021 z3fold: fix spinlock unlocking in page reclaim
273316cb6ea3 z3fold: add kref refcounting
67dd5b6880a2 z3fold: extend compaction function
c3ee1d71a95c z3fold: use per-page spinlock
20999175a705 z3fold: fix header size related issues
83a64f3737da z3fold: make pages_nr atomic
f6c603c4925e mm/z3fold.c: limit first_num to the actual range of possible buddy indexes
b6d40a896f49 Merge branch 'test'
2f7752a50ef2 Merge branch 'simple-lmk'
44ed88d557b4 random: strengthen input validation for RNDADDTOENTCNT
1b5ee904cb42 EXPERIMENTAL: defconfig: enable Simple LMK
e0442c6cad75 Merge branch 'max-boost' into simple-lmk
3d3a0c6a7b05 defconfig: enable devfreq boost
53a024cda311 devfreq_boost: convert to simple max boost driver
a067c7d58e10 devfreq: Introduce devfreq boost driver
a451ca29291a defconfig: enable CPU input boost
f3d6082321c2 cpu_input_boost: convert to simple max boost driver
2908e8bb0777 cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop
705f3b6c4f34 cpu_input_boost: Simplify bitwise operations used to store boost state
dbf164cb2ba5 cpu_input_boost: Destroy workqueue on error path in init
2ec2f2fbfb9a cpu_input_boost: Fix and refactor max boost logic
343ef5094ab3 cpu_input_boost: Add API for boosting all CPUs to max frequency
4d44a25af7f2 cpu_input_boost: Introduce driver for event-based CPU boosting
ecd66038bf8f simple_lmk: Limit mem reclaim invocation to once per OOM'd allocation
961ab263467a simple_lmk: Boost CPU and DDR bus when mem reclaim is invoked
acd626166fff simple_lmk: Introduce Simple LMK (Low Memory Killer) for Android
050c782e62db arm64: lib: memory utilities optimization
687c2bf591c9 mm: slub: Default slub_max_order to 0
aad5215574e0 init: add support for USB mass storage function
dd2c89e3ee1f helpers: add test-over-SSH helpers
a62e795fcd8f flasher: fix missing blank line
0e811a071b03 flasher: add tuned PowerHAL config
053257c77c47 Revert "qcacld: optimize configs"
74cedabb72c2 Merge branch 'slub-updates'
ef2b12eed329 Revert "slub: make ->inuse unsigned int"
a3322e442764 Revert "slub: make ->object_size unsigned int"
beb8e766e189 Revert "slub: make ->size unsigned int"
84f9ab3d902f defconfig: disable CONFIG_RANDOMIZE_BASE
614861bbe5f9 defconfig: disable SLUB debug checks
50baf9feb44e qcacld: optimize configs
b50adb39232d msm-poweroff: disable download mode by default
668aeb4b90ac qcacld: disable WLAN_LOGGING_SOCK_SVC_ENABLE
518917bd1084 Merge branch 'f2fs-patches'
d5cd7ee815d6 init: set optimal SQLite flags for f2fs
899debbcef8d f2fs: mark is_extension_exist() inline
adc365480fcf f2fs: fix minor typo on extensions reporting
c292a6c5b3d1 f2fs: set ioprio of GC kthread to idle
eb5fc570882a slub: remove 'reserved' file from sysfs
7e5c406aa604 slub: remove kmem_cache->reserved
a2a4447e0a79 slab,slub: remove rcu_head size checks
476beb65d22e mm/slub: remove obsolete comment
ba0ae8b3fba6 slub: make size_from_object() return unsigned int
d0a378f838a8 slub: make slab_index() return unsigned int
96da3c57ac25 slub: make ->size unsigned int
48eb8f1777c5 slub: make ->object_size unsigned int
91cf721dbded slub: make ->inuse unsigned int
82ba084ad1b7 slub: make ->align unsigned int
e7ac3364a12c slub: make ->reserved unsigned int
678e89e50ffc slub: make ->remote_node_defrag_ratio unsigned int
bc403f896da5 EXPERIMENTAL: sdm845: overclock GPU to 810 MHz
18b7efdbfe54 Merge branch 'caf-mm-misc'
807bf376ed01 mm: vmalloc: don't print lowmem information
32516a7f8f3f mm: cma: retry only on EBUSY
69273ec3b034 mm: Kconfig: Add support for config size of purging vmap_area
68209b6380a4 Merge branch 'spf'
ce9bf98b5140 defconfig: enable speculative page fault
6bfb66e67eaa mm: disable fault around on emulated access bit architecture
428a7279beb7 mm: make faultaround produce old ptes
7ee5cfef0147 Revert "mm: memory: reduce fault_around_bytes"
d644d89df68a arm64/mm: add speculative page fault
3063aeaeefa8 arm64/mm: define ARCH_SUPPORTS_SPECULATIVE_PAGE_FAULT
2c3ef0fc2b7d mm: add speculative page fault vmstats
944617a92364 mm: speculative page fault handler return VMA
9e01b88b3e32 mm: adding speculative page fault failure trace events
b87ad03df49e mm: provide speculative fault infrastructure
9a6b91130079 mm: protect mm_rb tree with a rwlock
bc8e541b8786 mm: introduce __page_add_new_anon_rmap()
6e608fa6ed57 mm: introduce __vm_normal_page()
7cd18d41dd15 mm: introduce __lru_cache_add_active_or_unevictable
f98a70f41c11 mm/migrate: Pass vm_fault pointer to migrate_misplaced_page()
ef820c3f46da mm: cache some VMA fields in the vm_fault structure
6e730d6f0f38 mm: protect SPF handler against anon_vma changes
e55cd279301b mm: protect mremap() against SPF handler
4cc259b725be mm: protect VMA modifications using VMA sequence count
6912b5b55198 mm: VMA sequence count
1bd7652db8c9 mm: introduce INIT_VMA()
ac75415d939b mm: make pte_unmap_same compatible with SPF
33ede21ab88d mm: introduce pte_spinlock for FAULT_FLAG_SPECULATIVE
6dea641dfc6e mm: prepare for FAULT_FLAG_SPECULATIVE
1d129972f370 mm: introduce CONFIG_SPECULATIVE_PAGE_FAULT
zram-skip-swapcache
1d3e0e36ba29 bdi: introduce BDI_CAP_SYNCHRONOUS_IO
3f624bdfd133 mm: swap: SWP_SYNCHRONOUS_IO: skip swapcache only if swapped page has no other reference
98b7cba2e8b4 mm, swap: skip swapcache for swapin of synchronous device
f22e34c09b33 mm/page_io.c: fix oops during block io poll in swapin path
47796050ab86 swap: add block io poll in swapin path
ce25f65db6ba mm, swap: introduce SWP_SYNCHRONOUS_IO
2a6176cea3d2 scripts/wireguard: Limit connection time to 30 seconds
efbf9b6f46f5 Revert "state_notifier: add a third case for boosting"
d24c9362eb06 qpnp-fg: adjust percentage calculation formula
decce9a2511f Revert "scsi: ufs: disable clock scaling"
c4be6b3394a6 Revert "ANDROID: dm-crypt: run in a WQ_HIGHPRI workqueue"
d439564fa1cf sched_clock: shut. up.
7f8cf34e2f66 qpnp-fg-gen3: limit fg data queries to once per 8 seconds
7b148db64fc0 tcp_westwood: tune RTT values, mark as __read_mostly
315ad518cdc2 qcacld-3.0: disable some debugging features
3339e23d36f5 defconfig: enable Yama security
5bc7a458296f mm: keep zoneinfo when stripped procfs is enabled
b9ededd127b3 EXPERIMENTAL: defconfig: use userspace lmkd
577ed6b055fe defconfig: release version 10
afe418429aef Revert "defconfig: fully disable dm-verity"
zram-z3fold
3949cbc80fc0 defconfig: use z3fold for zram, disable zsmalloc
6da0e4fc71fb zram: use octal permissions
4522b6cc97e5 zram: Add compile-time support for choosing default allocator
958458beb507 zsmalloc: Add compaction callbacks
68f04cad810d zpool: add compaction api
e3580e631c8c zram: use common zpool interface
0492ebebb9bd z3fold: Don't fail on zRAM allocation requests
f891205d2825 FROMLIST: z3fold: fix wrong handling of headless pages
fcc045503da4 zram: set physical queue limits to avoid array out of bounds accesses
3bcbd74458f5 staging: zram: Rate limit memory allocation errors
d3f53b32471c mm: swap: don't delay swap free for fast swap devices
57a7ec06f025 Revert "zram: update zram to use zpool"
944a21104cac Merge branch 'revert-max-input-boost'
ea071f1b2d89 simple_lmk: remove CPU boost on reclaim
5cad5ac5b6b2 Revert "cpu_input_boost: Introduce driver for event-based CPU boosting"
b76220ecfce6 Revert "cpu_input_boost: Add API for boosting all CPUs to max frequency"
d750961070eb Revert "cpu_input_boost: Fix and refactor max boost logic"
0ff42fb9b67d Revert "cpu_input_boost: Destroy workqueue on error path in init"
845b01f62a94 Revert "cpu_input_boost: Simplify bitwise operations used to store boost state"
cf44aed4f4c1 Revert "cpu_input_boost: Eliminate spin lock by using atomic cmpxchg loop"
6f4b5dafd7fe Revert "cpu_input_boost: convert to simple max boost driver"
12380e7139e5 powerhint: always boost top-app to 1
bc98fee3c751 kbuild: handle libs-y archives separately from built-in.o archives
74b226b6cf86 kbuild: thin archives final link close --whole-archives option
d89ecc401fdb kbuild: minor improvement for thin archives build
f8382e3c18fc irq: Silence IRQ CPU migration message
831fd512efda block: defer timeouts to a workqueue
6aed1973f40e mm: skip swap readahead when process is exiting
zram-zstd
b3bd9a7edfc0 zram: use zstd over lz4 over lzo by default
36906ac32bc1 defconfig: enable zstd
d0fa2d8a27bc zram_drv.c: use pointer as per commit https://github.com/freak07/bluecross/commit/1cdb7f9c79812ecb70c698f7eb5574a47464585f
4d65fd2bb730 Revert "Revert "block/mm: make bdev_ops->rw_page() take a bool for read/write""
76739d97bc8b Revert "Revert "mm/block: convert rw_page users to bio op use""
ec4413dc8ebd zram_drv.c: make zstd default compression algorithm, use lzo as a fallback
6b9c099d97c2 BACKPORT: crypto: zstd - Add zstd support
7b99ea0f72d5 UPSTREAM: drivers/block/zram/zram_drv.c: fix bug storing backing_dev
b3371525dd94 BACKPORT: zram: introduce zram memory tracking
bf3be17249c9 BACKPORT: zram: record accessed second
7bb47c49fdd2 BACKPORT: zram: mark incompressible page as ZRAM_HUGE
5a621e1607b9 UPSTREAM: zram: correct flag name of ZRAM_ACCESS
cafa93a8c470 UPSTREAM: zram: Delete gendisk before cleaning up the request queue
5a64fd5f1b6f UPSTREAM: drivers/block/zram/zram_drv.c: make zram_page_end_io() static
3a1b6ae3f5c4 BACKPORT: zram: set BDI_CAP_STABLE_WRITES once
82dcf0969021 UPSTREAM: zram: fix null dereference of handle
76ec4805f2cb UPSTREAM: zram: add config and doc file for writeback feature
44dcdb9ad4a0 BACKPORT: zram: read page from backing device
44141f625db4 BACKPORT: zram: write incompressible pages to backing device
f9487dd3d947 BACKPORT: zram: identify asynchronous IO's return value
